{"version":3,"sources":["components/lifting/LiftingView.module.scss","components/meet-setup/ColorPicker.module.scss","components/lifting/LiftingHeader.module.scss","components/results/ResultsView.module.scss","components/flight-order/OneFlightOrder.module.scss","components/lifting/BarLoad.module.scss","components/lifting/LiftingTable.module.scss","components/common/ContentArea.module.scss","components/lifting/LiftingFooter.module.scss","serviceWorker.js","translations/index.ts","components/translations/OpenLifterIntlProvider.tsx","components/translations/LanguageSelector.tsx","actions/languageActions.ts","actions/globalActions.ts","types/utils.ts","logic/units.ts","logic/strings.ts","versions.ts","reducers/versionsReducer.ts","logic/date.ts","constants/plateColors.ts","reducers/meetReducer.ts","logic/entry.ts","reducers/registrationReducer.ts","reducers/liftingReducer.ts","reducers/rootReducer.ts","reducers/languageReducer.ts","components/home/NewMeetModal.tsx","components/ErrorModal.tsx","containers/HomeContainer.tsx","components/ValidatedInput.tsx","actions/meetSetupActions.ts","components/meet-setup/MeetDate.tsx","components/common/NumberInput.tsx","components/meet-setup/MeetLength.tsx","components/meet-setup/PlatformCount.tsx","components/meet-setup/PlatformCounts.tsx","components/meet-setup/AutoFillRules.tsx","components/meet-setup/DivisionSelect.tsx","components/meet-setup/WeightClassesSelect.tsx","components/meet-setup/BarAndCollarsWeightKg.tsx","components/meet-setup/ColorPicker.tsx","components/meet-setup/PlateInput.tsx","components/meet-setup/Plates.tsx","components/common/YesNoButton.tsx","components/meet-setup/MeetSetup.tsx","containers/MeetSetupContainer.tsx","components/registration/LifterTable.tsx","components/translations/LocalizedString.tsx","validation/iso8601Date.ts","validation/positiveInteger.ts","actions/registrationActions.ts","components/registration/LifterRow.tsx","components/registration/NewButton.tsx","logic/export/csv.ts","logic/parsers.ts","logic/import/registration-csv.ts","logic/export/registrations.ts","components/registration/RegistrationView.tsx","containers/RegistrationContainer.tsx","components/weighins/LifterTable.tsx","actions/liftingActions.ts","components/weighins/WeightInput.tsx","components/weighins/LifterRow.tsx","components/weighins/WeighinsView.tsx","containers/WeighinsContainer.tsx","logic/barLoad.ts","components/lifting/BarLoad.tsx","components/lifting/LeftCard.tsx","components/lifting/AttemptInput.tsx","logic/coefficients/ah.ts","logic/coefficients/dots.ts","logic/coefficients/foster-mcculloch.ts","logic/coefficients/schwartzmalone.ts","logic/coefficients/wilks.ts","logic/coefficients/glossbrenner.ts","logic/coefficients/ipf.ts","logic/coefficients/reshel.ts","logic/coefficients/coefficients.ts","logic/coefficients/bodyweight-multiple.ts","logic/coefficients/nasa.ts","logic/liftingOrder.ts","logic/divisionPlace.ts","components/lifting/LiftingTable.tsx","components/lifting/LiftingFooter.tsx","components/lifting/LiftingHeader.tsx","components/lifting/ColumnWidth.tsx","components/lifting/LiftingView.tsx","containers/LiftingContainer.tsx","components/flight-order/OneFlightOrder.tsx","components/flight-order/FlightOrderView.tsx","containers/FlightOrderContainer.tsx","components/results/ByDivision.tsx","logic/pointsPlace.ts","components/results/ByPoints.tsx","logic/export/oplcsv.ts","logic/export/usapl.ts","components/results/ResultsView.tsx","containers/ResultsContainer.tsx","components/debug/RandomizeHelpers.ts","components/debug/RandomizeMeetSetup.tsx","components/debug/RandomizeRegistration.tsx","components/debug/RandomizeWeighins.tsx","components/debug/StateTools.tsx","containers/DebugContainer.tsx","containers/AboutContainer.tsx","containers/RootContainer.tsx","components/Navigation.tsx","store.ts","App.tsx","index.tsx","components/lifting/LeftCard.module.scss"],"names":["module","exports","liftingView","middleParentContainer","leftCardContainer","rightCardContainer","swatch","color","onTop","header","lifterName","info","controlPanel","dropdown","leftDivider","container","rackInfo","bar","kg50","kg25","kg20","kg15","kg10","kg5","kg2p5","kg1p25","kg1","kg0p75","kg0p5","kg0p25","lbs100","lbs55","lbs45","lbs35","lbs25","lbs10","lbs5","lbs2p5","lbs1p25","lbs0p5","collar","error","liftingtable","textCell","smallCell","spacerCell","activeColumn","attemptInputCell","current","goodlift","nolift","attemptInput","contentArea","footer","leftControls","rightControls","fullscreen","goodLift","noLift","selector","Boolean","window","location","hostname","match","translations","de","eo","en","es","fr","hr","it","lt","nl","pt","ru","tr","zh-Hans","OpenLifterIntlProvider","language","this","props","Error","messages","react","provider","locale","defaultLocale","key","children","React","connect","state","languageOptions","react_default","a","createElement","value","LanguageSelector","FormControl_default","as","defaultValue","onChange","changeLanguage","className","Component","dispatch","event","type","currentTarget","overwriteStore","store","isString","assertString","result","concat","assertFlight","flight","kg2lbs","kg","lbs2kg","lbs","string2number","s","Number","replace","displayWeight","weight","lang","undefined","rounded","Math","round","Intl","NumberFormat","useGrouping","maximumFractionDigits","format","displayWeightOnePlace","truncated","trunc","displayPoints","points","minimumFractionDigits","displayNumber","number","displayPlaceOrdinal","entry","sex","getString","id","localizeEquipment","equipment","delocalizeEquipment","text","localizeEvent","delocalizeEvent","localizeFlight","delocalizeFlight","localizeSex","delocalizeSex","localizeWeightClassStr","wtcls","isSHW","endsWith","asNumber","getDefaultLanguage","navigator","languages","i","length","releaseVersion","process","initialState","stateVersion","localDateToIso8601","d","year","getFullYear","month","getMonth","day","getDate","yearStr","String","monthStr","dayStr","PlateColors","PLATE_DEFAULT_BLACK","PLATE_DEFAULT_WHITE","PLATE_DEFAULT_BLUE","PLATE_DEFAULT_GREEN","PLATE_DEFAULT_GRAY","PLATE_DEFAULT_RED","PLATE_DEFAULT_YELLOW","PLATE_DEFAULT_ORANGE","PLATE_DEFAULT_PINK","PLATE_DEFAULT_PURPLE","defaultPlatesKg","weightKg","pairCount","defaultPlatesLbs","name","country","city","federation","date","Date","lengthDays","platformsOnDays","divisions","weightClassesKgMen","weightClassesKgWomen","weightClassesKgMx","formula","ageCoefficients","combineSleevesAndWraps","allow4thAttempts","inKg","showAlternateUnits","squatBarAndCollarsWeightKg","benchBarAndCollarsWeightKg","deadliftBarAndCollarsWeightKg","plates","getWeightClassStr","classes","bodyweightKg","wtclsStrKg2Lbs","kgcls","shw","floor","getWeightClassLbsStr","newDefaultEntry","platform","birthDate","age","intendedWeightClassKg","events","lot","memberId","paid","team","notes","squatRackInfo","benchRackInfo","squatKg","benchKg","deadliftKg","squatStatus","benchStatus","deadliftStatus","getAge","meetDate","_meetDate$split$map","split","map","_meetDate$split$map2","Object","slicedToArray","my","mm","md","_entry$birthDate$spli","_entry$birthDate$spli2","by","bm","bd","years","getBest5SquatKg","best3SquatKg","max","getBest5BenchKg","best3BenchKg","getBest5DeadliftKg","best3DeadliftKg","getProjectedTotalKg","best3Squat","best3Bench","best3Dead","getProjectedEventTotalKg","includes","getBest3SquatKg","getBest3BenchKg","getBest3DeadliftKg","getFinalTotalKg","getFinalEventTotalKg","getLiftersOnDay","entries","filter","liftToAttemptFieldName","lift","liftToStatusFieldName","entryHasLifted","liftingPresentOnPlatform","getWhetherPlatformsHaveLifted","ret","platformsOnDay","acc","push","nextEntryId","lookup","overrideAttempt","overrideEntryId","columnDivisionWidthPx","combineReducers","versions","arguments","action","meet","objectSpread","numDays","diff","newPlatformsOnDays","slice","count","defaultPlates","defaultBar","classesKg","index","findIndex","p","newPlates","changes","newState","assign","registration","obj","overwriteDefaults","newEntry","previousEntry","entryId","item","attemptOneIndexed","field","newEntries","oldEntry","newarray","newfields","status","success","fieldStatus","platformEntries","e","lifting","attempt","combined","NewMeetModal","Modal_default","show","onHide","close","Header","closeButton","Title","message","defaultMessage","values","meetName","Body","Footer","Button_default","onClick","variant","lib","to","defaultStore","rootReducer","ErrorModal","title","centerConsole","maxWidth","marginRight","marginLeft","buttonMargin","marginBottom","HomeContainer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleLoadClick","loadhelper","document","getElementById","click","handleNewClick","setState","showNewMeetModal","closeConfirmModal","closeErrorModal","handleLoadFileInput","loadHelper","HTMLInputElement","files","selectedFile","redux","rememberThis","assertThisInitialized","reader","FileReader","onload","errored","JSON","parse","target","err","readAsText","handleSaveClick","meetname","stringify","blob","Blob","saveAs","renderContinueButton","block","style","bind","newMeetButton","betaWarning","wrongVersion","dataReleaseVersion","warning","oldVersion","thisVersion","Card_default","styles","home_NewMeetModal","components_ErrorModal","alt","src","Container_default","Row_default","Col_default","href","otherVersion","translations_LanguageSelector","rel","textAlign","releaseDate","accept","display","BirthDateInput","validate","handleKeyDown","blur","handleChange","handleBlur","initialValue","onSuccess","validation","maybeLabel","label","Form_default","Label","Group","keepMargin","Control","placeholder","disabled","onKeyDown","onBlur","isValid","isInvalid","setDivisions","setLengthDays","setPlatformsOnDays","setWeightClasses","updateMeet","registerLocale","zh_CN","MeetDate","initialDate","_s$split","_s$split2","parseInt","setFullYear","iso8601ToLocalDate","FormGroup_default","react_datepicker_min_default","dateFormat","selected","setMeetDate","inline","NumberInput","num","handleDecrement","handleStep","step","handleIncrement","n","multiple","abs","ceil","InputGroup_default","Prepend","borderRight","onMouseDown","index_es","icon","faMinus","Append","borderLeft","faPlus","MeetLength","isInteger","common_NumberInput","days","PlatformCount","PlatformCounts","createPlatformInputs","inputs","meet_setup_PlatformCount","traditionalDefaults","bpDefaults","gpcDefaults","spfDefaults","upaDefaults","usaplDefaults","uspaDefaults","wabdlDefaults","wpcDefaults","wrpfDefaults","AutoFillRules","handleSelectChange","selectedOption","handleClick","stringTraditional","stringBP","stringGPC","stringSPF","stringUPA","stringUSAPL","stringUSPA","stringWABDL","stringWPC","stringWRPF","width","components","DropdownIndicator","createOption","DivisionSelect","maybeUpdateRedux","objarray","actionMeta","Array","handleInputChange","inputValue","_this$state","preventDefault","newValue","toConsumableArray","division","_this$state2","react_select_browser_esm","isMulti","menuIsOpen","onInputChange","WeightClassesSelect","isNaN","isFinite","sort","b","c","selectClassesBySex","ownProps","BarAndCollarsWeightKg","getInitialBarAndCollarsWeightKg","setBarAndCollarsWeightKg","getLiftLabel","ColorPicker","clearTimeout","timeoutId","displayColorPicker","handleMouseLeave","setTimeout","handleMouseEnter","clientX","hex","toUpperCase","_this2","colors","picker","Popper","placement","_ref","ref","data-placement","react_color_lib","triangle","Manager","onMouseLeave","onMouseEnter","Reference","_ref2","background","PlateInput","meet_setup_ColorPicker","Plates","validateAmountInput","widget","asNum","updateHandler","amount","isNumber","setPlateConfig","renderWeightRow","meet_setup_PlateInput","plateRows","unitId","stringPlate","Table_default","striped","size","hover","margin","YesNoButton","ButtonGroup_default","active","setValue","no","yes","MeetSetup","validateRequiredText","ticker","stringMeetName","stringFederation","stringCountry","stringStateProvince","stringCityTown","stringKilograms","stringPounds","stringMensClasses","stringWomensClasses","stringMxClasses","stringAH","stringBodyweightMultiple","stringDots","stringGlossbrenner","stringIPFPoints","stringNASAPoints","stringSchwartzMalone","stringTotal","stringWilks","stringNone","stringFosterMcCulloch","stringNo","stringYes","stringAlsoKilograms","stringAlsoPounds","ValidatedInput","setMeetName","setFederation","setCountry","setCity","meet_setup_MeetDate","meet_setup_MeetLength","meet_setup_PlatformCounts","meet_setup_AutoFillRules","meet_setup_DivisionSelect","meet_setup_WeightClassesSelect","setFormula","setAgeCoefficients","common_YesNoButton","setCombineSleevesAndWraps","setAllow4thAttempts","setInKg","setShowAlternateUnits","meet_setup_BarAndCollarsWeightKg","meet_setup_Plates","fed","bool","assertFormula","coefficient","assertAgeCoefficients","MeetSetupContainer","meet_setup_MeetSetup","LifterTable","renderRows","LifterRow","rowRenderer","LocalizedString","injectIntl","Consumer","intl","validateIso8601Date","pieces","_pieces","onlyNumbers","validatePositiveInteger","inclusiveMax","startsWith","newRegistration","deleteRegistration","updateRegistration","updateRegistrationLot","updateRegistrationMemberId","updateRegistrationBirthDate","updateRegistrationAge","updateRegistrationCountry","updateRegistrationState","updateRegistrationTeam","updateRegistrationInstagram","instagram","updateRegistrationNotes","validateAge","pos","selectedDay","deleteRegistrationClick","updateRegistrationDay","updateRegistrationPlatform","updateRegistrationFlight","updateRegistrationName","updateRegistrationSex","updateRegistrationDivisions","updateRegistrationEvents","updateRegistrationEquipment","assertSex","dayOptions","platformOptions","divisionOptions","selectedDivisions","selectedEvents","gridStyle","padding","stringState","stringBirthDatePlaceholder","stringMemberIdPlaceholder","stringSelectPlaceholder","eventOptions","overflow","minWidth","translations_LocalizedString","dist_react_select_browser_esm","menuPlacement","options","isClearable","min","toString","Text","NewButton","csvString","x","trim","csvDate","iso8601","getSpreadsheetColumnName","alphabet","mod","remainder","Csv","fieldnames","rows","createClass","indexOf","namelist","j","splice","removeColumnByIndex","empty","removeEmptyColumns","lines","row","headers","join","strRows","parseInteger","charcode","charCodeAt","parseDate","makeExampleRegistrationsCsv","csv","division1","division2","division3","event1","event2","event3","birthdate","memberid","appendColumns","loadRegistrations","division_template","event_template","col_day","col_platform","col_flight","col_name","col_sex","col_equipment","col_division1","col_division2","col_division3","col_division4","col_division5","col_event1","col_event2","col_event3","col_event4","col_event5","col_birthdate","col_age","col_memberid","col_country","col_state","col_lot","col_team","col_instagram","col_notes","MANDATORY_FIELDNAMES","OPTIONAL_FIELDNAMES","colname","allfields","iname","jname","errprefix_template","fieldname","val","rowstr","errprefix","integer","platforms","m","f","mx","bare","sleeves","wraps","single","multi","evt","sbd","sb","sd","makeRegistrationsCsv","fill","column","prevIndex","insertColumn","globalImportKind","RegistrationView","handleDownloadCsvTemplateClick","global","filename","handleExportCsvClick","handleOverwriteClick","handleAppendClick","maybeError","fromString","maybeEntries","entryIds","alert","onloadstart","isLoadingFiles","onloadend","numEntries","faSpinner","spin","registration_LifterTable","registration_NewButton","RegistrationContainer","registration_RegistrationView","inLiftingPage","renderHeader","shortStyle","bodyweightId","squatId","benchId","deadliftId","enterAttempt","WeightInput","weightNum","weightStr","multipleOf","updateRegistrationSquatRackInfo","updateRegistrationBenchRackInfo","validateRack","hasSquat","hasBench","hasDeadlift","disableSquatWeight","disableBenchWeight","disableDeadliftWeight","ageStr","weighins_WeightInput","WeighinsView","getNumDaysFromEntries","max_day","dayCards","lifters","dayNumber","weighins_LifterTable","WeighinsContainer","weighins_WeighinsView","safeKg2Lbs","selectPlates","loadingKg","barAndCollarsWeightKg","loadingAny","barAndCollarsWeightAny","platesAny","sortedPlates","sideWeightKg","loading","weightAny","isAlreadyLoaded","findWeightFrom","startFrom","BarLoad","weightKgToStyle","weightLbsToStyle","weightLbs","weightAnyToText","renderPlates","divs","plateCount","showCounter","plate","counter","is_light","backgroundColor","opacity","border","LeftCard","getBarLoadProps","fieldKg","idx","getBarAndCollarsWeightKg","currentEntryId","next","nextAttemptOneIndexed","weightKgText","weightLbsText","currentLoading","nextLoading","relativeTo","finger","loadedPlate","makeLoadingRelative","nextEntryName","nextBarLoad","loadingBar","nextText","lifter","barArea","lifting_BarLoad","attemptTemplate","activeCard","attemptText","AttemptInput","asKg","prevAttemptOneIndexed","prevKg","prevStatus","fixups","lastGoodValue","ah","totalKg","adjusted","pow","log10","ahMen","ahWomen","dotsPoly","x2","x3","dots","dotsMen","dotsWomen","AGE_COEFFICIENTS","fosterMcCulloch","schwartz_coefficient","malone_coefficient","wilksPoly","x4","wilksMen","wilksWomen","glossbrenner","glossbrenner_coefficient_men","glossbrenner_coefficient_women","PARAMETERS","M","Sleeves","SBD","S","B","D","Single-ply","F","reshel","normalized","reshelMen","reshelWomen","getPoints","bodyweight_multiple","normalizedEquipment","normalizedSex","params","bw_log","log","ipfpoints","nasapoints","schwartzmalone","wilks","getAgeAdjustedPoints","getNextAttemptNumberForEntry","weightsKg","statuses","MAX_ATTEMPTS","getMaxAttemptNumberForEntry","compareEntriesByAttempt","aKg","bKg","orderEntriesByAttempt","getLiftingOrder","entriesInFlight","earliestAttemptOneIndexed","latestAttemptOneIndexed","getActiveAttemptNumber","orderedEntries","attemptZeroIndexed","existsNextAttempt","existsPrevAttempt","byNextAttempt","byThisAttempt","byPrevAttempt","notLifting","prototype","orderEntriesForAttempt","getCurrentEntryId","nextEntryInfo","currentEntryIndex","hasAttempt","notTaken","getNextEntryInfo","categoryToKey","category","keyToCategory","getLastSuccessfulLift","getLastSuccessfulAttempt","sortByPlaceInCategory","clonedEntries","aTotal","bTotal","aLastSuccessfulLift","bLastSuccessfulLift","aLastSuccessfulLiftIndex","bLastSuccessfulLiftIndex","aLastSuccessfulAttempt","bLastSuccessfulAttempt","getEventSortOrder","ev","getEquipmentSortOrder","eq","getSexSortOrder","mapSexToClasses","men","women","getAllResults","categoryMap","Map","classesForSex","weightClassStr","dividx","evidx","catEntries","get","set","results","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","_ref3","return","catA","catB","aSex","bSex","aEvent","bEvent","aEquipment","bEquipment","aIsSHW","bIsSHW","sortCategoryResults","getFinalResults","globalFocusAttemptInputId","globalHighestAttemptInputAttempt","LiftingTable","renderBest3AttemptField","columnType","best3","lightestFailed","renderAttemptField","wStr","displayStr","lifting_AttemptInput","maybeNegative","anyPreviousAttemptTaken","currentAndHasPrevious","nextAndTookLast","meetState","renderCell","categoryResults","cell","bw","bwStr","weightClass","firstDiv","ordinal","columns","cells","col","rowClassName","getColumnHeaderLabel","useProjected","highlightColumn","nameCell","divisionCell","LiftingFooter","handleDayChange","setLiftingGroup","handlePlatformChange","handleFlightChange","handleLiftChange","assertLift","handleAttemptChange","handleLifterChange","setFocusAttemptInputTimeout","elem","focus","handleOnMouseEnter","activeElement","HTMLElement","handleGoodLift","markLift","handleNoLift","hasFullscreenElement","doc","fullscreenElement","webkitFullscreenElement","mozFullscreenElement","msFullscreenElement","exitFullscreen","webkitExitFullscreen","mozExitFullscreen","msExitFullscreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullscreen","msRequestFullscreen","handleFullscreen","makeLifterOptions","lifterOptions","numPlatforms","dayTemplate","platformTemplate","liftOptions","flightOptions","flightTemplate","flightsOnPlatform","attemptOptions","toggleReplaceTableWithWeighins","LiftingHeader","infoBuilder","MULTIPLE","ColumnWidth","fieldName","setTableInfo","pattern","LiftingView","replaceTableWithWeighins","now","rightElement","lifting_LiftingTable","lifting_ColumnWidth","lifting_LiftingHeader","lifting_LeftCard","lifting_LiftingFooter","entriesOnPlatform","flights","LiftingContainer","lifting_LiftingView","OneFlightOrder","getOrderBy","entriesForLift","bySquat","byBench","byDeadlift","maxRows","builder","content","getColumnHeader","FlightOrderView","updateDay","updatePlatform","handlePrint","print","selectorStyle","shownEntries","knownFlights","flightOrders","_loop","flight_order_OneFlightOrder","FlightOrderContainer","flight_order_FlightOrderView","ByDivision","renderEntryRow","place","pointsStr","squat","bench","deadlift","weightTemplate","weightString","mapSexToLabel","renderCategoryResults","eqpstr","units","marginTop","categoryCards","panel","sortByFormulaPlaceInCategory","indexMap","memoizedPoints","aIndex","bIndex","aPoints","bPoints","getAllRankings","sortPointsCategoryResults","ByPoints","rank","firstDivision","numDivisions","total","categoryString","agePointsCategory","addEntriesRow","cls","unit","finalEventTotalKg","standardizeEquipment","exportAsOplCsv","meetCsv","makeMeetCsv","entriesCsv","squatFieldnames","benchFieldnames","deadliftFieldnames","_results$_i","makeEntriesCsv","versionStr","addDataRow","hasDL","makeBirthDate","translateEvent","exportAsUSAPLCsv","_results$i","assertValidResultsBy","resultsBy","globalMergeDay","globalMergePlatform","ResultsView","makeDayOptions","justDayTemplate","handleByChange","handleExportAsOplCsvClick","handleExportAsUSAPLCsvClick","handleExportPlatformClick","exportname","handleMergePlatformClick","mergePlatform","makePlatformMergeButtons","platformsHaveLifted","combineTemplate","mergeTemplate","exportTemplate","forms","liftedOnDay","buttons","_loop2","lifted","marginStyle","actionTemplate","results_ByDivision","results_ByPoints","daySelector","CardDeck_default","fontWeight","controlCard","ResultsContainer","results_ResultsView","randomString","random","substr","randomInt","randomFixedPoint","fixedPoints","power","NonsenseFederations","NonsenseDivisions","RandomizeMeetSetupButton","randomizeMeetSetup","numClassesMen","numClassesWomen","classesMen","classesWomen","classesMx","div","age_lower","age_upper","NonsenseFirstNames","NonsenseLastNames","RandomizeRegistrationButton","deleteExistingRegistrations","generateEntries","randomizeRegistration","numLifters","sexes","teams","equipmentSelect","divisionsUpperBound","divchooser","choice","FLIGHTCHARS","numFlights","RandomizeWeighinsButton","randomAttempt","randomizeWeighins","height","safety","StateTools","reInitializeRedux","localStorage","clear","reload","RandomizeMeetSetup","RandomizeRegistration","RandomizeWeighins","DebugContainer","debug_StateTools","AboutContainer","RootContainer","search","containers_HomeContainer","containers_MeetSetupContainer","containers_RegistrationContainer","containers_WeighinsContainer","containers_FlightOrderContainer","containers_LiftingContainer","containers_ResultsContainer","containers_DebugContainer","containers_AboutContainer","Navigation","Navbar_default","sticky","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav_default","exact","Link","persistConfig","storage","persistedReducer","persistReducer","App","_configureStore","createStore","applyMiddleware","thunk","persistor","persistStore","configureStore","integration_react","translations_OpenLifterIntlProvider","react_router_dom","basename","components_Navigation","react_router","path","component","rootElement","ReactDOM","render","src_App","serviceWorker","ready","then","unregister"],"mappings":"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ACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KAClDC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/CC,kBAAmB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACjDC,QAAS,aACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,kBAAkB,GAGd0S,GAAkC,CACtCjT,UAAW,CACT,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEFC,mBAAoB,CAAC,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KAChEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,KAC/DC,kBAAmB,CAAC,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KAC/DC,QAAS,eACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,kBAAkB,GAGd2S,GAAkC,CACtClT,UAAW,CACT,OACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,KACjFC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,KACpEC,kBAAmB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,KAChFC,QAAS,kBACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,kBAAkB,GAGd4S,GAAkC,CACtCnmBAAoB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACpEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,IAC3DC,kBAAmB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACnEC,QAAS,kBACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,kBAAkB,GAGd6S,GAAoC,CACxCpT,UAAW,CACT,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,MACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KAClDC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/CC,kBAAmB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACjDC,QAAS,aACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,kBAAkB,GAGd8S,GAAmC,CACvCrT,UAAW,CACT,OACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACpEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,IAC3DC,kBAAmB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACnEC,QAAS,QACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,kBAAkB,GAGd+S,GAAoC,CACxCtT,UAAW,CACT,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,MAAO,IAAK,KACnFC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,KAC/DC,kBAAmB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,MAAO,IAAK,KAClFC,QAAS,kBACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,kBAAkB,GAGdgT,GAAkC,CACtCvmBAAoB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACpEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,IAC3DC,kBAAmB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACnEC,QAAS,eACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,kBAAkB,GAGdiT,GAAmC,CACvCxT,UAAW,CACT,OACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACpEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,IAC3DC,kBAAmB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACnEC,QAAS,QACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,kBAAkB,GAGdkT,eACJ,SAAAA,EAAY1b,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAA2b,IACxBnJ,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAA0Q,GAAA/I,KAAA5S,KAAMC,KAUR2b,mBAAqB,SAACja,GACpB,IAAMV,EAAQU,EAAME,cAAcZ,MAElC,OAAQA,GACN,IAAK,cACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,MACL,IAAK,OACHuR,EAAKW,SAAS,CAAE0I,eAAgB5a,IAChC,MAEF,QAEE,MAAM,IAAIf,MAAJ,wEAAAiC,OAAkFlB,EAAlF,QA9BcuR,EAkC1BsJ,YAAc,SAACna,GACb,OAAQ6Q,EAAK5R,MAAMib,gBACjB,IAAK,cAGH,OAFArJ,EAAKvS,MAAMmY,WAAW6C,SACtBzI,EAAKvS,MAAMqB,WAEb,IAAK,KAGH,OAFAkR,EAAKvS,MAAMmY,WAAW8C,SACtB1I,EAAKvS,MAAMqB,WAEb,IAAK,MAGH,OAFAkR,EAAKvS,MAAMmY,WAAW+C,SACtB3I,EAAKvS,MAAMqB,WAEb,IAAK,MAGH,OAFAkR,EAAKvS,MAAMmY,WAAWgD,SACtB5I,EAAKvS,MAAMqB,WAEb,IAAK,MAGH,OAFAkR,EAAKvS,MAAMmY,WAAWiD,SACtB7I,EAAKvS,MAAMqB,WAEb,IAAK,QAGH,OAFAkR,EAAKvS,MAAMmY,WAAWkD,SACtB9I,EAAKvS,MAAMqB,WAEb,IAAK,OAGH,OAFAkR,EAAKvS,MAAMmY,WAAWmD,SACtB/I,EAAKvS,MAAMqB,WAEb,IAAK,QAGH,OAFAkR,EAAKvS,MAAMmY,WAAWoD,SACtBhJ,EAAKvS,MAAMqB,WAEb,IAAK,MAGH,OAFAkR,EAAKvS,MAAMmY,WAAWqD,SACtBjJ,EAAKvS,MAAMqB,WAEb,IAAK,OAGH,OAFAkR,EAAKvS,MAAMmY,WAAWsD,SACtBlJ,EAAKvS,MAAMqB,WAEb,QAEE,YADekR,EAAK5R,MAAMib,iBA1E9BrJ,EAAKoJ,mBAAqBpJ,EAAKoJ,mBAAmB3G,KAAxBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC1BA,EAAKsJ,YAActJ,EAAKsJ,YAAY7G,KAAjBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAEnBA,EAAK5R,MAAQ,CACXib,eAAgB,eAPMrJ,wEAmFxB,IAAMxP,EAAOhD,KAAKC,MAAMF,SAElBgc,EAAoB1X,GAAU,+BAAgCrB,GAC9DgZ,EAAW3X,GAAU,sBAAuBrB,GAC5CiZ,EAAY5X,GAAU,uBAAwBrB,GAC9CkZ,EAAY7X,GAAU,uBAAwBrB,GAC9CmZ,EAAY9X,GAAU,uBAAwBrB,GAC9CoZ,EAAc/X,GAAU,yBAA0BrB,GAClDqZ,EAAahY,GAAU,wBAAyBrB,GAChDsZ,EAAcjY,GAAU,yBAA0BrB,GAClDuZ,EAAYlY,GAAU,uBAAwBrB,GAC9CwZ,EAAanY,GAAU,wBAAyBrB,GAEtD,OACElC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,KACED,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,mCAAmC6M,eAAe,qBAEzErQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEK,GAAG,SACHE,SAAUtB,KAAK4b,mBACfva,aAAcrB,KAAKY,MAAMib,eACzB7G,MAAO,CAAEyH,MAAO,MAAOhG,QAAS,gBAChCjV,UAAU,iBAEVV,EAAAC,EAAAC,cAAA,UAAQR,IAAI,cAAcS,MAAM,eAC7B8a,GAEHjb,EAAAC,EAAAC,cAAA,UAAQR,IAAI,KAAKS,MAAM,MACpB+a,GAEHlb,EAAAC,EAAAC,cAAA,UAAQR,IAAI,MAAMS,MAAM,OACrBgb,GAEHnb,EAAAC,EAAAC,cAAA,UAAQR,IAAI,MAAMS,MAAM,OACrBib,GAEHpb,EAAAC,EAAAC,cAAA,UAAQR,IAAI,MAAMS,MAAM,OACrBkb,GAEHrb,EAAAC,EAAAC,cAAA,UAAQR,IAAI,QAAQS,MAAM,SACvBmb,GAEHtb,EAAAC,EAAAC,cAAA,UAAQR,IAAI,OAAOS,MAAM,QACtBob,GAEHvb,EAAAC,EAAAC,cAAA,UAAQR,IAAI,QAAQS,MAAM,SACvBqb,GAEHxb,EAAAC,EAAAC,cAAA,UAAQR,IAAI,MAAMS,MAAM,OACrBsb,GAEHzb,EAAAC,EAAAC,cAAA,UAAQR,IAAI,OAAOS,MAAM,QACtBub,IAIL1b,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ0Q,QAASzR,KAAK8b,YAAapK,QAAQ,UAAUsD,MAAO,CAAEyH,MAAO,MAAOrK,WAAY,OACtFtR,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,6BAA6B6M,eAAe,yBAhJnDzQ,IAAMe,WAoKnBd,eAXS,SAACC,GAAD,MAAqC,CAC3DiH,WAAYjH,EAAMwN,KAAKvG,WACvB9H,SAAUa,EAAMb,WAGS,SAAC2B,GAC1B,MAAO,CACL0W,WAAY,SAAAlJ,GAAO,OAAIxN,EAAS0W,GAAWlJ,OAIhCvO,CAA6Cgb,wBChlCtDe,GAAa,CACjBC,kBAAmB,MAQfC,GAAe,SAACxF,GAAD,MAAgC,CACnDA,QACAnW,MAAOmW,IAmBHyF,eACJ,SAAAA,EAAY5c,GAAc,IAAAuS,EAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAA6c,IACxBrK,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAA4R,GAAAjK,KAAA5S,KAAMC,KAqBR6c,iBAAmB,SAACC,GAElB,GAAIA,EAASrX,SAAW8M,EAAKvS,MAAMiI,UAAUxC,OAA7C,CAMA,IADA,IAAMwC,EAAY,GACTzC,EAAI,EAAGA,EAAIsX,EAASrX,OAAQD,IACnCyC,EAAUwF,KAAKqP,EAAStX,GAAG2R,OAE7B5E,EAAKvS,MAAM+X,aAAa9P,KAjCAsK,EAqC1BsE,aAAe,SAAC7V,EAAqC+b,GAC/C/b,aAAiBgc,OACnBzK,EAAKW,SAAS,CAAElS,MAAOA,IACvBuR,EAAKsK,iBAAiB7b,IACH,OAAVA,IACTuR,EAAKW,SAAS,CAAElS,MAAO,KACvBuR,EAAKsK,iBAAiB,MA3CAtK,EAgD1B0K,kBAAoB,SAACC,GACnB3K,EAAKW,SAAS,CAAEgK,WAAYA,KAjDJ3K,EAqD1BoE,cAAgB,SAACjV,GAAkD,IAAAyb,EACnC5K,EAAK5R,MAA3Buc,EADyDC,EACzDD,WAAYlc,EAD6Cmc,EAC7Cnc,MACpB,GAAKkc,IACa,UAAdxb,EAAMnB,KAAiC,QAAdmB,EAAMnB,KAAe,CAEhD,IAAK,IAAIiF,EAAI,EAAGA,EAAIxE,EAAMyE,OAAQD,IAChC,GAAIxE,EAAMwE,GAAG2R,QAAU+F,EAIrB,OAFA3K,EAAKW,SAAS,CAAEgK,WAAY,UAC5Bxb,EAAM0b,iBAKV,IAAMC,EAAQ,GAAAnb,OAAA8I,OAAAsS,GAAA,EAAAtS,CAAOhK,GAAP,CAAc2b,GAAaO,KACzC3K,EAAKW,SAAS,CACZgK,WAAY,GACZlc,MAAOqc,IAET9K,EAAKsK,iBAAiBQ,GACtB3b,EAAM0b,mBArER,IADA,IAAMN,EAAW,GACRtX,EAAI,EAAGA,EAAIxF,EAAMiI,UAAUxC,OAAQD,IAAK,CAC/C,IAAM+X,EAAWvd,EAAMiI,UAAUzC,GACjCsX,EAASrP,KAAK,CAAEzM,MAAOuc,EAAUpG,MAAOoG,IANlB,OASxBhL,EAAK5R,MAAQ,CACXuc,WAAY,GACZlc,MAAO8b,GAGTvK,EAAKsK,iBAAmBtK,EAAKsK,iBAAiB7H,KAAtBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACxBA,EAAKsE,aAAetE,EAAKsE,aAAa7B,KAAlBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACpBA,EAAK0K,kBAAoB1K,EAAK0K,kBAAkBjI,KAAvBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACzBA,EAAKoE,cAAgBpE,EAAKoE,cAAc3B,KAAnBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAjBGA,wEA6EjB,IAAAiL,EACuBzd,KAAKY,MAA3Buc,EADDM,EACCN,WAAYlc,EADbwc,EACaxc,MACdyW,EAAcrT,GAAU,mCAAoCrE,KAAKC,MAAMF,UAC7E,OACEe,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,6BAA6B6M,eAAe,qCAEnErQ,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CACEhB,WAAYA,GACZS,WAAYA,EACZQ,SAAO,EACPC,YAAY,EACZtc,SAAUtB,KAAK8W,aACf+G,cAAe7d,KAAKkd,kBACpBtF,UAAW5X,KAAK4W,cAChBc,YAAaA,EACbzW,MAAOA,YA/FYP,IAAMe,WAiHpBd,eAXS,SAACC,GAAD,MAAqC,CAC3DsH,UAAWtH,EAAMwN,KAAKlG,UACtBnI,SAAUa,EAAMb,WAGS,SAAC2B,GAC1B,MAAO,CACLsW,aAAc,SAAA9P,GAAS,OAAIxG,EAASsW,GAAa9P,OAItCvH,CAA6Ckc,IC9ItDH,GAAa,CACjBC,kBAAmB,MAQfC,GAAe,SAACxF,GAAD,MAAgC,CACnDA,QACAnW,MAAOmW,EAAMvU,QAAQ,IAAK,OAwBtBib,eACJ,SAAAA,EAAY7d,GAAc,IAAAuS,EAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAA8d,IACxBtL,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAA6S,GAAAlL,KAAA5S,KAAMC,KAqBR6c,iBAAmB,SAACC,GAClB,GAAIA,EAASrX,SAAW8M,EAAKvS,MAAMgJ,QAAQvD,OAA3C,CAMA,IADA,IAAMuD,EAAU,GACPxD,EAAI,EAAGA,EAAIsX,EAASrX,OAAQD,IACnCwD,EAAQyE,KAAK9K,OAAOma,EAAStX,GAAGxE,QAElCuR,EAAKvS,MAAMkY,iBAAiB3F,EAAKvS,MAAMmE,IAAK6E,KAhCpBuJ,EAmC1BsE,aAAe,SAAC7V,EAAqC+b,GAC/C/b,aAAiBgc,OACnBzK,EAAKW,SAAS,CAAElS,MAAOA,IACvBuR,EAAKsK,iBAAiB7b,IACH,OAAVA,IACTuR,EAAKW,SAAS,CAAElS,MAAO,KACvBuR,EAAKsK,iBAAiB,MAzCAtK,EA8C1B0K,kBAAoB,SAACC,GACnB3K,EAAKW,SAAS,CAAEgK,WAAYA,KA/CJ3K,EAmD1BoE,cAAgB,SAACjV,GAAkD,IAAAyb,EACnC5K,EAAK5R,MAA3Buc,EADyDC,EACzDD,WAAYlc,EAD6Cmc,EAC7Cnc,MACpB,GAAKkc,IACa,UAAdxb,EAAMnB,KAAiC,QAAdmB,EAAMnB,KAAe,CAChD,IAAM6E,EAAW3C,EAAcya,GAG/B,GAAIY,MAAM1Y,KAAc2Y,SAAS3Y,GAG/B,OAFAmN,EAAKW,SAAS,CAAEgK,WAAY,UAC5Bxb,EAAM0b,iBAMR,GAAIhY,EAAW,GAAK8X,EAAW3Q,SAAS,KAGtC,OAFAgG,EAAKW,SAAS,CAAEgK,WAAY,UAC5Bxb,EAAM0b,iBAKR,IAAK,IAAI5X,EAAI,EAAGA,EAAIxE,EAAMyE,OAAQD,IAChC,GAAI/C,EAAczB,EAAMwE,GAAG2R,SAAW/R,EAIpC,OAFAmN,EAAKW,SAAS,CAAEgK,WAAY,UAC5Bxb,EAAM0b,iBAMV,IAAIC,EAAQ,GAAAnb,OAAA8I,OAAAsS,GAAA,EAAAtS,CAAOhK,GAAP,CAAc2b,GAAaO,KACvCG,EAAWA,EAASW,KAAK,SAACld,EAAGmd,GAAJ,OAAUtb,OAAO7B,EAAEE,OAAS2B,OAAOsb,EAAEjd,SAE9DuR,EAAKW,SAAS,CACZgK,WAAY,GACZlc,MAAOqc,IAET9K,EAAKsK,iBAAiBQ,GACtB3b,EAAM0b,mBAvFR,IADA,IAAMN,EAA8B,GAC3BtX,EAAI,EAAGA,EAAIxF,EAAMgJ,QAAQvD,OAAQD,IAAK,CAC7C,IAAM0Y,EAAIrb,EAAc7C,EAAMgJ,QAAQxD,GAAIxF,EAAMF,UAChDgd,EAASrP,KAAKkP,GAAauB,IANL,OASxB3L,EAAK5R,MAAQ,CACXuc,WAAY,GACZlc,MAAO8b,GAGTvK,EAAKsK,iBAAmBtK,EAAKsK,iBAAiB7H,KAAtBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACxBA,EAAKsE,aAAetE,EAAKsE,aAAa7B,KAAlBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACpBA,EAAK0K,kBAAoB1K,EAAK0K,kBAAkBjI,KAAvBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACzBA,EAAKoE,cAAgBpE,EAAKoE,cAAc3B,KAAnBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAjBGA,wEA+FjB,IAAAiL,EACuBzd,KAAKY,MAA3Buc,EADDM,EACCN,WAAYlc,EADbwc,EACaxc,MACdyW,EAAcrT,GAAU,iCAAkCrE,KAAKC,MAAMF,UAE3E,OACEe,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KAAatX,KAAKC,MAAMmX,OACxBtW,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CACEhB,WAAYA,GACZS,WAAYA,EACZQ,SAAO,EACPC,YAAY,EACZtc,SAAUtB,KAAK8W,aACf+G,cAAe7d,KAAKkd,kBACpBtF,UAAW5X,KAAK4W,cAChBc,YAAaA,EACbzW,MAAOA,YAhHiBP,IAAMe,WAuHlC2c,GAAqB,SAACha,EAAUxD,GACpC,OAAQwD,GACN,IAAK,IACH,OAAOxD,EAAMwN,KAAKjG,mBACpB,IAAK,IACH,OAAOvH,EAAMwN,KAAKhG,qBACpB,IAAK,KACH,OAAOxH,EAAMwN,KAAK/F,kBACpB,QAEE,OAAOzH,EAAMwN,KAAKjG,qBAiBTxH,eAbS,SAACC,EAAoByd,GAC3C,MAAO,CACLpV,QAASmV,GAAmBC,EAASja,IAAKxD,GAC1Cb,SAAUa,EAAMb,WAIO,SAAC2B,GAC1B,MAAO,CACLyW,iBAAkB,SAAC/T,EAAKyK,GAAN,OAAoBnN,EAASyW,GAAiB/T,EAAKyK,OAI1DlO,CAA6Cmd,ICnKtDQ,eACJ,SAAAA,EAAYre,GAAc,IAAAuS,EAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAse,IACxB9L,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAqT,GAAA1L,KAAA5S,KAAMC,KAYRse,gCAAkC,SAACrR,GACjC,OAAQA,GACN,IAAK,IACH,OAAOsF,EAAKvS,MAAM2I,2BACpB,IAAK,IACH,OAAO4J,EAAKvS,MAAM4I,2BACpB,IAAK,IACH,OAAO2J,EAAKvS,MAAM6I,8BACpB,QAEE,OAAO,IAvBa0J,EA2B1BmE,SAAW,SAAC+C,GAEV,OAAIqE,MAAMrE,KAAOsE,SAAStE,IAAMA,EAAI,GAAKA,EAAI,IACpC,QAEF,WAhCiBlH,EAmC1BsE,aAAe,SAAC4C,GACd,GAAyB,YAArBlH,EAAKmE,SAAS+C,GAAkB,CAClC,IAAM3W,EAASyP,EAAKvS,MAAMyI,KAAOgR,EAAIlX,EAAOkX,GAC5ClH,EAAKvS,MAAMue,yBAAyBhM,EAAKvS,MAAMiN,KAAMnK,KAtC/ByP,EA0C1BiM,aAAe,SAACvR,EAAYxE,EAAe3I,GACzC,OAAQmN,GACN,IAAK,IACH,OACS7I,GADLqE,EACe,iCAEA,kCAFkC3I,GAIvD,IAAK,IACH,OACSsE,GADLqE,EACe,iCAEA,kCAFkC3I,GAIvD,IAAK,IACH,OACSsE,GADLqE,EACe,oCAEA,qCAFqC3I,GAI1D,QAEE,MAAO,KA7DXyS,EAAKmE,SAAWnE,EAAKmE,SAAS1B,KAAdhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAChBA,EAAKsE,aAAetE,EAAKsE,aAAa7B,KAAlBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAEpB,IAAMzP,EAASyP,EAAK+L,gCAAgC/L,EAAKvS,MAAMiN,MANvC,OAQxBsF,EAAK5R,MAAQ,CACXoW,aAAcxE,EAAKvS,MAAMyI,KAAO3F,EAAST,EAAOS,IAT1ByP,wEAqExB,OACE1R,EAAAC,EAAAC,cAAC0Z,GAAD,CACE1D,aAAchX,KAAKY,MAAMoW,aACzBwC,KAAM,IACN7C,SAAU3W,KAAK2W,SACfrV,SAAUtB,KAAK8W,aACfM,MAAOpX,KAAKye,aAAaze,KAAKC,MAAMiN,KAAMlN,KAAKC,MAAMyI,KAAM1I,KAAKC,MAAMF,mBA5E1CW,IAAMe,WAgG3Bd,eAdS,SAACC,GAAD,MAAqC,CAC3D8H,KAAM9H,EAAMwN,KAAK1F,KACjBE,2BAA4BhI,EAAMwN,KAAKxF,2BACvCC,2BAA4BjI,EAAMwN,KAAKvF,2BACvCC,8BAA+BlI,EAAMwN,KAAKtF,8BAC1C/I,SAAUa,EAAMb,WAGS,SAAC2B,GAC1B,MAAO,CACL8c,yBAA0B,SAACtR,EAAY3F,GAAb,OAAkC7F,ET9CxB,SAACwL,EAAY3F,GACnD,MAAO,CACL3F,KAAM,gCACNsL,KAAMA,EACN3F,SAAUA,GS0C2DiX,CAAyBtR,EAAM3F,OAIzF5G,CAA6C2d,6FCpB7CI,eArFb,SAAAA,EAAYze,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAA0e,IACxBlM,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAyT,GAAA9L,KAAA5S,KAAMC,KAcR6b,YAAc,WACZ6C,aAAanM,EAAK5R,MAAMge,WACxBpM,EAAKW,SAAS,CAAE0L,oBAAqBrM,EAAK5R,MAAMie,mBAAoBD,UAAW,QAjBvDpM,EAoB1BsM,iBAAmB,WAGjB,IAAMF,EAAYG,WAAW,WAC3BvM,EAAKW,SAAS,CAAE0L,oBAAoB,EAAOD,UAAW,QACrD,KACHpM,EAAKW,SAAS,CAAEyL,UAAWA,KA1BHpM,EA6B1BwM,iBAAmB,WAEY,OAAzBxM,EAAK5R,MAAMge,YACbD,aAAanM,EAAK5R,MAAMge,WACxBpM,EAAKW,SAAS,CAAEyL,UAAW,SAjCLpM,EAqC1BsE,aAAe,SAACxb,EAAoBqG,GAKlC,IAAMkd,OAAuC5b,IAAlBtB,EAAMsd,QAC3BC,EAAM5jB,EAAM4jB,IAAIC,cACtB3M,EAAKW,SAAS,CAAE0L,qBAAoBvjB,MAAO4jB,IAC3C1M,EAAKvS,MAAMqB,SAAS4d,IA1CpB1M,EAAK5R,MAAQ,CACXie,oBAAoB,EACpBvjB,MAAO2E,EAAM3E,MACbsjB,UAAW,MAGbpM,EAAKsJ,YAActJ,EAAKsJ,YAAY7G,KAAjBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACnBA,EAAKsM,iBAAmBtM,EAAKsM,iBAAiB7J,KAAtBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACxBA,EAAKwM,iBAAmBxM,EAAKwM,iBAAiB/J,KAAtBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACxBA,EAAKsE,aAAetE,EAAKsE,aAAa7B,KAAlBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAZIA,wEAgDjB,IAAA4M,EAAApf,KACDqf,EAASpU,OAAOmG,OAAOzK,IACzB2Y,EAAS,KAkBb,OAjBItf,KAAKY,MAAMie,qBACbS,EACExe,EAAAC,EAAAC,cAACue,GAAA,EAAD,CAAeC,UAAU,cACtB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,IAAK1K,EAARyK,EAAQzK,MAAOwK,EAAfC,EAAeD,UAAf,OACC1e,EAAAC,EAAAC,cAAA,OAAK0e,IAAKA,EAAK1K,MAAOA,EAAOxT,UAAWkU,KAAOna,MAAOokB,iBAAgBH,GACpE1e,EAAAC,EAAAC,cAAC4e,GAAA,cAAD,CACEtkB,MAAO8jB,EAAKxe,MAAMtF,MAClB+jB,OAAQA,EACRQ,SAAS,OACTve,SAAU8d,EAAKtI,mBASzBhW,EAAAC,EAAAC,cAAC8e,GAAA,EAAD,KACEhf,EAAAC,EAAAC,cAAA,OAAK+e,aAAc/f,KAAK8e,iBAAkBkB,aAAchgB,KAAKgf,kBAC3Dle,EAAAC,EAAAC,cAACif,GAAA,EAAD,KACG,SAAAC,GAAA,IAAGR,EAAHQ,EAAGR,IAAH,OACC5e,EAAAC,EAAAC,cAAA,OAAK0e,IAAKA,EAAKle,UAAWkU,KAAOra,OAAQoW,QAAS2N,EAAKtD,aACrDhb,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOpa,MAAO0Z,MAAO,CAAEmL,WAAYf,EAAKxe,MAAMtF,YAInEgkB,WA/Ee5e,IAAMe,WCP1BkV,GAAW,SAAC+C,GAChB,OAAK9W,OAAO6X,UAAUf,IAAMA,EAAI,GAAKA,EAAI,GAChC,QAEF,WA4BM0G,GAzB8B,SAAAngB,GAC3C,OACEa,EAAAC,EAAAC,cAAA,MAAIR,IAAKP,EAAMqE,IACbxD,EAAAC,EAAAC,cAAA,UAAKf,EAAM6C,eACXhC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKgU,MAAO,CAAE9C,SAAU,UACtBpR,EAAAC,EAAAC,cAAC0Z,GAAD,CACE1D,aAAc/W,EAAMuH,UACpBgS,KAAM,EACN7C,SAAUA,GACVrV,SAAU,SAAAoN,GAAK,OAAIzO,EAAMqB,SAASrB,EAAMsH,SAAUtH,EAAMqE,GAAIoK,EAAOzO,EAAM3E,QACzEgX,aAAa,UAInBxR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACqf,GAAD,CACE/kB,MAAO2E,EAAM3E,MACbgG,SAAU,SAAAhG,GAAK,OAAI2E,EAAMqB,SAASrB,EAAMsH,SAAUtH,EAAMqE,GAAIrE,EAAMuH,UAAWlM,SCXjFglB,eACJ,SAAAA,EAAYrgB,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAsgB,IACxB9N,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAqV,GAAA1N,KAAA5S,KAAMC,KAMRsgB,oBAAkE,SAAAjc,GAChE,IAAMkc,EAAczN,SAASC,eAAe1O,GAG5C,GAAe,OAAXkc,EAAJ,CACA,IAAMvf,EAAQuf,EAAOvf,MAErB,QAAcgC,IAAVhC,EAAqB,MAAO,QAGhC,IAAMwf,EAAQ7d,OAAO3B,GACrB,OAAIkC,KAAKmG,MAAMmX,KAAWA,EAAc,QACpCA,EAAQ,GAAKA,EAAQ,GAAW,QAChCja,OAAOia,KAAWxf,EAAc,QAE7B,OAtBiBuR,EAyB1BkO,cAAgB,SAACnZ,EAAkBjD,EAAYqc,EAAgDrlB,GAC7F,IAAK0G,EAAS2e,KAAYC,oBAASD,GACjC,MAAM,IAAIzgB,MAAJ,iDAAAiC,OAA2Dwe,IAGnE,GAAqC,UAAjCnO,EAAK+N,oBAAoBjc,GAG3B,OAAOkO,EAAKW,SAAS,IAGvBX,EAAKvS,MAAM4gB,eAAetZ,EAAU3E,OAAO+d,GAASrlB,IApC5BkX,EAuC1BsO,gBAAkB,SAACvZ,EAAkBoZ,EAAgBrlB,GAGnD,IAAMgJ,EAAK,SAAWkC,OAAOe,GACvBxE,EAASyP,EAAKvS,MAAMyI,KAAOnB,EAAWjF,EAAOiF,GAEnD,OACEzG,EAAAC,EAAAC,cAAC+f,GAAD,CACEzc,GAAIA,EACJ9D,IAAK8D,EACLiD,SAAUA,EACVzE,cAAeA,EAAcC,EAAQyP,EAAKvS,MAAMF,UAChDyH,UAAWmZ,EACXrlB,MAAOA,EACPgG,SAAUkR,EAAKkO,iBAlDnBlO,EAAK+N,oBAAsB/N,EAAK+N,oBAAoBtL,KAAzBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC3BA,EAAKkO,cAAgBlO,EAAKkO,cAAczL,KAAnBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAJGA,wEA0DjB,IAAA4M,EAAApf,KACDghB,EAAYhhB,KAAKC,MAAM8I,OAAOgC,IAAI,SAACuE,GAAD,OACtC8P,EAAK0B,gBAAgBxR,EAAI/H,SAAU+H,EAAI9H,UAAW8H,EAAIhU,SAElD2lB,EAASjhB,KAAKC,MAAMyI,KAAO,uBAAyB,wBACpDwY,EAAc7c,GAAU4c,EAAQjhB,KAAKC,MAAMF,UAEjD,OACEe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmgB,GAAApgB,EAAD,CAAOqgB,SAAO,EAACC,KAAK,KAAKC,OAAK,EAACtM,MAAO,CAAEuM,OAAQ,QAC9CzgB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKkgB,GACLpgB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,8BAA8B6M,eAAe,qBAEpErQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,0BAA0B6M,eAAe,aAIpErQ,EAAAC,EAAAC,cAAA,aAAQggB,YAhFGtgB,IAAMe,WAmGZd,eAZS,SAACC,GAAD,MAAqC,CAC3D8H,KAAM9H,EAAMwN,KAAK1F,KACjBK,OAAQnI,EAAMwN,KAAKrF,OACnBhJ,SAAUa,EAAMb,WAGS,SAAC2B,GAC1B,MAAO,CACLmf,eAAgB,SAACtZ,EAAUoZ,EAAQrlB,GAAnB,OAA6BoG,EZtCnB,SAAC6F,EAAkBC,EAAmBlM,GAClE,MAAO,CACLsG,KAAM,mBACN2F,WACAC,YACAlM,SYiCsDulB,CAAetZ,EAAUoZ,EAAQrlB,OAI5EqF,CAA6C2f,wBCrG7CkB,GAhB+B,SAAAvhB,GAC5C,OACEa,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KAAarX,EAAMmX,OACnBtW,EAAAC,EAAAC,cAACygB,GAAA1gB,EAAD,CAAaiU,MAAO,CAAEyH,MAAO,SAC3B3b,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ2gB,QAASzhB,EAAMgB,MAAOyQ,QAAQ,oBAAoBD,QAAS,kBAAMxR,EAAM0hB,UAAS,KACrF1hB,EAAM2hB,IAET9gB,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ2gB,OAAQzhB,EAAMgB,MAAOyQ,QAAQ,oBAAoBD,QAAS,kBAAMxR,EAAM0hB,UAAS,KACpF1hB,EAAM4hB,QCoCXC,eACJ,SAAAA,EAAY7hB,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAA8hB,IACxBtP,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAA6W,GAAAlP,KAAA5S,KAAMC,KAOR8hB,qBAAuB,SAAC9gB,GACtB,OAAKA,EACDA,EAAMuL,SAAS,KAAa,QACzB,UAFY,WANnBgG,EAAK5R,MAAQ,CACXohB,OAAQ,GAJcxP,wEAcjB,IAAA4M,EAAApf,KAED0I,EAAOlC,OAAOxG,KAAKC,MAAMmO,KAAK1F,MAC9B3I,EAAWC,KAAKC,MAAMF,SAEtBkiB,EAAiB5d,GAAU,uBAAwBtE,GACnDmiB,EAAmB7d,GAAU,oBAAqBtE,GAClDoiB,EAAgB9d,GAAU,iBAAkBtE,GAC5CqiB,EAAsB/d,GAAU,4BAA6BtE,GAC7DsiB,EAAiBhe,GAAU,uBAAwBtE,GAEnDuiB,EAAkBje,GAAU,mBAAoBtE,GAChDwiB,EAAele,GAAU,gBAAiBtE,GAE1CyiB,EAAoBne,GAAU,+BAAgCtE,GAC9D0iB,EAAsBpe,GAAU,iCAAkCtE,GAClE2iB,EAAkBre,GAAU,8BAA+BtE,GAE3D4iB,EAAWte,GAAU,aAActE,GACnC6iB,EAA2Bve,GAAU,8BAA+BtE,GACpE8iB,EAAaxe,GAAU,eAAgBtE,GACvC+iB,EAAqBze,GAAU,uBAAwBtE,GACvDgjB,EAAkB1e,GAAU,qBAAsBtE,GAClDijB,EAAmB3e,GAAU,sBAAuBtE,GAEpDkjB,EAAuB5e,GAAU,0BAA2BtE,GAC5DmjB,EAAc7e,GAAU,gBAAiBtE,GACzCojB,EAAc9e,GAAU,gBAAiBtE,GACzCqjB,EAAa/e,GAAU,wBAAyBtE,GAChDsjB,EAAwBhf,GAAU,oCAAqCtE,GACvEujB,EAAWjf,GAAU,qBAAsBtE,GAC3CwjB,EAAYlf,GAAU,sBAAuBtE,GAE7CyjB,EAAsBnf,GAAU,uCAAwCtE,GACxE0jB,EAAmBpf,GAAU,oCAAqCtE,GAExE,OACEe,EAAAC,EAAAC,cAAC+U,EAAAhV,EAAD,KACED,EAAAC,EAAAC,cAACgV,EAAAjV,EAAD,KACED,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,KACED,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,kCAAkC6M,eAAe,0BAExErQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAAC0iB,GAAD,CACEtM,MAAO6K,EACPvK,YAAauK,EACbjL,aAAchX,KAAKC,MAAMmO,KAAK1G,KAC9BiP,SAAU3W,KAAK+hB,qBACf9K,UAAWjX,KAAKC,MAAM0jB,YACtBnM,YAAY,IAEd1W,EAAAC,EAAAC,cAAC0iB,GAAD,CACEtM,MAAO8K,EACPxK,YAAawK,EACblL,aAAchX,KAAKC,MAAMmO,KAAKvG,WAC9B8O,SAAU3W,KAAK+hB,qBACf9K,UAAWjX,KAAKC,MAAM2jB,cACtBpM,YAAY,IAEd1W,EAAAC,EAAAC,cAAC0iB,GAAD,CACEtM,MAAO+K,EACPzK,YAAayK,EACbnL,aAAchX,KAAKC,MAAMmO,KAAKzG,QAC9BgP,SAAU3W,KAAK+hB,qBACf9K,UAAWjX,KAAKC,MAAM4jB,WACtBrM,YAAY,IAEd1W,EAAAC,EAAAC,cAAC0iB,GAAD,CACEtM,MAAOgL,EACP1K,YAAa0K,EACbpL,aAAchX,KAAKC,MAAMmO,KAAKxN,MAC9B+V,SAAU3W,KAAK+hB,qBACf9K,UAAWjX,KAAKC,MAAMkT,SACtBqE,YAAY,IAEd1W,EAAAC,EAAAC,cAAC0iB,GAAD,CACEtM,MAAOiL,EACP3K,YAAa2K,EACbrL,aAAchX,KAAKC,MAAMmO,KAAKxG,KAC9B+O,SAAU3W,KAAK+hB,qBACf9K,UAAWjX,KAAKC,MAAM6jB,QACtBtM,YAAY,IAEd1W,EAAAC,EAAAC,cAAC+iB,GAAD,MACAjjB,EAAAC,EAAAC,cAACgjB,GAAD,MACAljB,EAAAC,EAAAC,cAACijB,GAAD,SAKNnjB,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,KACED,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,0BAA0B6M,eAAe,uBAEhErQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAACkjB,GAAD,CAAe5iB,SAAU,kBAAM8d,EAAKjM,SAAS,CAAE6O,OAAQ5C,EAAKxe,MAAMohB,OAAS,OAC3ElhB,EAAAC,EAAAC,cAACmjB,GAAD,CAAgB3jB,IAAKR,KAAKY,MAAMohB,OAAS,eACzClhB,EAAAC,EAAAC,cAACojB,GAAD,CAAqBhgB,IAAI,IAAIgT,MAAOoL,EAAmBhiB,IAAKR,KAAKY,MAAMohB,OAAS,OAChFlhB,EAAAC,EAAAC,cAACojB,GAAD,CAAqBhgB,IAAI,IAAIgT,MAAOqL,EAAqBjiB,IAAKR,KAAKY,MAAMohB,OAAS,OAClFlhB,EAAAC,EAAAC,cAACojB,GAAD,CAAqBhgB,IAAI,KAAKgT,MAAOsL,EAAiBliB,IAAKR,KAAKY,MAAMohB,OAAS,QAE/ElhB,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWP,IAAKR,KAAKY,MAAMohB,OAAS,YAClClhB,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,qBAAqB6M,eAAe,yBAE3DrQ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEK,GAAG,SACHC,aAAcrB,KAAKC,MAAMmO,KAAK9F,QAC9BhH,SAAUtB,KAAKC,MAAMokB,WACrB7iB,UAAU,iBAEVV,EAAAC,EAAAC,cAAA,UAAQC,MAAM,MAAM0hB,GACpB7hB,EAAAC,EAAAC,cAAA,UAAQC,MAAM,uBAAuB2hB,GACrC9hB,EAAAC,EAAAC,cAAA,UAAQC,MAAM,QAAQ4hB,GACtB/hB,EAAAC,EAAAC,cAAA,UAAQC,MAAM,gBAAgB6hB,GAC9BhiB,EAAAC,EAAAC,cAAA,UAAQC,MAAM,cAAc8hB,GAC5BjiB,EAAAC,EAAAC,cAAA,UAAQC,MAAM,eAAe+hB,GAC7BliB,EAAAC,EAAAC,cAAA,UAAQC,MAAM,mBAAmBgiB,GACjCniB,EAAAC,EAAAC,cAAA,UAAQC,MAAM,SAASiiB,GACvBpiB,EAAAC,EAAAC,cAAA,UAAQC,MAAM,SAASkiB,KAI3BriB,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWP,IAAKR,KAAKY,MAAMohB,OAAS,oBAClClhB,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,8BACH6M,eAAe,sDAGnBrQ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEK,GAAG,SACHC,aAAcrB,KAAKC,MAAMmO,KAAK7F,gBAC9BjH,SAAUtB,KAAKC,MAAMqkB,mBACrB9iB,UAAU,iBAEVV,EAAAC,EAAAC,cAAA,UAAQR,IAAI,OAAOS,MAAM,QACtBmiB,GAEHtiB,EAAAC,EAAAC,cAAA,UAAQR,IAAI,kBAAkBS,MAAM,mBACjCoiB,KAKPviB,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWP,IAAKR,KAAKY,MAAMohB,OAAS,kBAClClhB,EAAAC,EAAAC,cAACujB,GAAD,CACEnN,MACEtW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,mCACH6M,eAAe,sDAGnBlQ,MAAOjB,KAAKC,MAAMmO,KAAK5F,uBACvBmZ,SAAU3hB,KAAKC,MAAMukB,0BACrB3C,IAAK0B,EACL3B,GAAI0B,KAIRxiB,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWP,IAAKR,KAAKY,MAAMohB,OAAS,iBAClClhB,EAAAC,EAAAC,cAACujB,GAAD,CACEnN,MACEtW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,gCACH6M,eAAe,+CAGnBlQ,MAAOjB,KAAKC,MAAMmO,KAAK3F,iBACvBkZ,SAAU3hB,KAAKC,MAAMwkB,oBACrB5C,IAAK0B,EACL3B,GAAI0B,QAOdxiB,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,KACED,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,4BAA4B6M,eAAe,yBAElErQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,KACED,EAAAC,EAAAC,cAACujB,GAAD,CACEnN,MACEtW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,mBACH6M,eAAe,gDAGnBlQ,MAAOjB,KAAKC,MAAMmO,KAAK1F,KACvBiZ,SAAU3hB,KAAKC,MAAMykB,QACrB7C,IAAKS,EACLV,GAAIW,KAIRzhB,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,KACED,EAAAC,EAAAC,cAACujB,GAAD,CACEnN,MAAOpX,KAAKC,MAAMmO,KAAK1F,KAAO+a,EAAmBD,EACjDviB,MAAOjB,KAAKC,MAAMmO,KAAKzF,mBACvBgZ,SAAU3hB,KAAKC,MAAM0kB,sBACrB9C,IAAK0B,EACL3B,GAAI0B,KAIRxiB,EAAAC,EAAAC,cAAC4jB,GAAD,CAAuBpkB,IAAK,IAAMkI,EAAMwE,KAAK,MAC7CpM,EAAAC,EAAAC,cAAC4jB,GAAD,CAAuBpkB,IAAK,IAAMkI,EAAMwE,KAAK,MAC7CpM,EAAAC,EAAAC,cAAC4jB,GAAD,CAAuBpkB,IAAK,IAAMkI,EAAMwE,KAAK,MAC7CpM,EAAAC,EAAAC,cAAC6jB,GAAD,kBAtOQnkB,IAAMe,WAyQfd,eAzBS,SAACC,GAAD,MAAqC,CAC3DwN,KAAMxN,EAAMwN,KACZrO,SAAUa,EAAMb,WAGS,SAAC2B,GAAD,MAAwC,CACjEiiB,YAAa,SAACjc,GAAD,OAAkBhG,EAAS0W,GAAW,CAAE1Q,KAAMA,MAC3Dmc,WAAY,SAAClc,GAAD,OAAqBjG,EAAS0W,GAAW,CAAEzQ,QAASA,MAChEwL,SAAU,SAACvS,GAAD,OAAmBc,EAAS0W,GAAW,CAAExX,MAAOA,MAC1DkjB,QAAS,SAAClc,GAAD,OAAkBlG,EAAS0W,GAAW,CAAExQ,KAAMA,MACvDgc,cAAe,SAACkB,GAAD,OAAiBpjB,EAAS0W,GAAW,CAAEvQ,WAAYid,MAClEN,0BAA2B,SAAAO,GAAI,OAAIrjB,EAAS0W,GAAW,CAAE5P,uBAAwBuc,MACjFN,oBAAqB,SAAAM,GAAI,OAAIrjB,EAAS0W,GAAW,CAAE3P,iBAAkBsc,MACrEL,QAAS,SAAAK,GAAI,OAAIrjB,EdrPV,CACLE,KAAM,YACN8G,KcmPgCqc,KAClCJ,sBAAuB,SAAAI,GAAI,OAAIrjB,EAAS0W,GAAW,CAAEzP,mBAAoBoc,MACzEV,WAAY,SAAA1iB,GAAK,OACfM,EAAaN,EAAME,cAAcZ,Q/BlN9B,SAAuBA,GAC5B,IAAMqH,EAAUrH,EAChB,OAAQqH,GACN,IAAK,KACL,IAAK,sBACL,IAAK,OACL,IAAK,eACL,IAAK,aACL,IAAK,cACL,IAAK,SACL,IAAK,kBACL,IAAK,QACL,IAAK,QACH,OAAO,EACT,QAEE,MAAM,IAAIpI,MAAJ,0DAAAiC,OAAoElB,EAApE,O+BmMR+jB,CAAcrjB,EAAME,cAAcZ,QAClCS,EAAS0W,GAAW,CAAE9P,QAAS3G,EAAME,cAAcZ,UACrDqjB,mBAAoB,SAAA3iB,GAAK,OACvBM,EAAaN,EAAME,cAAcZ,Q/BlO9B,SAA+BA,GACpC,IAAMgkB,EAAchkB,EACpB,OAAQgkB,GACN,IAAK,kBACL,IAAK,OACH,OAAO,EACT,QAEE,MAAM,IAAI/kB,MAAJ,wEAAAiC,OAAkFlB,EAAlF,O+B2NRikB,CAAsBvjB,EAAME,cAAcZ,QAC1CS,EAAS0W,GAAW,CAAE7P,gBAAiB5G,EAAME,cAAcZ,YAGhDN,CAA6CmhB,ICtT7CqD,oLARX,OACErkB,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOvX,aACrB2C,EAAAC,EAAAC,cAACokB,GAAD,cAJyB1kB,IAAMe,WC8BxB4jB,eAhBb,SAAAA,EAAYplB,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAqlB,IACxB7S,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAoa,GAAAzS,KAAA5S,KAAMC,KAIRqlB,WAAa,WACX,IAAMC,EAAY/S,EAAKvS,MAAMulB,YAE7B,OADoBhT,EAAKvS,MAAjB8M,QACOhC,IAAI,SAAA5G,GAAK,OAAIrD,EAAAC,EAAAC,cAACukB,EAAD,CAAW/kB,IAAK2D,EAAMG,GAAIA,GAAIH,EAAMG,QANhEkO,EAAK8S,WAAa9S,EAAK8S,WAAWrQ,KAAhBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAFMA,wEAYxB,OAAO1R,EAAAC,EAAAC,cAAA,WAAMhB,KAAKslB,qBAbI5kB,IAAMe,+BCYjBgkB,oLAXJ,IAAAjT,EAAAxS,KACP,OACEc,EAAAC,EAAAC,cAAC0kB,GAAA,EAAYC,SAAb,KACG,SAAAC,GACC,OAAOA,EAAKzlB,SAASqS,EAAKvS,MAAMqE,aALZ5D,IAAMe,WCfvBokB,GAAsB,SAACljB,GAClC,GAAiB,kBAANA,EAAgB,MAAO,QAElC,GAAU,KAANA,EAAU,OAAO,KACrB,GAAIA,EAAE+C,SAAW,aAAaA,OAAQ,MAAO,QAE7C,IAAMogB,EAAwBnjB,EAAEmI,MAAM,KACtC,GAAsB,IAAlBgb,EAAOpgB,OAAc,MAAO,QAP6B,IAAAqgB,EAAA9a,OAAAC,GAAA,EAAAD,CASzB6a,EATyB,GAStDvf,EATsDwf,EAAA,GAS7Ctf,EAT6Csf,EAAA,GASnCrf,EATmCqf,EAAA,GAavDC,EAAc,WAEpB,IAAKzf,EAAQxH,MAAMinB,GAAc,MAAO,QACxC,IAAKvf,EAAS1H,MAAMinB,GAAc,MAAO,QACzC,IAAKtf,EAAO3H,MAAMinB,GAAc,MAAO,QAEvC,IAAM/f,EAAOrD,OAAO2D,GACdJ,EAAQvD,OAAO6D,GACfJ,EAAMzD,OAAO8D,GAEnB,OAAIqX,MAAM9X,IAAS8X,MAAM5X,IAAU4X,MAAM1X,GAAa,QAClDJ,GAAQ,GAAKE,GAAS,GAAKA,EAAQ,IAAME,GAAO,GAAKA,EAAM,GAAW,QAGtEJ,EAAO,MAAQA,IAAQ,IAAI8B,MAAO7B,cAAgB,EAAU,QAEzD,WC7BI+f,GAA0B,SAACtjB,EAAYujB,GAClD,GAAiB,kBAANvjB,EAAgB,MAAO,QAElC,GAAU,KAANA,EAAU,OAAO,KAKrB,IAAKA,EAAE5D,MADa,YACO,MAAO,QAGlC,GAAI4D,EAAEwjB,WAAW,KAAM,MAAO,QAE9B,IAAMzM,EAAI9W,OAAOD,GAGjB,OAAIob,MAAMrE,GAAW,QAChB9W,OAAO6X,UAAUf,GAClBA,GAAK,EAAU,QAGS,kBAAjBwM,GACLxM,EAAIwM,EAAqB,QAGxB,UAR0B,SCXtBE,GAAkB,SAAC9W,GAC9B,MAAO,CACL1N,KAAM,mBACN2N,kBAAmBD,IAYV+W,GAAqB,SAAC3W,GACjC,MAAO,CACL9N,KAAM,sBACN8N,QAASA,IAUA4W,GAAqB,SAAC5W,EAAiBJ,GAClD,MAAO,CACL1N,KAAM,sBACN8N,QAASA,EACTR,QAASI,ICiBPiW,eACJ,SAAAA,EAAYtlB,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAulB,IACxB/S,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAsa,GAAA3S,KAAA5S,KAAMC,KA4ERsmB,sBAAwB,SAACzc,GACvB,IAAMzE,EAAW3C,EAAcoH,GAC3BzE,GAAY,GAAKA,IAAamN,EAAKvS,MAAMkE,MAAM2F,KACjD0I,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAEwF,IAAKzE,KAhF9BmN,EAoF1BgU,2BAA6B,SAAC7kB,GAC5B,IAAMoI,EAAWpI,EAAM0S,OAAOpT,MAC1BuR,EAAKvS,MAAMkE,MAAM4F,WAAaA,GAAgC,kBAAbA,GACnDyI,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAEyF,SAAUA,KAvFnCyI,EA2F1BiU,4BAA8B,SAAC/c,GACzB8I,EAAKvS,MAAMkE,MAAMuF,YAAcA,GACjC8I,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAEoF,UAAWA,KA7FpC8I,EAiG1BkU,sBAAwB,SAAC/c,GACvB,IAAM0P,EAAM3W,EAAciH,GACtB6I,EAAKvS,MAAMkE,MAAMwF,MAAQ0P,GAC3B7G,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAEqF,IAAK0P,KApG9B7G,EAwG1BmU,0BAA4B,SAAChf,GACvB6K,EAAKvS,MAAMkE,MAAMwD,UAAYA,GAC/B6K,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAEqD,QAASA,KA1GlC6K,EA8G1BoU,wBAA0B,SAAChmB,GACrB4R,EAAKvS,MAAMkE,MAAMvD,QAAUA,GAC7B4R,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAE1D,MAAOA,KAhHhC4R,EA2K1BqU,uBAAyB,SAACllB,GACpBM,EAAaN,EAAM0S,OAAOpT,QAC5BuR,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAE2F,KAAMtI,EAAM0S,OAAOpT,SA7K5CuR,EAiL1BsU,4BAA8B,SAACnlB,GACzBM,EAAaN,EAAM0S,OAAOpT,QAC5BuR,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAEyiB,UAAWplB,EAAM0S,OAAOpT,SAnLjDuR,EAuL1BwU,wBAA0B,SAACrlB,GACrBM,EAAaN,EAAM0S,OAAOpT,QAC5BuR,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAE4F,MAAOvI,EAAM0S,OAAOpT,SAzL7CuR,EA8L1ByU,YAAc,SAAChmB,GACb,GAAc,KAAVA,EAAc,OAAO,KAEzB,IAAMimB,EAAkBjB,GAAwBhlB,GAChD,GAAY,YAARimB,EAAmB,CAErB,IAAMxN,EAAI9W,OAAO3B,GACjB,GAAIyY,GAAK,GAAKA,EAAI,IAAK,MAAO,UAEhC,OAAOwN,GAlMP1U,EAAK5R,MAAQ,CACXumB,YAAalnB,EAAMkE,MAAMkC,KAG3BmM,EAAK4U,wBAA0B5U,EAAK4U,wBAAwBnS,KAA7BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC/BA,EAAK6U,sBAAwB7U,EAAK6U,sBAAsBpS,KAA3BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC7BA,EAAK8U,2BAA6B9U,EAAK8U,2BAA2BrS,KAAhChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAClCA,EAAK+U,yBAA2B/U,EAAK+U,yBAAyBtS,KAA9BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAChCA,EAAKgV,uBAAyBhV,EAAKgV,uBAAuBvS,KAA5BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC9BA,EAAKiV,sBAAwBjV,EAAKiV,sBAAsBxS,KAA3BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC7BA,EAAK+T,sBAAwB/T,EAAK+T,sBAAsBtR,KAA3BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC7BA,EAAKgU,2BAA6BhU,EAAKgU,2BAA2BvR,KAAhChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAClCA,EAAKiU,4BAA8BjU,EAAKiU,4BAA4BxR,KAAjChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACnCA,EAAKkU,sBAAwBlU,EAAKkU,sBAAsBzR,KAA3BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC7BA,EAAKmU,0BAA4BnU,EAAKmU,0BAA0B1R,KAA/BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACjCA,EAAKoU,wBAA0BpU,EAAKoU,wBAAwB3R,KAA7BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC/BA,EAAKkV,4BAA8BlV,EAAKkV,4BAA4BzS,KAAjChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACnCA,EAAKmV,yBAA2BnV,EAAKmV,yBAAyB1S,KAA9BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAChCA,EAAKoV,4BAA8BpV,EAAKoV,4BAA4B3S,KAAjChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACnCA,EAAKqU,uBAAyBrU,EAAKqU,uBAAuB5R,KAA5BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC9BA,EAAKsU,4BAA8BtU,EAAKsU,4BAA4B7R,KAAjChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACnCA,EAAKwU,wBAA0BxU,EAAKwU,wBAAwB/R,KAA7BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IA1BPA,uFA6BF7Q,GACtB3B,KAAKC,MAAMomB,mBAAmBrmB,KAAKC,MAAMqE,kDAGrB3C,GACpB,IAAM0E,EAAMzD,OAAOjB,EAAME,cAAcZ,OACjCkD,EAAQnE,KAAKC,MAAMkE,MAGrBsF,EAAWtF,EAAMsF,SACjBA,EAAWzJ,KAAKC,MAAMmO,KAAKnG,gBAAgB5B,EAAM,KACnDoD,EAAW,GAGTtF,EAAMkC,MAAQA,IAChBrG,KAAKmT,SAAS,CAAEgU,YAAa9gB,IAC7BrG,KAAKC,MAAMqmB,mBAAmBtmB,KAAKC,MAAMqE,GAAI,CAAE+B,IAAKA,EAAKoD,SAAUA,wDAI5C9H,GACzB,IAAM8H,EAAW7G,OAAOjB,EAAME,cAAcZ,OACxCjB,KAAKC,MAAMkE,MAAMsF,WAAaA,GAChCzJ,KAAKC,MAAMqmB,mBAAmBtmB,KAAKC,MAAMqE,GAAI,CAAEmF,SAAUA,qDAIpC9H,GACvB,IAAMV,EAAQU,EAAME,cAAcZ,MAC9BjB,KAAKC,MAAMkE,MAAM9B,SAAWpB,GAASgB,EAAahB,IAAUmB,EAAanB,IAC3EjB,KAAKC,MAAMqmB,mBAAmBtmB,KAAKC,MAAMqE,GAAI,CAAEjC,OAAQpB,mDAIpCU,GACrB,IAAM+F,EAAO/F,EAAME,cAAcZ,MAC7BjB,KAAKC,MAAMkE,MAAMuD,OAASA,GAAQzF,EAAayF,IACjD1H,KAAKC,MAAMqmB,mBAAmBtmB,KAAKC,MAAMqE,GAAI,CAAEoD,KAAMA,kDAInC/F,GACpB,IAAMyC,EAAMzC,EAAME,cAAcZ,MAC5BjB,KAAKC,MAAMkE,MAAMC,MAAQA,GAAOnC,EAAamC,ItC/D9C,SAAmBnD,GACxB,IAAMmD,EAAMnD,EACZ,OAAQmD,GACN,IAAK,IACL,IAAK,IACL,IAAK,KACH,OAAO,EACT,QAEE,MAAM,IAAIlE,MAAJ,sDAAAiC,OAAgElB,EAAhE,OsCsDiD4mB,CAAUzjB,IACjEpE,KAAKC,MAAMqmB,mBAAmBtmB,KAAKC,MAAMqE,GAAI,CAAEF,IAAKA,wDA2C5BnD,EAAqC+b,GAC/D,GAAI/b,aAAiBgc,OAEnB,GAAIhc,EAAMyE,SAAW1F,KAAKC,MAAMkE,MAAM+D,UAAUxC,OAAQ,CAEtD,IADA,IAAMwC,EAAY,GACTzC,EAAI,EAAGA,EAAIxE,EAAMyE,OAAQD,IAChCyC,EAAUwF,KAAKzM,EAAMwE,GAAGxE,OAE1BjB,KAAKC,MAAMqmB,mBAAmBtmB,KAAKC,MAAMqE,GAAI,CAAE4D,UAAWA,UAEzC,OAAVjH,GAELjB,KAAKC,MAAMkE,MAAM+D,UAAUxC,OAAS,GACtC1F,KAAKC,MAAMqmB,mBAAmBtmB,KAAKC,MAAMqE,GAAI,CAAE4D,UAAW,sDAKvCjH,EAAqC+b,GAC5D,GAAI/b,aAAiBgc,OAEnB,GAAIhc,EAAMyE,SAAW1F,KAAKC,MAAMkE,MAAM0F,OAAOnE,OAAQ,CAEnD,IADA,IAAMmE,EAAS,GACNpE,EAAI,EAAGA,EAAIxE,EAAMyE,OAAQD,IAChCoE,EAAO6D,KAAKzM,EAAMwE,GAAGxE,OAEvBjB,KAAKC,MAAMqmB,mBAAmBtmB,KAAKC,MAAMqE,GAAI,CAAEuF,OAAQA,UAEtC,OAAV5I,GAELjB,KAAKC,MAAMkE,MAAM0F,OAAOnE,OAAS,GACnC1F,KAAKC,MAAMqmB,mBAAmBtmB,KAAKC,MAAMqE,GAAI,CAAEuF,OAAQ,yDAKjClI,GAC1B,IAAM6C,EAAY7C,EAAME,cAAcZ,MACtC,GAAIjB,KAAKC,MAAMkE,MAAMK,YAAcA,EAEjC,OAAQA,GACN,IAAK,OACL,IAAK,UACL,IAAK,QACL,IAAK,aACL,IAAK,YACHxE,KAAKC,MAAMqmB,mBAAmBtmB,KAAKC,MAAMqE,GAAI,CAAEE,UAAWA,sCA6ChE,IALO,IAAA4a,EAAApf,KACDmE,EAAQnE,KAAKC,MAAMkE,MACnBpE,EAAWC,KAAKC,MAAMF,SAEtB+nB,EAAa,GACVriB,EAAI,EAAGA,GAAKzF,KAAKC,MAAMmO,KAAKpG,WAAYvC,IAC/CqiB,EAAWpa,KACT5M,EAAAC,EAAAC,cAAA,UAAQC,MAAOwE,EAAGjF,IAAKiF,GACpBA,IAMP,IADA,IAAMsiB,EAAkB,GACftiB,EAAI,EAAGA,GAAKzF,KAAKC,MAAMmO,KAAKnG,gBAAgB9D,EAAMkC,IAAM,GAAIZ,IACnEsiB,EAAgBra,KACd5M,EAAAC,EAAAC,cAAA,UAAQC,MAAOwE,EAAGjF,IAAKiF,GACpBA,IAMP,IADA,IAAMuiB,EAAkB,GACfviB,EAAI,EAAGA,EAAIzF,KAAKC,MAAMmO,KAAKlG,UAAUxC,OAAQD,IAAK,CACzD,IAAM+X,EAAWxd,KAAKC,MAAMmO,KAAKlG,UAAUzC,GAC3CuiB,EAAgBta,KAAK,CAAEzM,MAAOuc,EAAUpG,MAAOoG,IAIjD,IADA,IAAMyK,EAAoB,GACjBxiB,EAAI,EAAGA,EAAItB,EAAM+D,UAAUxC,OAAQD,IAAK,CAC/C,IAAM+X,EAAWrZ,EAAM+D,UAAUzC,GACjCwiB,EAAkBva,KAAK,CAAEzM,MAAOuc,EAAUpG,MAAOoG,IAInD,IADA,IAAM0K,EAAiB,GACdziB,EAAI,EAAGA,EAAItB,EAAM0F,OAAOnE,OAAQD,IAAK,CAC5C,IAAM9D,EAAQwC,EAAM0F,OAAOpE,GAC3ByiB,EAAexa,KAAK,CAAEzM,MAAOU,EAAOyV,MAAOzS,GAAchD,EAAO5B,KAGlE,IAAMooB,EAAY,CAAEC,QAAS,MAAO7G,OAAQ,OAEtCY,EAAgB9d,GAAU,iBAAkBtE,GAC5CsoB,EAAchkB,GAAU,8BAA+BtE,GACvDuoB,EAA6BjkB,GAAU,qCAAsCtE,GAC7EwoB,EAA4BlkB,GAAU,qCAAsCtE,GAC5EyoB,EAA0BnkB,GAAU,4BAA6BtE,GAEjE0oB,EAAe,CACnB,CAAExnB,MAAO,IAAKmW,MAAO/S,GAAU,UAAWtE,IAC1C,CAAEkB,MAAO,IAAKmW,MAAO/S,GAAU,UAAWtE,IAC1C,CAAEkB,MAAO,IAAKmW,MAAO/S,GAAU,UAAWtE,IAC1C,CAAEkB,MAAO,KAAMmW,MAAO/S,GAAU,WAAYtE,IAC5C,CAAEkB,MAAO,MAAOmW,MAAO/S,GAAU,YAAatE,IAC9C,CAAEkB,MAAO,KAAMmW,MAAO/S,GAAU,WAAYtE,IAC5C,CAAEkB,MAAO,KAAMmW,MAAO/S,GAAU,WAAYtE,KAG9C,OACEe,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,CAAMiU,MAAO,CAAE0T,SAAU,UAAWpW,aAAc,SAChDxR,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,CAAaiE,MAAO,CAAEyB,QAAS,SAC7B3V,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CAAc7V,KAAK,OAAO8V,YAAY,GAAGrW,aAAc8C,EAAMuD,KAAMmQ,OAAQ7X,KAAKwnB,yBAChF1mB,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CACE0Q,QAASzR,KAAKonB,wBACd1V,QAAQ,SACRsD,MAAO,CAAE5C,WAAY,OAAQuW,SAAU,UAEvC7nB,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,iCAGxBxD,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAAC+U,EAAAhV,EAAD,CAAWiU,MAAOmT,GAChBrnB,EAAAC,EAAAC,cAACgV,EAAAjV,EAAD,KAEED,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,yBAAyB6M,eAAe,SAE/DrQ,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACEpW,aAAcrB,KAAKY,MAAMumB,YACzB/lB,GAAG,SACHE,SAAUtB,KAAKqnB,sBACf7lB,UAAU,iBAETsmB,KAMPhnB,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,8BAA8B6M,eAAe,cAEpErQ,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACEpW,aAAc8C,EAAMsF,SACpBrI,GAAG,SACHE,SAAUtB,KAAKsnB,2BACf9lB,UAAU,iBAETumB,KAMPjnB,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,4BAA4B6M,eAAe,YAElErQ,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACEpW,aAAc8C,EAAM9B,OACpBjB,GAAG,SACHE,SAAUtB,KAAKunB,yBACf/lB,UAAU,iBAEVV,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,OAM/Ce,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,yBAAyB6M,eAAe,SAE/DrQ,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACEpW,aAAc8C,EAAMC,IACpBhD,GAAG,SACHE,SAAUtB,KAAKynB,sBACfjmB,UAAU,iBAEVV,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,QAAStE,IACtCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,QAAStE,IACtCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,MAAMoD,GAAU,SAAUtE,OAM9Ce,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,+BAA+B6M,eAAe,eAErErQ,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACEpW,aAAc8C,EAAMK,UACpBpD,GAAG,SACHE,SAAUtB,KAAK4nB,4BACfpmB,UAAU,iBAEVV,EAAAC,EAAAC,cAAA,UAAQC,MAAM,QAAQoD,GAAU,iBAAkBtE,IAClDe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,WAAWoD,GAAU,oBAAqBtE,IACxDe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,SAASoD,GAAU,kBAAmBtE,IACpDe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,cAAcoD,GAAU,uBAAwBtE,IAC9De,EAAAC,EAAAC,cAAA,UAAQC,MAAM,aAAaoD,GAAU,sBAAuBtE,OAMlEe,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,+BAA+B6M,eAAe,eAErErQ,EAAAC,EAAAC,cAAC6nB,GAAA,EAAD,CACEC,cAAc,OACdpR,YAAa8Q,EACbO,QAASf,EACTgB,aAAa,EACbrL,SAAS,EACTrc,SAAUtB,KAAK0nB,4BACfrmB,aAAc4mB,MAMpBnnB,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,4BAA4B6M,eAAe,YAElErQ,EAAAC,EAAAC,cAAC6nB,GAAA,EAAD,CACEC,cAAc,OACdpR,YAAa8Q,EACbO,QAASN,EACTO,aAAa,EACbrL,SAAS,EACTrc,SAAUtB,KAAK2nB,yBACftmB,aAAc6mB,QAOxBpnB,EAAAC,EAAAC,cAAC+U,EAAAhV,EAAD,CAAWiU,MAAOmT,GAChBrnB,EAAAC,EAAAC,cAACgV,EAAAjV,EAAD,KAEED,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,+BAA+B6M,eAAe,mBAErErQ,EAAAC,EAAAC,cAAC0iB,GAAD,CACE1M,aAAc7S,EAAMuF,UACpBgO,YAAa4Q,EACb3R,SAAUkP,GACV5O,UAAWjX,KAAKymB,gCAMtB3lB,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KAAajT,GAAU,aAActE,IACrCe,EAAAC,EAAAC,cAAC0iB,GAAD,CACE1M,aAA4B,IAAd7S,EAAMwF,IAAY,GAAK3F,EAAcG,EAAMwF,IAAK5J,GAC9D2X,YAAarT,GAAU,aAActE,GACrC4W,SAAU3W,KAAKinB,YACfhQ,UAAWjX,KAAK0mB,0BAMtB5lB,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,+BAA+B6M,eAAe,eAErErQ,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACE7V,KAAK,OACL8V,YAAa6Q,EACblnB,aAAc8C,EAAM4F,SACpB8N,OAAQ7X,KAAKwmB,+BAMnB1lB,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KAAa6K,GACbrhB,EAAAC,EAAAC,cAAC0iB,GAAD,CACE1M,aAAc7S,EAAMwD,QACpB+P,YAAayK,EACbxL,SAAU,SAAAhU,GAAC,MAAW,KAANA,EAAW,KAAO,WAClCsU,UAAWjX,KAAK2mB,8BAMtB7lB,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KAAa+Q,GACbvnB,EAAAC,EAAAC,cAAC0iB,GAAD,CACE1M,aAAc7S,EAAMvD,MACpB8W,YAAa2Q,EACb1R,SAAU,SAAAhU,GAAC,MAAW,KAANA,EAAW,KAAO,WAClCsU,UAAWjX,KAAK4mB,4BAMtB9lB,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,yBAAyB6M,eAAe,WAE/DrQ,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACE7V,KAAK,SACLqnB,IAAI,IACJ5nB,aAA4B,IAAd8C,EAAM2F,IAAY,GAAK3F,EAAM2F,IAAIof,WAC/CrR,OAAQ,SAAClW,GAAD,OACNyd,EAAKmH,sBAAsB5kB,EAAME,cAAcZ,QAEjDK,SAAU,SAACK,GAAD,OACRyd,EAAKmH,sBAAsB5kB,EAAME,cAAcZ,YAOvDH,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,0BAA0B6M,eAAe,UAEhErQ,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACE7V,KAAK,OACL8V,YAAY,GACZrW,aAAc8C,EAAM8F,KACpB4N,OAAQ7X,KAAK6mB,6BAOvB/lB,EAAAC,EAAAC,cAAC+U,EAAAhV,EAAD,CAAWiU,MAAOmT,GAChBrnB,EAAAC,EAAAC,cAACgV,EAAAjV,EAAD,KAEED,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,+BAA+B6M,eAAe,eAErErQ,EAAAC,EAAAC,cAAC8Y,GAAA/Y,EAAD,KACED,EAAAC,EAAAC,cAAC8Y,GAAA/Y,EAAWgZ,QAAZ,KACEjZ,EAAAC,EAAAC,cAAC8Y,GAAA/Y,EAAWooB,KAAZ,WAEFroB,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACE7V,KAAK,OACL8V,YAAY,GACZrW,aAAc8C,EAAM4iB,UACpBlP,OAAQ7X,KAAK8mB,iCAOrBhmB,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,IACPvK,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KACExW,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,2BAA2B6M,eAAe,mCAEjErQ,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACE7V,KAAK,OACL8V,YAAY,GACZrW,aAAc8C,EAAM+F,MACpB2N,OAAQ7X,KAAKgnB,uCAhjBTtmB,IAAMe,WA+kBfd,eAnBS,SAACC,EAAoByd,GAE3C,IAAMzQ,EAAShN,EAAMyO,aAAazB,OAC5BzJ,EAAQvD,EAAMyO,aAAatC,QAAQa,EAAOyQ,EAAS/Z,KAEzD,MAAO,CACL8J,KAAMxN,EAAMwN,KACZjK,MAAOA,EACPpE,SAAUa,EAAMb,WAIO,SAAC2B,GAC1B,MAAO,CACL2kB,mBAAoB,SAAC3W,GAAD,OAAqBhO,EAAS2kB,GAAmB3W,KACrE4W,mBAAoB,SAAC5W,EAAiBJ,GAAlB,OAA0C5N,EAAS4kB,GAAmB5W,EAASJ,OAIxF3O,CAA6C4kB,ICtnBtD6D,eACJ,SAAAA,EAAYnpB,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAopB,IACxB5W,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAme,GAAAxW,KAAA5S,KAAMC,KAIR6b,YAAc,SAACna,GACb6Q,EAAKvS,MAAMmmB,gBAAgB,KAJ3B5T,EAAKsJ,YAActJ,EAAKsJ,YAAY7G,KAAjBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAFKA,wEAUxB,OACE1R,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ0Q,QAASzR,KAAK8b,YAAapK,QAAQ,UAAU2P,KAAK,KAAKtM,OAAK,GAClEjU,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,iCAAiC6M,eAAe,uBAbrDzQ,IAAMe,WAyBfd,eAAQ,KANI,SAACe,GAC1B,MAAO,CACL0kB,gBAAiB,SAAC9W,GAAD,OAAyB5N,EAAS0kB,GAAgB9W,OAIxD3O,CAAkCyoB,ICtCpCC,GAAY,SAACC,GACxB,QAAUrmB,IAANqmB,EAAiB,MAAO,GAC5B,IAAI3mB,EAAI6D,OAAO8iB,GAOf,MAAU,OAHV3mB,GADAA,EAAIA,EAAEE,QAAQ,KAAM,MACdA,QAAQ,KAAM,MAGE,GAGtBF,EAAIA,EAAEE,QAAQ,QAAS,KAAK0mB,QAWjBC,GAAU,SAACC,GACtB,YAAgBxmB,IAAZwmB,GAAqC,KAAZA,EAAuB,GAC7CJ,GAAU,IAAMI,IAQZC,GAA2B,SAAC5a,GASvC,IARA,IAAM6a,EAAmB,6BAKrBlc,EAAc,GACdiM,EAAY5K,EAET4K,GAAKiQ,EAASjkB,QAAQ,CAC3B,IAAMkkB,EAAMlQ,EAAIiQ,EAASjkB,OACnBmkB,EAAY1mB,KAAKmG,MAAMoQ,EAAIiQ,EAASjkB,QAE1C+H,EAAMkc,EAASC,GAAOnc,EAKtBiM,EAAImQ,EAAY,EAGlB,OAAOF,EAASjQ,GAAKjM,GAIVqc,GAAb,WAIE,SAAAA,IAAe7e,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAA8pB,GACb9pB,KAAK+pB,WAAa,GAClB/pB,KAAKgqB,KAAO,GANhB,OAAA/e,OAAAgf,EAAA,EAAAhf,CAAA6e,EAAA,EAAAtpB,IAAA,SAAAS,MAAA,WAUI,OAAOjB,KAAKgqB,KAAKtkB,SAVrB,CAAAlF,IAAA,QAAAS,MAAA,SAaQyG,GACJ,OAAO1H,KAAK+pB,WAAWG,QAAQxiB,KAdnC,CAAAlH,IAAA,eAAAS,MAAA,SAiBeyG,GACX1H,KAAK+pB,WAAWrc,KAAKhG,GACrB,IAAK,IAAIjC,EAAI,EAAGA,EAAIzF,KAAKgqB,KAAKtkB,OAAQD,IACpCzF,KAAKgqB,KAAKvkB,GAAGiI,KAAK,MApBxB,CAAAlN,IAAA,gBAAAS,MAAA,SAwBgBkpB,GACZnqB,KAAK+pB,WAAa/pB,KAAK+pB,WAAW5nB,OAAOgoB,GACzC,IAAK,IAAI1kB,EAAI,EAAGA,EAAIzF,KAAKgqB,KAAKtkB,OAAQD,IACpC,IAAK,IAAI2kB,EAAI,EAAGA,EAAID,EAASzkB,OAAQ0kB,IACnCpqB,KAAKgqB,KAAKvkB,GAAGiI,KAAK,MA5B1B,CAAAlN,IAAA,eAAAS,MAAA,SAiCe6N,EAAepH,GAC1B1H,KAAK+pB,WAAWM,OAAOvb,EAAO,EAAGpH,GACjC,IAAK,IAAIjC,EAAI,EAAGA,EAAIzF,KAAKgqB,KAAKtkB,OAAQD,IACpCzF,KAAKgqB,KAAKvkB,GAAG4kB,OAAOvb,EAAO,EAAG,MApCpC,CAAAtO,IAAA,sBAAAS,MAAA,SAwCsB6N,GAClB9O,KAAK+pB,WAAWM,OAAOvb,EAAO,GAC9B,IAAK,IAAIrJ,EAAI,EAAGA,EAAIzF,KAAKgqB,KAAKtkB,OAAQD,IACpCzF,KAAKgqB,KAAKvkB,GAAG4kB,OAAOvb,EAAO,KA3CjC,CAAAtO,IAAA,qBAAAS,MAAA,SA+CqByG,GACjB,IAAK,IAAIjC,EAAI,EAAGA,EAAIzF,KAAK+pB,WAAWrkB,OAAQD,IAC1C,GAAIzF,KAAK+pB,WAAWtkB,KAAOiC,EAEzB,YADA1H,KAAKsqB,oBAAoB7kB,KAlDjC,CAAAjF,IAAA,qBAAAS,MAAA,WAyDI,IAAK,IAAIwE,EAAI,EAAGA,EAAIzF,KAAK+pB,WAAWrkB,OAAQD,IAAK,CAE/C,IADA,IAAI8kB,GAAQ,EACHH,EAAI,EAAGA,EAAIpqB,KAAKgqB,KAAKtkB,OAAQ0kB,IACpC,GAAwB,KAApBpqB,KAAKgqB,KAAKI,GAAG3kB,GAAW,CAC1B8kB,GAAQ,EACR,MAGJ,IAAc,IAAVA,EAGF,OAFAvqB,KAAKsqB,oBAAoB7kB,QACzBzF,KAAKwqB,wBAnEb,CAAAhqB,IAAA,aAAAS,MAAA,SA4Ea0B,GAGT,GAAIA,EAAE6J,SAAS,KAAM,CAInB,MAFK,uEACA,2EAAL8D,gLAeF,IAPA,IAAMma,EAAQ9nB,EAAE4mB,OAAOze,MAAM,MAGvBif,EAAaU,EAAM,GAAG3f,MAAM,KAAKC,IAAI,SAAAue,GAAC,OAAIA,EAAEC,SAG5CS,EAAO,GACJvkB,EAAI,EAAGA,EAAIglB,EAAM/kB,SAAUD,EAAG,CACrC,IAAMilB,EAAMD,EAAMhlB,GAAGqF,MAAM,KAAKC,IAAI,SAAAue,GAAC,OAAIA,EAAEC,SAC3CS,EAAKtc,KAAKgd,GAKZ,IAAK,IAAIjlB,EAAI,EAAGA,EAAIskB,EAAWrkB,SAAUD,EAAG,CAC1C,GAAsB,KAAlBskB,EAAWtkB,GAEb,MAAO,UADSikB,GAAyBjkB,GACZ,6BAKjC,IAAK,IAAIA,EAAI,EAAGA,EAAIukB,EAAKtkB,SAAUD,EACjC,GAAIukB,EAAKvkB,GAAGC,SAAWqkB,EAAWrkB,OAAQ,CACxC,IACI4K,EAAI,QADO7K,EAAI,GACO,QAAUukB,EAAKvkB,GAAGC,OAAS,YAErD,OADA4K,GAAK,0BAA4ByZ,EAAWrkB,OAAS,YAOzD,OAFA1F,KAAK+pB,WAAaA,EAClB/pB,KAAKgqB,KAAOA,EACLhqB,OA3HX,CAAAQ,IAAA,WAAAS,MAAA,WAiII,IAFA,IAAM0pB,EAAU3qB,KAAK+pB,WAAWa,KAAK,KAC/BC,EAAyB,GACtBplB,EAAI,EAAGA,EAAIzF,KAAKgqB,KAAKtkB,OAAQD,IACpColB,EAAQnd,KAAK1N,KAAKgqB,KAAKvkB,GAAGmlB,KAAK,MAEjC,OAAOD,EAAU,KAAOE,EAAQD,KAAK,MAAQ,SApIjDd,EAAA,GC1DagB,GAAe,SAACnoB,GAO3B,GAAiB,IAAbA,EAAE+C,OAAN,CAKA,IAAK,IAAID,EAAI,EAAGA,EAAI9C,EAAE+C,SAAUD,EAAG,CACjC,IAAMslB,EAAWpoB,EAAEqoB,WAAWvlB,GAG9B,IAAU,IAANA,GAZc,KAYHslB,KAEJA,EAhBG,IAgBmBA,EAfnB,IAgBZ,OAIJ,OAAOpS,SAAShW,EAAG,MAoDRsoB,GAAY,SAACtoB,GAMxB,GAAiB,MAHjBA,EAAIA,EAAEE,QAAQ,IAAK,KAGb6C,OAAN,CAIA,IAAMogB,EAASnjB,EAAEmI,MAAM,KACvB,GAAsB,IAAlBgb,EAAOpgB,QAIc,IAArBogB,EAAO,GAAGpgB,QAAqC,IAArBogB,EAAO,GAAGpgB,QAAqC,IAArBogB,EAAO,GAAGpgB,OAAlE,CAIA,IAAMO,EAAO6kB,GAAahF,EAAO,IAC3B3f,EAAQ2kB,GAAahF,EAAO,IAC5Bzf,EAAMykB,GAAahF,EAAO,IAEhC,KAAoB,kBAAT7f,GAAqBA,EAAO,SAClB,kBAAVE,GAAsBA,EAAQ,GAAKA,EAAQ,OACnC,kBAARE,GAAoBA,EAAM,GAAKA,EAAM,IAEhD,OAAO1D,KCzFIuoB,GAA8B,SAACnrB,GAC1C,IAAMorB,EAAM,IAAIrB,GAChBqB,EAAInB,KAAO,CAAC,IAEZ,IAAM3jB,EAAMhC,GAAU,oBAAqBtE,GACrC0J,EAAWpF,GAAU,yBAA0BtE,GAC/CsC,EAASgC,GAAU,uBAAwBtE,GAC3C2H,EAAOrD,GAAU,qBAAsBtE,GACvCqE,EAAMC,GAAU,oBAAqBtE,GACrCyE,EAAYH,GAAU,0BAA2BtE,GACjDqrB,EAAY/mB,GAAU,2BAA4BtE,GAAU8C,QAAQ,MAAO,KAC3EwoB,EAAYhnB,GAAU,2BAA4BtE,GAAU8C,QAAQ,MAAO,KAC3EyoB,EAAYjnB,GAAU,2BAA4BtE,GAAU8C,QAAQ,MAAO,KAC3E0oB,EAASlnB,GAAU,wBAAyBtE,GAAU8C,QAAQ,MAAO,KACrE2oB,EAASnnB,GAAU,wBAAyBtE,GAAU8C,QAAQ,MAAO,KACrE4oB,EAASpnB,GAAU,wBAAyBtE,GAAU8C,QAAQ,MAAO,KACrE6oB,EAAYrnB,GAAU,0BAA2BtE,GACjD4J,EAAMtF,GAAU,oBAAqBtE,GACrC4rB,EAAWtnB,GAAU,yBAA0BtE,GAC/C4H,EAAUtD,GAAU,wBAAyBtE,GAC7Ca,EAAQyD,GAAU,sBAAuBtE,GACzC+J,EAAMzF,GAAU,oBAAqBtE,GACrCkK,EAAO5F,GAAU,qBAAsBtE,GACvCgnB,EAAY1iB,GAAU,0BAA2BtE,GACjDmK,EAAQ7F,GAAU,sBAAuBtE,GA6B/C,OA3BAorB,EAAIS,cAAc,CAACvlB,EAAKoD,EAAUpH,EAAQqF,EAAMtD,EAAKI,IACrD2mB,EAAIS,cAAc,CAACR,EAAWC,EAAWC,EAAWC,EAAQC,EAAQC,IACpEN,EAAIS,cAAc,CAACF,EAAW/hB,EAAKgiB,EAAUhkB,EAAS/G,IACtDuqB,EAAIS,cAAc,CAAC9hB,EAAKG,EAAM8c,EAAW7c,IAEzCihB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAMzI,IAAQ,IAC9B8kB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAMrF,IAAa,IACnC0hB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAMzM,IAAWgC,GAAU,WAAYtE,GACvDorB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAMpH,IAASrD,GAAU,sBAAuBtE,GAChEorB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAM1K,IAAQC,GAAU,qBAAsBtE,GAC9DorB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAMtK,IAAcH,GAAU,oBAAqBtE,GACnEorB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAMsc,IAAc/mB,GAAU,2BAA4BtE,GAC1EorB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAMuc,IAAchnB,GAAU,2BAA4BtE,GAE1EorB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAMyc,IAAWlnB,GAAU,YAAatE,GACxDorB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAM0c,IAAWnnB,GAAU,WAAYtE,GAEvDorB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAM4c,IAAclC,GAAQnlB,GAAU,2BAA4BtE,IAGlForB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAMnH,IAAYtD,GAAU,yBAA0BtE,GACtEorB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAMlO,IAAUyD,GAAU,uBAAwBtE,GAGlEorB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAMiY,IAAc1iB,GAAU,2BAA4BtE,GAC1EorB,EAAInB,KAAK,GAAGmB,EAAIrc,MAAM5E,IAAU7F,GAAU,uBAAwBtE,GAE3DorB,EAAIjC,YASA2C,GAAoB,SAACjrB,EAAoBuqB,EAAUprB,GA8D9D,IA7DA,IAAM+rB,EAAoBznB,GAAU,2BAA4BtE,GAC1DgsB,EAAiB1nB,GAAU,wBAAyBtE,GAEpDisB,EAAU3nB,GAAU,oBAAqBtE,GACzCksB,EAAe5nB,GAAU,yBAA0BtE,GACnDmsB,EAAa7nB,GAAU,uBAAwBtE,GAC/CosB,EAAW9nB,GAAU,qBAAsBtE,GAC3CqsB,EAAU/nB,GAAU,oBAAqBtE,GACzCssB,EAAgBhoB,GAAU,0BAA2BtE,GACrDusB,EAAgBR,EAAkBjpB,QAAQ,MAAO,KACjD0pB,EAAgBT,EAAkBjpB,QAAQ,MAAO,KACjD2pB,EAAgBV,EAAkBjpB,QAAQ,MAAO,KACjD4pB,EAAgBX,EAAkBjpB,QAAQ,MAAO,KACjD6pB,EAAgBZ,EAAkBjpB,QAAQ,MAAO,KACjD8pB,EAAaZ,EAAelpB,QAAQ,MAAO,KAC3C+pB,EAAab,EAAelpB,QAAQ,MAAO,KAC3CgqB,EAAad,EAAelpB,QAAQ,MAAO,KAC3CiqB,EAAaf,EAAelpB,QAAQ,MAAO,KAC3CkqB,EAAahB,EAAelpB,QAAQ,MAAO,KAC3CmqB,EAAgB3oB,GAAU,0BAA2BtE,GACrDktB,EAAU5oB,GAAU,oBAAqBtE,GACzCmtB,EAAe7oB,GAAU,yBAA0BtE,GACnDotB,EAAc9oB,GAAU,wBAAyBtE,GACjDqtB,EAAY/oB,GAAU,sBAAuBtE,GAC7CstB,EAAUhpB,GAAU,oBAAqBtE,GACzCutB,EAAWjpB,GAAU,qBAAsBtE,GAC3CwtB,EAAgBlpB,GAAU,0BAA2BtE,GACrDytB,EAAYnpB,GAAU,sBAAuBtE,GAG7C0tB,EAAuB,CAC3BzB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAK,GAEIe,EAAsB,CAC1BnB,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAIO/nB,EAAI,EAAGA,EAAI0lB,EAAIpB,WAAWrkB,SAAUD,EAAG,CAC9C,IAAMiC,EAAeyjB,EAAIpB,WAAWtkB,GAGpC,IAAKgoB,EAAqBjhB,SAAS9E,KAAUgmB,EAAoBlhB,SAAS9E,GAAO,CAC/E,IAAMimB,EAAUjE,GAAyBjkB,GACnCmoB,EAAoBH,EAAqB7C,KAAK,MAAQ,KAAO8C,EAAoB9C,KAAK,MAG5F,OADUvmB,GAAU,2BAA4BtE,GAE7C8C,QAAQ,SAAU6E,GAClB7E,QAAQ,QAAS8qB,GACjB9qB,QAAQ,cAAe+qB,GAI5B,IAAK,IAAIxD,EAAI3kB,EAAI,EAAG2kB,EAAIe,EAAIpB,WAAWrkB,SAAU0kB,EAC/C,GAAIe,EAAIpB,WAAWK,KAAOe,EAAIpB,WAAWtkB,GAAI,CAC3C,IAAMooB,EAAQnE,GAAyBjkB,GACjCqoB,EAAQpE,GAAyBU,GAGvC,OADU/lB,GAAU,6BAA8BtE,GAE/C8C,QAAQ,SAAUsoB,EAAIpB,WAAWtkB,IACjC5C,QAAQ,aAAcgrB,GACtBhrB,QAAQ,cAAeirB,IAMhC,IAAK,IAAIroB,EAAI,EAAGA,EAAIgoB,EAAqB/nB,SAAUD,EAAG,CACpD,IAAK0lB,EAAIpB,WAAWvd,SAASihB,EAAqBhoB,IAEhD,OADUpB,GAAU,2BAA4BtE,GACvC8C,QAAQ,SAAU4qB,EAAqBhoB,IAOpD,GAAI0lB,EAAIpB,WAAWG,QAAQ+B,IAAiBd,EAAIpB,WAAWG,QAAQ8B,GAEjE,OADU3nB,GAAU,+BAAgCtE,GAC3C8C,QAAQ,QAASmpB,GAASnpB,QAAQ,aAAcopB,GAU3D,IANA,IAAIte,EAAc/M,EAAMyO,aAAa1B,YAC/BZ,EAAwB,GAExBghB,EAAqB1pB,GAAU,yBAA0BtE,GAGtD0F,EAAI,EAAGA,EAAI0lB,EAAInB,KAAKtkB,SAAUD,EAAG,CACxC,IAAMtB,EAAeqF,GAAgBmE,KACrCZ,EAAQW,KAAKvJ,GAIb,IADA,IAAMumB,EAAqBS,EAAInB,KAAKvkB,GAC3B2kB,EAAI,EAAGA,EAAIM,EAAIhlB,SAAU0kB,EAAG,CACnC,IAAM4D,EAAY7C,EAAIpB,WAAWK,GAC3B6D,EAAMvD,EAAIN,GAIV8D,EAASlqB,EAAcyB,EAAI,EAAG1F,GAG9BouB,EAAYJ,EACflrB,QAAQ,aAAcmrB,GACtBnrB,QAAQ,cAAeorB,GACvBprB,QAAQ,cAAeqrB,GAE1B,GAAIF,IAAchC,EAEhB,GAAY,KAARiC,EACF9pB,EAAMkC,IAAM,MACP,CACL,IAAM+nB,EAAUtD,GAAamD,GAG7B,GAAuB,kBAAZG,EACT,OAAOD,EAAY9pB,GAAU,iCAAkCtE,GAIjE,GAAIquB,EAAU,EACZ,OAAOD,EAAY9pB,GAAU,kCAAmCtE,GAIlE,IAAMuO,EAAU1N,EAAMwN,KAAKpG,WAC3B,GAAIomB,EAAU9f,EAEZ,OAAO6f,EADG9pB,GAAU,sCAAuCtE,GACtC8C,QAAQ,YAAa2D,OAAO8H,IAInDnK,EAAMkC,IAAM+nB,OAET,GAAIJ,IAAc/B,EAEvB,GAAY,KAARgC,EACF9pB,EAAMsF,SAAW,MACZ,CACL,IAAM2kB,GAAUtD,GAAamD,GAG7B,GAAuB,kBAAZG,GACT,OAAOD,EAAY9pB,GAAU,iCAAkCtE,GAIjE,GAAIquB,GAAU,EACZ,OAAOD,EAAY9pB,GAAU,kCAAmCtE,GAMlE,IAAMsG,GAAMlC,EAAMkC,IACZgoB,GAAYztB,EAAMwN,KAAKnG,gBAAgB5B,IAC7C,GAAI+nB,GAAUC,GAEZ,OAAOF,EADG9pB,GAAU,2CAA4CtE,GAC3C8C,QAAQ,cAAe2D,OAAOH,KAAMxD,QAAQ,iBAAkB2D,OAAO6nB,KAI5FlqB,EAAMsF,SAAW2kB,QAEd,GAAIJ,IAAc9B,EAEvB,GAAY,KAAR+B,EACF9pB,EAAM9B,OAAS,SAEf,IACE8B,EAAM9B,OAASyC,GAAiBmpB,EAAKluB,GACrC,MAAOuU,IACP,OAAO6Z,EAAY9pB,GAAU,wCAAyCtE,QAGrE,GAAIiuB,IAAc7B,EAAU,CACjC,GAAY,KAAR8B,EACF,OAAOE,EAAY9pB,GAAU,oCAAqCtE,GAEpEoE,EAAMuD,KAAOumB,OACR,GAAID,IAAc5B,EACvB,IACEjoB,EAAMC,IAAMY,GAAcipB,EAAKluB,GAC/B,MAAOuU,IACP,IAAMhE,GAAIjM,GAAU,qCAAsCtE,GACpDuuB,GAAIjqB,GAAU,QAAStE,GACvBwuB,GAAIlqB,GAAU,QAAStE,GACvByuB,GAAKnqB,GAAU,SAAUtE,GAC/B,OACEouB,EACA7d,GACGzN,QAAQ,MAAOyrB,IACfzrB,QAAQ,MAAO0rB,IACf1rB,QAAQ,OAAQ2rB,SAGlB,GAAIR,IAAc3B,EACvB,IACEloB,EAAMK,UAAYC,GAAoBwpB,EAAKluB,GAC3C,MAAOuU,IACP,IAAMhE,GAAIjM,GAAU,2CAA4CtE,GAC1D0uB,GAAOpqB,GAAU,iBAAkBtE,GACnC2uB,GAAUrqB,GAAU,oBAAqBtE,GACzC4uB,GAAQtqB,GAAU,kBAAmBtE,GACrC6uB,GAASvqB,GAAU,uBAAwBtE,GAC3C8uB,GAAQxqB,GAAU,sBAAuBtE,GAC/C,OACEouB,EACA7d,GACGzN,QAAQ,SAAU4rB,IAClB5rB,QAAQ,YAAa6rB,IACrB7rB,QAAQ,UAAW8rB,IACnB9rB,QAAQ,WAAY+rB,IACpB/rB,QAAQ,UAAWgsB,SAGrB,GACLb,IAAc1B,GACd0B,IAAczB,GACdyB,IAAcxB,GACdwB,IAAcvB,GACduB,IAActB,EAEd,GAAY,KAARuB,GAEF,GAAID,IAAc1B,EAChB,OAAO6B,EAAY9pB,GAAU,wCAAyCtE,OAEnE,CAEL,IAAKa,EAAMwN,KAAKlG,UAAUsE,SAASyhB,GACjC,OAAOE,EAAY9pB,GAAU,0CAA2CtE,GAI1E,GAAIoE,EAAM+D,UAAUsE,SAASyhB,GAC3B,OAAOE,EAAY9pB,GAAU,4CAA6CtE,GAG5EoE,EAAM+D,UAAUwF,KAAKugB,QAElB,GACLD,IAAcrB,GACdqB,IAAcpB,GACdoB,IAAcnB,GACdmB,IAAclB,GACdkB,IAAcjB,EAEd,GAAY,KAARkB,GAEF,GAAID,IAAcrB,EAChB,OAAOwB,EAAY9pB,GAAU,qCAAsCtE,QAGrE,IACE,IAAM+uB,GAAMlqB,GAAgBqpB,EAAKluB,GAGjC,GAAIoE,EAAM0F,OAAO2C,SAASsiB,IACxB,OAAOX,EAAY9pB,GAAU,yCAA0CtE,GAEzEoE,EAAM0F,OAAO6D,KAAKohB,IAClB,MAAOxa,IACP,IAAMhE,GAAIjM,GAAU,uCAAwCtE,GACtDgvB,GAAM1qB,GAAU,YAAatE,GAC7B2L,GAAKrH,GAAU,WAAYtE,GAC3BivB,GAAK3qB,GAAU,WAAYtE,GAC3BkvB,GAAK5qB,GAAU,WAAYtE,GAC3B4C,GAAI0B,GAAU,UAAWtE,GACzBme,GAAI7Z,GAAU,UAAWtE,GACzBiG,GAAI3B,GAAU,UAAWtE,GAC/B,OACEouB,EACA7d,GACGzN,QAAQ,QAASksB,IACjBlsB,QAAQ,OAAQ6I,IAChB7I,QAAQ,OAAQmsB,IAChBnsB,QAAQ,OAAQosB,IAChBpsB,QAAQ,MAAOF,IACfE,QAAQ,MAAOqb,IACfrb,QAAQ,MAAOmD,SAInB,GAAIgoB,IAAchB,GAEvB,GAAY,KAARiB,EAAY,CACd,IAAMviB,GAAKuf,GAAUgD,GACrB,GAAkB,kBAAPviB,GACT,OAAOyiB,EAAY9pB,GAAU,qCAAsCtE,GAGrEoE,EAAMuF,UAAYgC,SAEf,GAAIsiB,IAAcf,GAEvB,GAAY,KAARgB,EAAY,CACd,IAAMG,GAAUtD,GAAamD,GAC7B,GAAuB,kBAAZG,IAAwBA,GAAU,EAC3C,OAAOD,EAAY9pB,GAAU,oCAAqCtE,GAIpEoE,EAAMwF,IAAMykB,SAET,GAAIJ,IAAcd,EACvB/oB,EAAM4F,SAAWkkB,OACZ,GAAID,IAAcb,EACvBhpB,EAAMwD,QAAUsmB,OACX,GAAID,IAAcZ,EACvBjpB,EAAMvD,MAAQqtB,OACT,GAAID,IAAcX,GAEvB,GAAY,KAARY,EAAY,CACd,IAAMG,GAAUtD,GAAamD,GAC7B,GAAuB,kBAAZG,IAAwBA,GAAU,EAC3C,OAAOD,EAAY9pB,GAAU,oCAAqCtE,GAIpEoE,EAAM2F,IAAMskB,SAET,GAAIJ,IAAcV,EACvBnpB,EAAM8F,KAAOgkB,OACR,GAAID,IAAcT,EACvBppB,EAAM4iB,UAAYkH,MACb,IAAID,IAAcR,EAGvB,MAAO,4BAA8BQ,EAAY,WAFjD7pB,EAAM+F,MAAQ+jB,IAOpB,OAAOlhB,GCnbImiB,GAAuB,SAAC7f,EAAiCtP,GACpE,IAAMorB,EAAM,IAAIrB,GAEVgC,EAAoBznB,GAAU,2BAA4BtE,GAC1DgsB,EAAiB1nB,GAAU,wBAAyBtE,GAEpDisB,EAAU3nB,GAAU,oBAAqBtE,GACzCksB,EAAe5nB,GAAU,yBAA0BtE,GACnDmsB,EAAa7nB,GAAU,uBAAwBtE,GAC/CosB,EAAW9nB,GAAU,qBAAsBtE,GAC3CqsB,EAAU/nB,GAAU,oBAAqBtE,GACzCssB,EAAgBhoB,GAAU,0BAA2BtE,GACrDusB,EAAgBR,EAAkBjpB,QAAQ,MAAO,KACjD8pB,EAAaZ,EAAelpB,QAAQ,MAAO,KAC3CmqB,EAAgB3oB,GAAU,0BAA2BtE,GACrDktB,EAAU5oB,GAAU,oBAAqBtE,GACzCmtB,EAAe7oB,GAAU,yBAA0BtE,GACnDotB,EAAc9oB,GAAU,wBAAyBtE,GACjDqtB,EAAY/oB,GAAU,sBAAuBtE,GAC7CstB,EAAUhpB,GAAU,oBAAqBtE,GACzCutB,EAAWjpB,GAAU,qBAAsBtE,GAC3CwtB,EAAgBlpB,GAAU,0BAA2BtE,GACrDytB,EAAYnpB,GAAU,sBAAuBtE,GAEnDorB,EAAIS,cAAc,CAACI,EAASC,EAAcC,EAAYC,EAAUC,EAASC,IACzElB,EAAIS,cAAc,CAACU,EAAeK,IAClCxB,EAAIS,cAAc,CAACoB,EAAeC,EAASC,EAAcC,EAAaC,IACtEjC,EAAIS,cAAc,CAACyB,EAASC,EAAUC,EAAeC,IAErD,IAAK,IAAI/nB,EAAI,EAAGA,EAAI4J,EAAatC,QAAQrH,SAAUD,EAAG,CACpD,IAAMtB,EAAQkL,EAAatC,QAAQtH,GAE7BilB,EAAqB,IAAIzN,MAAMkO,EAAIpB,WAAWrkB,QAAQypB,KAAK,IACjEzE,EAAIS,EAAIrc,MAAMkd,IAAY3C,GAAUllB,EAAMkC,KAC1CqkB,EAAIS,EAAIrc,MAAMmd,IAAiB5C,GAAUllB,EAAMsF,UAC/CihB,EAAIS,EAAIrc,MAAMod,IAAe7C,GAAUxkB,GAAeV,EAAM9B,OAAQtC,IACpE2qB,EAAIS,EAAIrc,MAAMqd,IAAa9C,GAAUllB,EAAMuD,MAC3CgjB,EAAIS,EAAIrc,MAAMsd,IAAY/C,GAAUtkB,GAAYZ,EAAMC,IAAKrE,IAC3D2qB,EAAIS,EAAIrc,MAAMud,IAAkBhD,GAAU9kB,GAAkBJ,EAAMK,UAAWzE,IAC7E2qB,EAAIS,EAAIrc,MAAMke,IAAkBxD,GAAQrlB,EAAMuF,WAC9CghB,EAAIS,EAAIrc,MAAMme,IAAY5D,GAAUllB,EAAMwF,KAC1C+gB,EAAIS,EAAIrc,MAAMoe,IAAiB7D,GAAUllB,EAAM4F,UAC/C2gB,EAAIS,EAAIrc,MAAMqe,IAAgB9D,GAAUllB,EAAMwD,SAC9C+iB,EAAIS,EAAIrc,MAAMse,IAAc/D,GAAUllB,EAAMvD,OAC5C8pB,EAAIS,EAAIrc,MAAMue,IAAYhE,GAAUllB,EAAM2F,KAC1C4gB,EAAIS,EAAIrc,MAAMwe,IAAajE,GAAUllB,EAAM8F,MAC3CygB,EAAIS,EAAIrc,MAAMye,IAAkBlE,GAAUllB,EAAM4iB,WAChD2D,EAAIS,EAAIrc,MAAM0e,IAAcnE,GAAUllB,EAAM+F,OAG5C,IAAK,IAAIkgB,EAAI,EAAGA,EAAIjmB,EAAM+D,UAAUxC,SAAU0kB,EAAG,CAC/C,IAAM5M,EAAmBrZ,EAAM+D,UAAUkiB,GACnCgF,EAAiBtD,EAAkBjpB,QAAQ,MAAO2D,OAAO4jB,EAAI,IAGnE,IAA2B,IAAvBe,EAAIrc,MAAMsgB,GAAgB,CAC5B,IAAMC,EAAYlE,EAAIrc,MAAMgd,EAAkBjpB,QAAQ,MAAO2D,OAAO4jB,KACpEe,EAAImE,aAAaD,EAAY,EAAGD,GAChC1E,EAAIL,OAAOgF,EAAY,EAAG,EAAG,IAE/B3E,EAAIS,EAAIrc,MAAMsgB,IAAW/F,GAAU7L,GAIrC,IAAK,IAAI4M,EAAI,EAAGA,EAAIjmB,EAAM0F,OAAOnE,SAAU0kB,EAAG,CAC5C,IAAMzoB,EAAQwC,EAAM0F,OAAOugB,GACrBgF,EAAiBrD,EAAelpB,QAAQ,MAAO2D,OAAO4jB,EAAI,IAGhE,IAA2B,IAAvBe,EAAIrc,MAAMsgB,GAAgB,CAC5B,IAAMC,EAAYlE,EAAIrc,MAAMid,EAAelpB,QAAQ,MAAO2D,OAAO4jB,KACjEe,EAAImE,aAAaD,EAAY,EAAGD,GAChC1E,EAAIL,OAAOgF,EAAY,EAAG,EAAG,IAE/B3E,EAAIS,EAAIrc,MAAMsgB,IAAW/F,GAAU1kB,GAAchD,EAAO5B,IAG1DorB,EAAInB,KAAKtc,KAAKgd,GAGhB,OAAOS,EAAIjC,YCtCTqG,GAA2B,YAEzBC,eACJ,SAAAA,EAAYvvB,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAwvB,IACxBhd,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAukB,GAAA5c,KAAA5S,KAAMC,KAWRwvB,+BAAiC,WAC/B,IAAM/qB,EAAOwmB,GAA4B1Y,EAAKvS,MAAMyvB,OAAO3vB,UACrD4U,EAAO,IAAIC,KAAK,CAAClQ,GAAO,CAAE9C,KAAM,mCAChC+tB,EAAWtrB,GAAU,2BAA4BmO,EAAKvS,MAAMyvB,OAAO3vB,UAAY,OACrF8U,iBAAOF,EAAMgb,IAhBWnd,EAmB1Bod,qBAAuB,WACrB,IAAInb,EAAWjC,EAAKvS,MAAMyvB,OAAOthB,KAAK1G,KACrB,KAAb+M,IACFA,EAAWpQ,GAAU,0BAA2BmO,EAAKvS,MAAMyvB,OAAO3vB,WAEpE0U,EAAWA,EAAS5R,QAAQ,KAAM,KAElC,IAAM9C,EAAWyS,EAAKvS,MAAMyvB,OAAO3vB,SAC7B2E,EAAOwqB,GAAqB1c,EAAKvS,MAAMyvB,OAAOrgB,aAActP,GAC5D4U,EAAO,IAAIC,KAAK,CAAClQ,GAAO,CAAE9C,KAAM,mCAGhC+tB,EADWtrB,GAAU,yBAA0BmO,EAAKvS,MAAMyvB,OAAO3vB,UAC7C8C,QAAQ,aAAc4R,GAAY,OAC5DI,iBAAOF,EAAMgb,IAhCWnd,EAmC1Bqd,qBAAuB,WACrBN,GAAmB,YACnB,IAAMzc,EAAaC,SAASC,eAAe,cACxB,OAAfF,GACFA,EAAWG,SAvCWT,EA2C1Bsd,kBAAoB,WAClBP,GAAmB,SACnB,IAAMzc,EAAaC,SAASC,eAAe,cACxB,OAAfF,GACFA,EAAWG,SA/CWT,EAmD1Be,oBAAsB,WACpB,IAAMC,EAAaT,SAASC,eAAe,cAC3C,GAAmB,OAAfQ,GAAyBA,aAAsBC,kBAA0C,OAArBD,EAAWE,MAAnF,CAIA,IAAMC,EAAeH,EAAWE,MAAM,GAChCG,EAAY5I,OAAA6I,EAAA,EAAA7I,CAAAuH,GAEZuB,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAStS,GAGvB,GAA6B,kBAAlBoS,EAAO7R,OAAlB,CAKA,IAAMipB,EAAM,IAAIrB,GACViG,EAAa5E,EAAI6E,WAAWjc,EAAO7R,OAAOW,QAAQ,KAAM,MAG9D,GAA0B,kBAAfktB,EAAX,CAMA,IAAMhwB,EAAW8T,EAAa5T,MAAMyvB,OAAO3vB,SACrCkwB,EAAepE,GAAkBhY,EAAa5T,MAAMyvB,OAAQvE,EAAKprB,GACvE,GAA4B,kBAAjBkwB,EAAX,CAMA,IAAMljB,EAAwBkjB,EAG9B,GAAyB,cAArBV,GAEF,IADA,IAAMW,EAAWrc,EAAa5T,MAAMyvB,OAAOrgB,aAAatC,QAAQhC,IAAI,SAAAuF,GAAC,OAAIA,EAAEhM,KAClEmB,EAAI,EAAGA,EAAIyqB,EAASxqB,SAAUD,EACrCoO,EAAa5T,MAAMomB,mBAAmB6J,EAASzqB,IAKnD,IAAK,IAAIA,EAAI,EAAGA,EAAIsH,EAAQrH,SAAUD,SAE7BsH,EAAQtH,GAAGnB,GAClBuP,EAAa5T,MAAMmmB,gBAAgBrZ,EAAQtH,SAnB3CoO,EAAaV,SAAS,CAAE3V,MAAOyyB,SAR/Bpc,EAAaV,SAAS,CAAE3V,MAAOuyB,SAT/BnxB,OAAOuxB,MAAM,8DAwCjBpc,EAAOqc,YAAc,SAASzuB,GAC5BkS,EAAaV,SAAS,CAAEkd,gBAAgB,KAG1Ctc,EAAOuc,UAAY,SAAS3uB,GAC1BkS,EAAaV,SAAS,CAAEkd,gBAAgB,KAG1Ctc,EAAOQ,WAAWZ,KAlHMnB,EAqH1Bc,gBAAkB,WAChBd,EAAKW,SAAS,CAAE3V,MAAO,MApHvBgV,EAAKid,+BAAiCjd,EAAKid,+BAA+Bxa,KAApChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACtCA,EAAKod,qBAAuBpd,EAAKod,qBAAqB3a,KAA1BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC5BA,EAAKqd,qBAAuBrd,EAAKqd,qBAAqB5a,KAA1BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC5BA,EAAKsd,kBAAoBtd,EAAKsd,kBAAkB7a,KAAvBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACzBA,EAAKe,oBAAsBf,EAAKe,oBAAoB0B,KAAzBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC3BA,EAAKc,gBAAkBd,EAAKc,gBAAgB2B,KAArBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAEvBA,EAAK5R,MAAQ,CAAEpD,MAAO,GAAI6yB,gBAAgB,GATlB7d,wEA0HxB,IAAM+d,EAAavwB,KAAKC,MAAMyvB,OAAOrgB,aAAatC,QAAQrH,OAE1D,OACE5E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4U,GAAD,CACEpY,MAAOwC,KAAKY,MAAMpD,MAClBwU,MAAO3N,GAAU,iCAAkCrE,KAAKC,MAAMyvB,OAAO3vB,UACrE6Q,KAA2B,KAArB5Q,KAAKY,MAAMpD,MACjBsT,MAAO9Q,KAAKsT,kBAGdxS,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,CAAMiU,MAAO,CAAE1C,aAAc,SAC3BxR,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,uCAAuC6M,eAAe,+BAE7ErQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ2Q,QAAQ,OAAOD,QAASzR,KAAKyvB,gCACnC3uB,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,wCAAwC6M,eAAe,uBAG9ErQ,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CACE2Q,QAAQ,UACRiG,SAAyB,IAAf4Y,EACV9e,QAASzR,KAAK4vB,qBACd5a,MAAO,CAAE5C,WAAY,SAErBtR,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,oCAAoC6M,eAAe,mBAG1ErQ,EAAAC,EAAAC,cAACygB,GAAA1gB,EAAD,CAAaiU,MAAO,CAAE5C,WAAY,SAChCtR,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ2Q,QAAQ,SAASD,QAASzR,KAAK6vB,sBACpC7vB,KAAKY,MAAMyvB,gBAAkBvvB,EAAAC,EAAAC,cAACkZ,GAAA,EAAD,CAAiBlF,MAAO,CAAE7C,YAAa,OAASgI,KAAMqW,KAAWC,MAAI,IACnG3vB,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,yCACH6M,eAAe,sCAGnBrQ,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ2Q,QAAQ,UAAUD,QAASzR,KAAK8vB,mBACtChvB,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,sCACH6M,eAAe,sCAOzBrQ,EAAAC,EAAAC,cAAC0vB,GAAD,CAAa3jB,QAAS/M,KAAKC,MAAMyvB,OAAOrgB,aAAatC,QAASyY,YAAaD,KAC3EzkB,EAAAC,EAAAC,cAAC2vB,GAAD,MAEA7vB,EAAAC,EAAAC,cAAA,SACEsD,GAAG,aACH1C,KAAK,OACL4U,OAAO,OACPxB,MAAO,CAAEyB,QAAS,QAClBnV,SAAUtB,KAAKuT,8BAlLM7S,IAAMe,WAoMtBd,eAXS,SAACC,GAAD,MAAqC,CAC3D8uB,OAAQ9uB,IAGiB,SAACc,GAC1B,MAAO,CACL0kB,gBAAiB,SAAC9W,GAAD,OAAyB5N,EAAS0kB,GAAgB9W,KACnE+W,mBAAoB,SAAC/hB,GAAD,OAAgB5C,EAAS2kB,GAAmB/hB,OAIrD3D,CAA6C6uB,ICvO7CoB,oLARX,OACE9vB,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOvX,aACrB2C,EAAAC,EAAAC,cAAC6vB,GAAD,cAJ4BnwB,IAAMe,WCiBpC4jB,eACJ,SAAAA,EAAYplB,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAqlB,IACxB7S,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAoa,GAAAzS,KAAA5S,KAAMC,KAKRqlB,WAAa,WACX,IAAMC,EAAY/S,EAAKvS,MAAMulB,YACrBzY,EAAYyF,EAAKvS,MAAjB8M,QACF+jB,GAA6C,IAA7Bte,EAAKvS,MAAM6wB,cAEjC,OAAO/jB,EAAQhC,IAAI,SAAA5G,GAAK,OAAIrD,EAAAC,EAAAC,cAACukB,EAAD,CAAW/kB,IAAK2D,EAAMG,GAAIA,GAAIH,EAAMG,GAAIwsB,cAAeA,OAX3Dte,EAc1Bue,aAAe,WAEb,IAAMC,EAAa,CAAEvU,MAAO,QAEtB/T,EAAO8J,EAAKvS,MAAMyI,KAElBuoB,EAAevoB,EAAO,iCAAmC,kCACzDwoB,EAAUxoB,EAAO,4BAA8B,6BAC/CyoB,EAAUzoB,EAAO,4BAA8B,6BAC/C0oB,EAAa1oB,EAAO,+BAAiC,gCAE3D,OACE5H,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIgU,MAAOgc,GACTlwB,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,4BAA4B6M,eAAe,cAElErQ,EAAAC,EAAAC,cAAA,MAAIgU,MAAOgc,GACTlwB,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,4BAA4B6M,eAAe,YAElErQ,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,wBAAyBmO,EAAKvS,MAAMF,WAEnDe,EAAAC,EAAAC,cAAA,MAAIgU,MAAOgc,GAAa3sB,GAAU,aAAcmO,EAAKvS,MAAMF,WAC3De,EAAAC,EAAAC,cAAA,MAAIgU,MAAOgc,GAAa3sB,GAAU4sB,EAAcze,EAAKvS,MAAMF,WAC3De,EAAAC,EAAAC,cAAA,MAAIgU,MAAOgc,GACTlwB,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,8BAA8B6M,eAAe,gBAEpErQ,EAAAC,EAAAC,cAAA,MAAIgU,MAAOgc,GAAa3sB,GAAU6sB,EAAS1e,EAAKvS,MAAMF,WACtDe,EAAAC,EAAAC,cAAA,MAAIgU,MAAOgc,GACTlwB,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,8BAA8B6M,eAAe,gBAEpErQ,EAAAC,EAAAC,cAAA,MAAIgU,MAAOgc,GAAa3sB,GAAU8sB,EAAS3e,EAAKvS,MAAMF,WACtDe,EAAAC,EAAAC,cAAA,MAAIgU,MAAOgc,GAAa3sB,GAAU+sB,EAAY5e,EAAKvS,MAAMF,aA3C7DyS,EAAK8S,WAAa9S,EAAK8S,WAAWrQ,KAAhBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAClBA,EAAKue,aAAeve,EAAKue,aAAa9b,KAAlBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAHIA,wEAmDxB,OACE1R,EAAAC,EAAAC,cAACmgB,GAAApgB,EAAD,CAAOugB,OAAK,EAACD,KAAK,KAAKrM,MAAO,CAAEuM,OAAQ,QACtCzgB,EAAAC,EAAAC,cAAA,aAAQhB,KAAK+wB,gBACbjwB,EAAAC,EAAAC,cAAA,aAAQhB,KAAKslB,sBAvDK5kB,IAAMe,WAkEjBd,eALS,SAACC,GAAD,MAAqC,CAC3D8H,KAAM9H,EAAMwN,KAAK1F,KACjB3I,SAAUa,EAAMb,WAGHY,CAAyB0kB,IC9E3BgM,GAAe,SAC1B3hB,EACAxC,EACA0C,EACArI,GAEA,MAAO,CACL3F,KAAM,gBACN8N,QAASA,EACTxC,KAAMA,EACN0C,kBAAmBA,EACnBrI,SAAUA,ICgCR+pB,eACJ,SAAAA,EAAYrxB,GAAc,IAAAuS,EAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAsxB,IACxB9e,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAqmB,GAAA1e,KAAA5S,KAAMC,KAkBR0W,SAAW,WACT,IAAM4a,EAAY7uB,EAAc8P,EAAK5R,MAAM4wB,WAC3C,OAAIzT,MAAMwT,IAAcA,EAAY,EAAU,aAChBtuB,IAA1BuP,EAAKvS,MAAMwxB,YAA4BF,EAAY/e,EAAKvS,MAAMwxB,aAAe,EACxE,UAELjf,EAAK5R,MAAM4wB,UAAU9rB,OAAS,EAAU,UACrC,MA1BiB8M,EA8B1BsE,aAAe,SAACnV,GACd,IAAM6vB,EAAY7vB,EAAME,cAAcZ,MAClCgB,EAAauvB,IACfhf,EAAKW,SAAS,CAAEqe,UAAWA,KAjCLhf,EAsC1BuE,WAAa,SAACpV,GACZ,IAAM4vB,EAAY7uB,EAAcf,EAAME,cAAcZ,OAEpD,GAAwB,UAApBuR,EAAKmE,WAAT,CAIA,IAAMpP,EAAWiL,EAAKvS,MAAMyI,KAAO6oB,EAAY/uB,EAAO+uB,GACtD,GAAI/e,EAAKvS,MAAMsH,WAAaA,EAK5B,QAAqCtE,IAAjCuP,EAAKvS,MAAM2P,wBAAuD3M,IAApBuP,EAAKvS,MAAMiN,KAAoB,CAC/E,IAAM0C,EAAoB4C,EAAKvS,MAAM2P,kBAC/B1C,EAAOsF,EAAKvS,MAAMiN,KACxBsF,EAAKvS,MAAMoxB,aAAa7e,EAAKvS,MAAMqE,GAAI4I,EAAM0C,EAAmBrI,QAC3D,QAAyBtE,IAArBuP,EAAKvS,MAAM4P,MAAqB,CAEzC,IAAMI,EAA4B,GAClCA,EAAUuC,EAAKvS,MAAM4P,OAAStI,EAC9BiL,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI2L,MAzD/CuC,EAAKmE,SAAWnE,EAAKmE,SAAS1B,KAAdhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAChBA,EAAKsE,aAAetE,EAAKsE,aAAa7B,KAAlBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACpBA,EAAKuE,WAAavE,EAAKuE,WAAW9B,KAAhBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAElB,IAAIzP,EAASyP,EAAKvS,MAAMsH,SANA,OAOnBiL,EAAKvS,MAAMyI,OACd3F,EAAST,EAAOS,IAKlByP,EAAK5R,MAAQ,CAEX4wB,UAAsB,IAAXzuB,EAAiB,GAAKD,EAAcC,EAAQ9C,EAAMF,WAfvCyS,wEAkExB,IACM0E,EAAyBlX,KAAK2W,WAEpC,OACE7V,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWiU,MAJc,CAAE1C,aAAc,MAKvCxR,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACE4W,SAAU3X,KAAKC,MAAM0X,SACrBD,YAAa1X,KAAKC,MAAMyX,YACxB9V,KAAK,OACLX,MAAOjB,KAAKY,MAAM4wB,UAClBlwB,SAAUtB,KAAK8W,aACfe,OAAQ7X,KAAK+W,WACbe,QAAwB,YAAfZ,EACTa,UAA0B,UAAfb,EACX1V,UAA0B,YAAf0V,EAA2B,kBAAejU,YAjFrCvC,IAAMe,WAwHjBd,eAhCS,SAACC,EAAoByd,GAE3C,IAAMzQ,EAAShN,EAAMyO,aAAazB,OAC5BzJ,EAAQvD,EAAMyO,aAAatC,QAAQa,EAAOyQ,EAAS/Z,KAGrDiD,EAAW,EACf,QAAuBtE,IAAnBob,EAASxO,MACXtI,EAAWpD,EAAMka,EAASxO,YACrB,QAAsB5M,IAAlBob,EAASnR,WAAqDjK,IAA/Bob,EAASzO,kBAAiC,CAElF,IAAM1C,EAAOmR,EAASnR,KAChB0C,EAAoByO,EAASzO,kBAEnCrI,EAAWpD,EADG8I,GAAuBC,IACb0C,EAAoB,GAG9C,MAAO,CACLlH,KAAM9H,EAAMwN,KAAK1F,KACjBnB,SAAUA,EACVxH,SAAUa,EAAMb,WAIO,SAAC2B,GAC1B,MAAO,CACL4kB,mBAAoB,SAAC5W,EAASJ,GAAV,OAAkB5N,EAAS4kB,GAAmB5W,EAASJ,KAC3E+hB,aAAc,SAAC3hB,EAASxC,EAAM0C,EAAmBrI,GAAnC,OACZ7F,EAAS2vB,GAAa3hB,EAASxC,EAAM0C,EAAmBrI,OAI/C5G,CAA6C2wB,ICtItD/L,eACJ,SAAAA,EAAYtlB,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAulB,IACxB/S,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAsa,GAAA3S,KAAA5S,KAAMC,KAORsnB,yBAA2B,SAAC5lB,GAC1B,IAAMU,EAASV,EAAME,cAAcZ,MAC/BuR,EAAKvS,MAAMkE,MAAM9B,SAAWA,GAAUJ,EAAaI,IAAWD,EAAaC,IAC7EmQ,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAEjC,OAAQA,KAXjCmQ,EAe1Bkf,gCAAkC,SAACzwB,GAC7BuR,EAAKvS,MAAMkE,MAAMgG,gBAAkBlJ,GACrCuR,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAE6F,cAAelJ,KAjBxCuR,EAqB1Bmf,gCAAkC,SAAC1wB,GAC7BuR,EAAKvS,MAAMkE,MAAMiG,gBAAkBnJ,GACrCuR,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAE8F,cAAenJ,KAvBxCuR,EA2B1BkU,sBAAwB,SAACzlB,GACvB,IAAM0I,EAAwB,KAAV1I,EAAe,EAAI2B,OAAO3B,GAC1CuR,EAAKvS,MAAMkE,MAAMwF,MAAQA,GAC3B6I,EAAKvS,MAAMqmB,mBAAmB9T,EAAKvS,MAAMqE,GAAI,CAAEqF,IAAKA,KA9B9B6I,EAkC1ByU,YAAc,SAAChmB,GACb,GAAc,KAAVA,EAAc,OAAO,KAEzB,IAAMimB,EAAkBjB,GAAwBhlB,GAChD,GAAY,YAARimB,EAAmB,CAErB,IAAMxN,EAAI9W,OAAO3B,GACjB,GAAIyY,GAAK,GAAKA,EAAI,IAAK,MAAO,UAEhC,OAAOwN,GA3CiB1U,EA8C1Bof,aAAe,SAAC3wB,GACd,MAAc,KAAVA,EAAqB,KAClB,WA9CPuR,EAAK+U,yBAA2B/U,EAAK+U,yBAAyBtS,KAA9BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAChCA,EAAKkf,gCAAkClf,EAAKkf,gCAAgCzc,KAArChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACvCA,EAAKmf,gCAAkCnf,EAAKmf,gCAAgC1c,KAArChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACvCA,EAAKkU,sBAAwBlU,EAAKkU,sBAAsBzR,KAA3BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IALLA,wEA2DxB,IAPA,IAAMzS,EAAWC,KAAKC,MAAMF,SACtBoE,EAAQnE,KAAKC,MAAMkE,MAGrB0tB,GAAW,EACXC,GAAW,EACXC,GAAc,EACTtsB,EAAI,EAAGA,EAAItB,EAAM0F,OAAOnE,OAAQD,IAAK,CAC5C,IAAM9D,EAAQwC,EAAM0F,OAAOpE,GACvB9D,EAAM6K,SAAS,OACjBqlB,GAAW,GAETlwB,EAAM6K,SAAS,OACjBslB,GAAW,GAETnwB,EAAM6K,SAAS,OACjBulB,GAAc,GAKlB,IAAMC,GAAsBH,GAAqC,IAAzB1tB,EAAMqG,YAAY,GACpDynB,GAAsBH,GAAqC,IAAzB3tB,EAAMsG,YAAY,GACpDynB,GAAyBH,GAA2C,IAA5B5tB,EAAMuG,eAAe,GAG/DrI,EAA+BwC,GAAeV,EAAM9B,OAAQtC,IAC/B,IAA7BC,KAAKC,MAAM6wB,gBAEbzuB,EACEvB,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEM,aAAc8C,EAAM9B,OACpBjB,GAAG,SACHE,SAAUtB,KAAKunB,yBACf/lB,UAAU,iBAEVV,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,IACzCe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAKoD,GAAU,WAAYtE,MAK/C,IAAM4J,EAAMgB,GAAOxG,EAAOnE,KAAKC,MAAMmO,KAAKtG,MACpCqqB,EAAiB,IAARxoB,EAAYtF,GAAU,aAActE,GAAYiE,EAAc2F,EAAK5J,GAElF,OACEe,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKmD,EAAMsF,UACX3I,EAAAC,EAAAC,cAAA,UAAKqB,GACLvB,EAAAC,EAAAC,cAAA,UAAKmD,EAAMuD,MAEX5G,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC0iB,GAAD,CACE1M,aAA4B,IAAd7S,EAAMwF,IAAY,GAAK3F,EAAcG,EAAMwF,IAAK5J,GAC9D2X,YAAaya,EACbxb,SAAU3W,KAAKinB,YACfhQ,UAAWjX,KAAK0mB,yBAIpB5lB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACoxB,GAAD,CACE9tB,GAAItE,KAAKC,MAAMqE,GACfuL,MAAM,eACN6H,YAAarT,GAAU,mCAAoCtE,GAC3D4X,UAAU,KAId7W,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC0iB,GAAD,CACE1M,aAAc7S,EAAMgG,cACpBuN,YAAama,EAAWxtB,GAAU,mCAAoCtE,QAAYkD,EAClF0U,UAAWka,EACXlb,SAAU3W,KAAK4xB,aACf3a,UAAWjX,KAAK0xB,mCAIpB5wB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACoxB,GAAD,CACE9tB,GAAItE,KAAKC,MAAMqE,GACf4I,KAAK,IACLukB,WAAY,IACZ7hB,kBAAmB,EACnB8H,YAAama,EAAWxtB,GAAU,8BAA+BtE,QAAYkD,EAC7E0U,SAAUqa,KAIdlxB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC0iB,GAAD,CACE1M,aAAc7S,EAAMiG,cACpBsN,YAAaoa,EAAWztB,GAAU,mCAAoCtE,QAAYkD,EAClF0U,UAAWma,EACXnb,SAAU3W,KAAK4xB,aACf3a,UAAWjX,KAAK2xB,mCAIpB7wB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACoxB,GAAD,CACE9tB,GAAItE,KAAKC,MAAMqE,GACf4I,KAAK,IACLukB,WAAY,IACZ7hB,kBAAmB,EACnB8H,YAAaoa,EAAWztB,GAAU,8BAA+BtE,QAAYkD,EAC7E0U,SAAUsa,KAIdnxB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACoxB,GAAD,CACE9tB,GAAItE,KAAKC,MAAMqE,GACf4I,KAAK,IACLukB,WAAY,IACZ7hB,kBAAmB,EACnB8H,YAAaqa,EAAc1tB,GAAU,iCAAkCtE,QAAYkD,EACnF0U,SAAUua,aAzLExxB,IAAMe,WAmNfd,eAlBS,SAACC,EAAoByd,GAE3C,IAAMzQ,EAAShN,EAAMyO,aAAazB,OAC5BzJ,EAAQvD,EAAMyO,aAAatC,QAAQa,EAAOyQ,EAAS/Z,KAEzD,MAAO,CACL8J,KAAMxN,EAAMwN,KACZjK,MAAOA,EACPpE,SAAUa,EAAMb,WAIO,SAAC2B,GAC1B,MAAO,CACL4kB,mBAAoB,SAAC5W,EAAiBJ,GAAlB,OAA0C5N,EAAS4kB,GAAmB5W,EAASJ,OAIxF3O,CAA6C4kB,IC/NtD8M,eACJ,SAAAA,EAAYpyB,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAqyB,IACxB7f,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAonB,GAAAzf,KAAA5S,KAAMC,KAWRqyB,sBAAwB,WAGtB,IAFA,IAAIC,EAAU,EACRxlB,EAAUyF,EAAKvS,MAAM8M,QAClBtH,EAAI,EAAGA,EAAIsH,EAAQrH,OAAQD,IAAK,CACvC,IAAMtB,EAAQ4I,EAAQtH,GAClBtB,EAAMkC,IAAMksB,IACdA,EAAUpuB,EAAMkC,KAGpB,OAAOksB,GAnBP/f,EAAK8f,sBAAwB9f,EAAK8f,sBAAsBrd,KAA3BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAFLA,wEA+BxB,IALA,IAAMse,GAA6C,IAA7B9wB,KAAKC,MAAM6wB,cAG3BxiB,EAAUtO,KAAKsyB,wBACfE,EAAW,GACR/sB,EAAI,EAAGA,GAAK6I,EAAS7I,IAAK,CACjC,IAAMgtB,EAAU3lB,GAAgB9M,KAAKC,MAAM8M,QAAStH,GAG7B,IAAnBgtB,EAAQ/sB,SAKZ+sB,EAAQxU,KAAK,SAACld,EAAGmd,GACf,OAAInd,EAAE0I,WAAayU,EAAEzU,SAAiB1I,EAAE0I,SAAWyU,EAAEzU,SACjD1I,EAAEsB,SAAW6b,EAAE7b,OAAetB,EAAEsB,OAAS6b,EAAE7b,QAAU,EAAI,EACzDtB,EAAE2G,KAAOwW,EAAExW,MAAc,EACzB3G,EAAE2G,KAAOwW,EAAExW,KAAa,EACrB,IAGT8qB,EAAS9kB,KACP5M,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,CAAMP,IAAKiF,EAAGuP,MAAO,CAAE1C,aAAc,SACnCxR,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,uBACH6M,eAAe,4BACfC,OAAQ,CAAEshB,UAAWjtB,MAGzB3E,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAAC2xB,GAAD,CAAa5lB,QAAS0lB,EAASjN,YAAaD,GAAWuL,cAAeA,QAuB9E,OAhBwB,IAApB0B,EAAS9sB,QACX8sB,EAAS9kB,KACP5M,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,CAAMP,IAAK,GACTM,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,yBAAyB6M,eAAe,8BAE/DrQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,uBACH6M,eAAe,qEAOlBrQ,EAAAC,EAAAC,cAAA,WAAMwxB,UAlFU9xB,IAAMe,WAkGlBd,eAZS,SAACC,EAAoByd,GAAmC,IACtEhY,EAAkBgY,EAAlBhY,IAAKoD,EAAa4U,EAAb5U,SACTsD,EAAUnM,EAAMyO,aAAatC,QAOjC,MAJmB,kBAAR1G,GAAwC,kBAAboD,IACpCsD,EAAUA,EAAQC,OAAO,SAAAsD,GAAC,OAAIA,EAAEjK,MAAQA,GAAOiK,EAAE7G,WAAaA,KAGzD,CAAEsD,YAGIpM,CAAyB0xB,IC9GzBO,oLARX,OACE9xB,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOvX,aACrB2C,EAAAC,EAAAC,cAAC6xB,GAAD,cAJwBnyB,IAAMe,WCChCqxB,GAAa,SAACvwB,GAClB,OAAOK,OAAOE,EAAcR,EAAOC,MAKxBwwB,GAAe,SAC1BC,EACAC,EACAlqB,EACAL,GAGA,IAAIwqB,EAAaF,EACbG,EAAyBF,EACzBG,EAAYrqB,GAGH,IAATL,IACFwqB,EAAaJ,GAAWE,GACxBG,EAAyBL,GAAWG,GACpCG,EAAYrqB,EAAOgC,IAAI,SAAAue,GAAC,OAAAre,OAAAoD,EAAA,EAAApD,CAAA,GAAUqe,EAAV,CAAa/hB,SAAUurB,GAAWxJ,EAAE/hB,eAY9D,IARA,IAAM8rB,EAAeD,EAAU3kB,QAAQwP,KAAK,SAACld,EAAGmd,GAC9C,OAAOA,EAAE3W,SAAWxG,EAAEwG,WAGpB+rB,GAAgBJ,EAAaC,GAA0B,EACrDI,EAA8B,GAG3B9tB,EAAI,EAAGA,EAAI4tB,EAAa3tB,OAAQD,IAIvC,IAHA,IAAM8B,EAAW8rB,EAAa5tB,GAAG8B,SAC3BjM,EAAQ+3B,EAAa5tB,GAAGnK,MAC1BkM,EAAY6rB,EAAa5tB,GAAG+B,UACzBA,EAAY,GAAKD,GAAY+rB,GAClC9rB,IACA8rB,GAAgB/rB,EAChBgsB,EAAQ7lB,KAAK,CAAE8lB,UAAWjsB,EAAUksB,iBAAiB,EAAOn4B,MAAOA,IAQvE,OAHIg4B,EAAe,GACjBC,EAAQ7lB,KAAK,CAAE8lB,WAAYF,EAAcG,iBAAiB,EAAOn4B,MAAOqL,GAAYM,oBAE/EssB,GAIHG,GAAiB,SAACH,EAA6BI,EAAmB5wB,GACtE,IAAK,IAAI0C,EAAIkuB,EAAWluB,EAAI8tB,EAAQ7tB,OAAQD,IAC1C,GAAI8tB,EAAQ9tB,GAAG+tB,YAAczwB,EAAQ,OAAO0C,EAE9C,OAAQ,uBCpCJmuB,8MACJC,gBAAkB,SAACtsB,GACjB,OAAQA,GACN,KAAK,GACH,OAAOmO,KAAOzZ,KAChB,KAAK,GACH,OAAOyZ,KAAOxZ,KAChB,KAAK,GACH,OAAOwZ,KAAOvZ,KAChB,KAAK,GACH,OAAOuZ,KAAOtZ,KAChB,KAAK,GACH,OAAOsZ,KAAOrZ,KAChB,KAAK,EACH,OAAOqZ,KAAOpZ,IAChB,KAAK,IACH,OAAOoZ,KAAOnZ,MAChB,KAAK,KACH,OAAOmZ,KAAOlZ,OAChB,KAAK,EACH,OAAOkZ,KAAOjZ,IAChB,IAAK,IACH,OAAOiZ,KAAOhZ,OAChB,IAAK,GACH,OAAOgZ,KAAO/Y,MAChB,IAAK,IACH,OAAO+Y,KAAO9Y,OAChB,QACE,OAAO8Y,KAAOlY,UAIpBs2B,iBAAmB,SAACC,GAClB,OAAQA,GACN,KAAK,IACH,OAAOre,KAAO7Y,OAChB,KAAK,GACH,OAAO6Y,KAAO5Y,MAChB,KAAK,GACH,OAAO4Y,KAAO3Y,MAChB,KAAK,GACH,OAAO2Y,KAAO1Y,MAChB,KAAK,GACH,OAAO0Y,KAAOzY,MAChB,KAAK,GACH,OAAOyY,KAAOxY,MAChB,KAAK,EACH,OAAOwY,KAAOvY,KAChB,KAAK,IACH,OAAOuY,KAAOtY,OAChB,KAAK,KACH,OAAOsY,KAAOrY,QAChB,IAAK,GACH,OAAOqY,KAAOpY,OAChB,QACE,OAAOoY,KAAOlY,UAIpBw2B,gBAAkB,SAACR,EAAmBzzB,GACpC,OAAQyzB,GACN,KAAK,KACH,MAAO,QACT,IAAK,IACH,MAAO,OACT,IAAK,GACH,MAAO,OACT,IAAK,IACH,MAAO,OACT,QACE,OAAO1wB,EAAc0wB,EAAWzzB,OAKtCk0B,aAAe,WAQb,IAPA,IAAMlrB,EAA6ByJ,EAAKvS,MAAMszB,QACxC7qB,EAAgB8J,EAAKvS,MAAMyI,KAE3BwrB,EAAO,GACTzuB,EAAI,EAGDA,EAAIsD,EAAOrD,QAAQ,CACxB,IAAM8tB,EAAYzqB,EAAOtD,GAAG+tB,UAG5B,GAAIA,EAAY,EAAG,CACjBU,EAAKxmB,KACH5M,EAAAC,EAAAC,cAAA,OAAKR,IAAK,QAASgB,UAAWkU,KAAOlY,OAArC,IACIsF,GAAe,EAAI0wB,EAAWhhB,EAAKvS,MAAMF,YAG/C,MAKF,IADA,IAAIo0B,EAAa,EACR/J,EAAI3kB,EAAI,EAAG2kB,EAAIrhB,EAAOrD,QAAUqD,EAAOqhB,GAAGoJ,YAAcA,EAAWpJ,IAC1E+J,IAOF,IAHA,IAAMC,EAAcD,GAAc,EAGzB/J,EAAI,EAAGA,EAAI+J,EAAY/J,IAAK,CACnC,IAAMiK,EAAQtrB,EAAOtD,EAAI2kB,GACnBkK,EAAU9tB,OAAO4jB,EAAI,GAGrBmK,EACJF,EAAM/4B,QAAUqL,GAAYE,qBAAuBwtB,EAAM/4B,QAAUqL,GAAYO,qBAE3E8N,EAAQ,CACZwf,gBAAiBH,EAAM/4B,MACvBm5B,QAASJ,EAAMZ,gBAAkB,SAAOxwB,EACxC3H,MAAOi5B,EAAW,UAAY,UAE9BG,OAAQL,EAAM/4B,QAAUqL,GAAYE,oBAAsB,2BAAwB5D,GAEpFixB,EAAKxmB,KACH5M,EAAAC,EAAAC,cAAA,OACER,IAAKgzB,EAAY,IAAMc,EACvB9yB,UAAWkH,EAAO8J,EAAKqhB,gBAAgBL,GAAahhB,EAAKshB,iBAAiBN,GAC1Exe,MAAOA,GAEPlU,EAAAC,EAAAC,cAAA,WAAMwR,EAAKwhB,gBAAgBR,EAAWhhB,EAAKvS,MAAMF,WAChDq0B,EAActzB,EAAAC,EAAAC,cAAA,WAAMszB,GAAiB,OAK5C7uB,GAAK0uB,EAGP,OAAOD,2EAKP,IAAIn4B,EAAW,KAef,MAdwB,MAApBiE,KAAKC,MAAMiN,OACbnR,EACE+E,EAAAC,EAAAC,cAAA,OAAKR,IAAKR,KAAKC,MAAMlE,SAAUyF,UAAWkU,KAAO3Z,UAC/C+E,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,oBACH6M,eAAe,kBACfC,OAAQ,CACNrV,SAAUiE,KAAKC,MAAMlE,cAQ7B+E,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAO5Z,WACrBgF,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAO1Z,MACtBgE,KAAKi0B,eACNnzB,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOnY,SACvBuD,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAO1Z,MACtBD,UAlKa2E,IAAMe,WA+Kbd,eAPS,SAACC,GACvB,MAAO,CACLsM,KAAMtM,EAAM2P,QAAQrD,KACpBnN,SAAUa,EAAMb,WAILY,CAAyBizB,wBC5JlCe,8MACJC,gBAAkB,SAACllB,EAAwBE,GACzC,IAAM1C,EAAOsF,EAAKvS,MAAMsQ,QAAQrD,KAC1B2nB,EAAU5nB,GAAuBC,GAGvC,GAAgB,OAAZwC,QAAgCzM,IAAZyM,GAA+C,OAAtBE,QAAoD3M,IAAtB2M,EAC7E,MAAO,CAAErI,SAAU,EAAGwsB,UAAW,EAAGh4B,SAAU,IAGhD,IAAM+4B,EAAMtiB,EAAKvS,MAAMoP,aAAazB,OAAO8B,GACrCvL,EAAQqO,EAAKvS,MAAMoP,aAAatC,QAAQ+nB,GAExCvtB,EAAWpD,EAAM0wB,GAASjlB,EAAoB,GAC9CmkB,EAAYzxB,EAAOiF,GAErBxL,EAAW,GAIf,MAHa,MAATmR,IAAcnR,EAAWoI,EAAMgG,eACtB,MAAT+C,IAAcnR,EAAWoI,EAAMiG,eAE5B,CAAE7C,WAAUwsB,YAAWh4B,eAGhCg5B,yBAA2B,WACzB,OAAQviB,EAAKvS,MAAMsQ,QAAQrD,MACzB,IAAK,IACH,OAAOsF,EAAKvS,MAAM2I,2BACpB,IAAK,IACH,OAAO4J,EAAKvS,MAAM4I,2BACpB,IAAK,IACH,OAAO2J,EAAKvS,MAAM6I,8BACpB,QACE,OAAO,4EAKX,IAAM/K,EAAUiC,KAAK40B,gBAAgB50B,KAAKC,MAAM+0B,eAAgBh1B,KAAKC,MAAM2P,mBACrEqlB,EAAOj1B,KAAK40B,gBAAgB50B,KAAKC,MAAM0N,YAAa3N,KAAKC,MAAMi1B,uBAG/Dn1B,EAAWC,KAAKC,MAAMF,SACtBo1B,EAAezxB,EAAsB3F,EAAQwJ,SAAUxH,GACvDq1B,EAAgB1xB,EAAsB3F,EAAQg2B,UAAWh0B,GAEzDkzB,EAAwBjzB,KAAK+0B,2BAG7BM,EAAqCtC,GACzCh1B,EAAQwJ,SACR0rB,EACAjzB,KAAKC,MAAM8I,OACX/I,KAAKC,MAAMyI,MAEP4sB,EAAkCvC,GACtCkC,EAAK1tB,SACL0rB,EACAjzB,KAAKC,MAAM8I,OACX/I,KAAKC,MAAMyI,MAITusB,EAAK1tB,UAAYxJ,EAAQwJ,UFvCE,SAACgsB,EAA6BgC,GAK/D,IAJA,IAAIC,EAAS,EAIJ/vB,EAAI,EAAGA,EAAI8tB,EAAQ7tB,OAAQD,IAAK,CACvC,IAAMgwB,EAAclC,EAAQ9tB,GACtBqJ,EAAQ4kB,GAAe6B,EAAYC,EAAQC,EAAYjC,WACzD1kB,GAAS,IACX0mB,EAAS1mB,EAAQ,EACjB2mB,EAAYhC,iBAAkB,IE8B9BiC,CAAoBJ,EAAaD,GAGnC,IAAIM,OAAgB1yB,EACpB,GAAsC,kBAA3BjD,KAAKC,MAAM0N,YAA0B,CAC9C,IAAMmnB,EAAM90B,KAAKC,MAAMoP,aAAazB,OAAO5N,KAAKC,MAAM0N,aACtDgoB,EAAgB31B,KAAKC,MAAMoP,aAAatC,QAAQ+nB,GAAKptB,KAGvD,IAAMkuB,EACc,IAAlBX,EAAK1tB,cACHtE,EAEAnC,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOmgB,YACrB/0B,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOogB,UACrBh1B,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,kBACH6M,eAAe,0BACfC,OAAQ,CACN2kB,OAAQJ,MAId70B,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOsgB,SACrBl1B,EAAAC,EAAAC,cAACi1B,GAAD,CACEz1B,IAAKgG,OAAOyuB,EAAK1tB,UAAY0tB,EAAKl5B,SAClCw3B,QAAS+B,EACTv5B,SAAUk5B,EAAKl5B,SACf2M,KAAM1I,KAAKC,MAAMyI,SAMvBwtB,EAAkB,GAetB,OAZIA,EAFAl2B,KAAKC,MAAMyI,KACT1I,KAAKC,MAAM0I,mBACKtE,GAAU,gCAAiCtE,GAE3CsE,GAAU,4BAA6BtE,GAGvDC,KAAKC,MAAM0I,mBACKtE,GAAU,gCAAiCtE,GAE3CsE,GAAU,6BAA8BtE,GAK5De,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAO5Z,WACrBgF,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOygB,YACrBr1B,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOmgB,YACrB/0B,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAO0gB,aACpBF,EAAgBrzB,QAAQ,OAAQsyB,GAActyB,QAAQ,QAASuyB,IAElEt0B,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOsgB,SACrBl1B,EAAAC,EAAAC,cAACi1B,GAAD,CACEz1B,IAAKgG,OAAOzI,EAAQwJ,UAAYxJ,EAAQhC,SACxCw3B,QAAS8B,EACTt5B,SAAUgC,EAAQhC,SAClB2M,KAAM1I,KAAKC,MAAMyI,UAKxBktB,UAjIcl1B,IAAMe,WAqJdd,eAdS,SAACC,GACvB,MAAO,CACL8H,KAAM9H,EAAMwN,KAAK1F,KACjBC,mBAAoB/H,EAAMwN,KAAKzF,mBAC/BC,2BAA4BhI,EAAMwN,KAAKxF,2BACvCC,2BAA4BjI,EAAMwN,KAAKvF,2BACvCC,8BAA+BlI,EAAMwN,KAAKtF,8BAC1CC,OAAQnI,EAAMwN,KAAKrF,OACnBsG,aAAczO,EAAMyO,aACpBkB,QAAS3P,EAAM2P,QACfxQ,SAAUa,EAAMb,WAILY,CAAyBg0B,wBC3JlC0B,eACJ,SAAAA,EAAYp2B,GAAc,IAAAuS,EAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAq2B,IACxB7jB,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAorB,GAAAzjB,KAAA5S,KAAMC,KAqBR0W,SAAW,WAAkB,IACrB1V,EAAUuR,EAAK5R,MAAfK,MACN,GAAc,KAAVA,EAAc,OAAO,KAGzBA,EAAQA,EAAM4B,QAAQ,IAAK,KAI3B,IAAMwC,EAAWzC,OAAO3B,GACxB,GAAI8c,MAAM1Y,GAAW,MAAO,QAC5B,IAAK2Y,SAAS3Y,GAAW,MAAO,QAChC,GAAIA,EAAW,EAAG,MAAO,QAGzB,GAAImN,EAAKvS,MAAM2P,kBAAoB,EAAG,CACpC,IAAM0mB,EAAO9jB,EAAKvS,MAAMyI,KAAOrD,EAAW7C,EAAO6C,GAE3ClB,EAAQqO,EAAKvS,MAAMkE,MACnB0wB,EAAU5nB,GAAuBuF,EAAKvS,MAAMiN,MAC5CkD,EAAcjD,GAAsBqF,EAAKvS,MAAMiN,MAE/CqpB,EAAwB/jB,EAAKvS,MAAM2P,kBAAoB,EACvD4mB,EAASryB,EAAM0wB,GAAS0B,EAAwB,GAChDE,EAAatyB,EAAMiM,GAAammB,EAAwB,GAG9D,GAAIC,EAASF,EAAM,MAAO,QAG1B,GAAIE,IAAWF,GAAuB,IAAfG,EAAkB,MAAO,QAGhD,GAAID,IAAWF,IAAwB,IAAhBG,EAAmB,MAAO,UAGnD,OAAIpxB,EAAW,MAAQ,EAAU,UAC1B,MA3DiBmN,EA8D1BoE,cAAgB,SAACjV,GACG,UAAdA,EAAMnB,KACRmB,EAAME,cAAcgV,QAhEErE,EAoE1BsE,aAAe,SAACnV,GACd,IAAMV,EAAQU,EAAME,cAAcZ,MAClC,GAAqB,kBAAVA,EAAoB,CAC7B,IAAIy1B,EAASz1B,EAAM4B,QAAQ,IAAK,IAIhC6zB,EAASz1B,EAAM4B,QAAQ,IAAK,KAE5B2P,EAAKW,SAAS,CAAElS,MAAOy1B,MA7EDlkB,EAiF1BuE,WAAa,SAACpV,GACZ,GAAwB,UAApB6Q,EAAKmE,WAAT,CAKA,IAAMjH,EAAU8C,EAAKvS,MAAMkE,MAAMG,GAC3B4I,EAAOsF,EAAKvS,MAAMiN,KAClB0C,EAAoB4C,EAAKvS,MAAM2P,kBAC/BvK,EAAW3C,EAAc8P,EAAK5R,MAAMK,OACpCsG,EAAWiL,EAAKvS,MAAMyI,KAAOrD,EAAW7C,EAAO6C,GAErDmN,EAAKvS,MAAMoxB,aAAa3hB,EAASxC,EAAM0C,EAAmBrI,GAC1DiL,EAAKW,SAAS,CAAEwjB,cAAenkB,EAAK5R,MAAMK,aAXxCuR,EAAKW,SAAS,CAAElS,MAAOuR,EAAK5R,MAAM+1B,iBAhFpCnkB,EAAKmE,SAAWnE,EAAKmE,SAAS1B,KAAdhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAChBA,EAAKoE,cAAgBpE,EAAKoE,cAAc3B,KAAnBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACrBA,EAAKsE,aAAetE,EAAKsE,aAAa7B,KAAlBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACpBA,EAAKuE,WAAavE,EAAKuE,WAAW9B,KAAhBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAElB,IAAMqiB,EAAU5nB,GAAuBuF,EAAKvS,MAAMiN,MAC5C3F,EAAmBiL,EAAKvS,MAAMkE,MAAM0wB,GAASriB,EAAKvS,MAAM2P,kBAAoB,GAE9E4hB,EAAY,GAXQ,OAYP,IAAbjqB,IACFiqB,EAAY1uB,EAAc0P,EAAKvS,MAAMyI,KAAOnB,EAAWjF,EAAOiF,GAAWiL,EAAKvS,MAAMF,WAGtFyS,EAAK5R,MAAQ,CACX+1B,cAAenF,EACfvwB,MAAOuwB,GAlBehf,wEAkGxB,IAAM0E,EAAyBlX,KAAK2W,WAEpC,OACE7V,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,CAAYvC,MAAO,CAAE1C,aAAc,IACjCxR,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACEnT,GAAItE,KAAKC,MAAMqE,GACf1C,KAAK,OACL8V,YAAY,GACZzW,MAAOjB,KAAKY,MAAMK,MAClB2W,UAAW5X,KAAK4W,cAChBtV,SAAUtB,KAAK8W,aACfe,OAAQ7X,KAAK+W,WAEbgB,UAA0B,UAAfb,EAGX1V,WAA2B,YAAf0V,EAA2B,cAAgB,IAAMxB,KAAOxX,aAAe,2BAnHlEwC,IAAMe,WAoIlBd,eAVS,SAACC,GAAD,MAAqC,CAC3D8H,KAAM9H,EAAMwN,KAAK1F,KACjB3I,SAAUa,EAAMb,WAGS,SAAC2B,GAAD,MAAwC,CACjE2vB,aAAc,SAAC3hB,EAASxC,EAAM0C,EAAmBrI,GAAnC,OACZ7F,EAAS2vB,GAAa3hB,EAASxC,EAAM0C,EAAmBrI,OAG7C5G,CAA6C01B,IChIrD,IAAMO,GAAK,SAACxyB,EAAU8E,EAAsB2tB,GACjD,OAAQzyB,GACN,IAAK,IACL,IAAK,KACH,OAjCN,SAAe8E,GACb,IAGM4tB,EAAW3zB,KAAK8lB,IAAI9lB,KAAK2I,IAAI5C,EAAc,IAAO,KAExD,OALoB,OAKP/F,KAAK4zB,IAAI5zB,KAAK6zB,MAAMF,GAJb,MA+BTG,CAAM/tB,GAAgB2tB,EAC/B,IAAK,IACH,OAhBN,SAAiB3tB,GACf,IAGM4tB,EAAW3zB,KAAK8lB,IAAI9lB,KAAK2I,IAAI5C,EAAc,IAAO,KAExD,OALoB,OAKP/F,KAAK4zB,IAAI5zB,KAAK6zB,MAAMF,GAJZ,KAcVI,CAAQhuB,GAAgB2tB,EACjC,QAEE,OAAO,ICnCb,SAASM,GAASp2B,EAAWmd,EAAWC,EAAWnY,EAAWsK,EAAWgZ,GACvE,IAAM8N,EAAK9N,EAAIA,EACT+N,EAAKD,EAAK9N,EAEhB,OAAO,KAASvoB,GADLs2B,EAAK/N,GACSpL,EAAImZ,EAAKlZ,EAAIiZ,EAAKpxB,EAAIsjB,EAAIhZ,GAyB9C,IAAMgnB,GAAO,SAAClzB,EAAU8E,EAAsB2tB,GACnD,GAAqB,IAAjB3tB,GAAkC,IAAZ2tB,EACxB,OAAO,EAGT,OAAQzyB,GACN,IAAK,IACL,IAAK,KACH,OA9BC,SAAiB8E,GAQtB,OAAOiuB,IAPI,QACD,aACC,YACD,YACC,UAEMh0B,KAAK2I,IAAI3I,KAAK8lB,IAAI/f,EAAc,KAAQ,KAuB9CquB,CAAQruB,GAAgB2tB,EACjC,IAAK,IACH,OArBC,SAAmB3tB,GAQxB,OAAOiuB,IAPI,UACD,aACC,YACD,YACC,SAEMh0B,KAAK2I,IAAI3I,KAAK8lB,IAAI/f,EAAc,KAAQ,KAc9CsuB,CAAUtuB,GAAgB2tB,EACnC,QAEE,OAAO,ICxDPY,GAAmB,CAEvB,EACA,EACA,EACA,EACA,EAIA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAIA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAMA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KAIA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,KACA,MACA,MAEA,MACA,MACA,KACA,MACA,MACA,IACA,MACA,MACA,MACA,OAIWC,GAAkB,SAAC/tB,GAC9B,OAAK/G,OAAO6X,UAAU9Q,IAAQA,GAAO,EAC5B,EAILA,EAAM8tB,GAAiB/xB,OAClB,EAGF+xB,GAAiB9tB,ICrGbguB,GAAuB,SAACzuB,GACnC,IAAM4tB,EAAW3zB,KAAK8lB,IAAI9lB,KAAK2I,IAAI5C,EAAc,IAAO,KAExD,GAAI4tB,GAAY,IAAO,CAQrB,OAPW,QACA,QAAWA,EACX,OAAU3zB,KAAK4zB,IAAI,IAAO,GAAK5zB,KAAK4zB,IAAID,EAAU,GAClD,QAAW3zB,KAAK4zB,IAAI,IAAO,GAAK5zB,KAAK4zB,IAAID,EAAU,GACnD,QAAW3zB,KAAK4zB,IAAI,IAAO,GAAK5zB,KAAK4zB,IAAID,EAAU,GACnD,QAAW3zB,KAAK4zB,IAAI,IAAO,GAAK5zB,KAAK4zB,IAAID,EAAU,GACnD,QAAW3zB,KAAK4zB,IAAI,IAAO,IAAM5zB,KAAK4zB,IAAID,EAAU,GAE1D,OAAIA,GAAY,IACd,KAAQ,OAAUA,EAAW,KAC3BA,GAAY,IACd,KAAQ,OAAUA,EAAW,KAC3BA,GAAY,IACd,KAAQ,MAASA,EAAW,KAU5B,MAAS,UAAcA,EAAW,MAKhCc,GAAqB,SAAC1uB,GAEjC,IAKM4tB,EAAW3zB,KAAK2I,IAAI5C,EAAc,OAExC,OAPU,iBAOC/F,KAAK4zB,IAAID,GANT,mBACD,kBClEZ,SAASe,GAAU92B,EAAWmd,EAAWC,EAAWnY,EAAWsK,EAAWie,EAAWjF,GACnF,IAAM8N,EAAK9N,EAAIA,EACT+N,EAAKD,EAAK9N,EACVwO,EAAKT,EAAK/N,EAEhB,OAAO,KAASvoB,EAAImd,EAAIoL,EAAInL,EAAIiZ,EAAKpxB,EAAIqxB,EAAK/mB,EAAIwnB,EAAKvJ,GAD5CuJ,EAAKxO,IAIX,SAASyO,GAAS7uB,GAEvB,OAAO2uB,IAAW,YAAa,YAAa,YAAc,UAAY,YAAa,SADhE10B,KAAK8lB,IAAI9lB,KAAK2I,IAAI5C,EAAc,IAAO,QAIrD,SAAS8uB,GAAW9uB,GAEzB,OAAO2uB,GACL,iBACC,eACD,cACC,aACD,aACC,SAPgB10B,KAAK8lB,IAAI9lB,KAAK2I,IAAI5C,EAAc,OAAQ,SAYtD,ICOM+uB,GAAe,SAAC7zB,EAAU8E,EAAsB2tB,GAC3D,OAAQzyB,GACN,IAAK,IACL,IAAK,KACH,OAlC+B,SAAC8E,GAEpC,GAAIA,EAAe,OACjB,OAAQyuB,GAAqBzuB,GAAgB6uB,GAAS7uB,IAAiB,EAKvE,OAAQyuB,GAAqBzuB,IAFlB,iBAEsCA,EADvC,kBAC2D,EA0B5DgvB,CAA6BhvB,GAAgB2tB,EACtD,IAAK,IACH,OAxBiC,SAAC3tB,GAEtC,GAAIA,EAAe,MACjB,OAAQ0uB,GAAmB1uB,GAAgB8uB,GAAW9uB,IAAiB,EAKvE,OAAQ0uB,GAAmB1uB,IAFhB,iBAEoCA,EADrC,kBACyD,EAgB1DivB,CAA+BjvB,GAAgB2tB,EACxD,QAEE,OAAO,IC3BPuB,GAAoB,CACxBC,EAAG,CACDC,QAAS,CACPC,IAAK,CAAC,OAAQ,QAAS,OAAQ,UAC/BC,EAAG,CAAC,MAAO,QAAS,QAAS,SAC7BC,EAAG,CAAC,QAAS,QAAS,SAAU,QAChCC,EAAG,CAAC,SAAU,QAAS,QAAS,UAElCC,aAAc,CACZJ,IAAK,CAAC,QAAS,QAAS,QAAS,UACjCC,EAAG,CAAC,QAAS,QAAS,QAAS,UAC/BC,EAAG,CAAC,OAAQ,QAAS,QAAS,UAC9BC,EAAG,CAAC,QAAS,OAAQ,OAAQ,UAGjCE,EAAG,CACDN,QAAS,CACPC,IAAK,CAAC,SAAU,OAAQ,QAAS,SACjCC,EAAG,CAAC,OAAQ,QAAS,QAAS,SAC9BC,EAAG,CAAC,QAAS,OAAQ,OAAQ,QAC7BC,EAAG,CAAC,OAAQ,OAAQ,OAAQ,QAE9BC,aAAc,CACZJ,IAAK,CAAC,OAAQ,QAAS,QAAS,UAChCC,EAAG,CAAC,QAAS,QAAS,QAAS,SAC/BC,EAAG,CAAC,OAAQ,QAAS,OAAQ,SAC7BC,EAAG,CAAC,OAAQ,QAAS,OAAQ,WCd5B,IAAMG,GAAS,SAACz0B,EAAU8E,EAAsB2tB,GACrD,OAAQzyB,GACN,IAAK,IACL,IAAK,KACH,OA1BC,SAAmB8E,GAExB,IAKM4vB,EAAa31B,KAAK8lB,IAAI9lB,KAAK2I,IAAI5C,EAAc,IAAO,QAC1D,OANkB,iBAMP/F,KAAK4zB,IAAI+B,GALD,kBAEA,kBADD,iBAsBPC,CAAU7vB,GAAgB2tB,EACnC,IAAK,IACH,OAjBC,SAAqB3tB,GAE1B,IAKM4vB,EAAa31B,KAAK8lB,IAAI9lB,KAAK2I,IAAI5C,EAAc,IAAO,QAC1D,OANkB,iBAMP/F,KAAK4zB,IAAI+B,GALD,kBAEA,kBADD,iBAaPE,CAAY9vB,GAAgB2tB,EACrC,QAEE,OAAO,ICvBAoC,GAAY,SAAC3wB,EAAkBnE,EAAcxC,EAAck1B,EAAiBnuB,GAEvF,IAAMtE,EAAWD,EAAMC,IACjBI,EAAuBL,EAAMK,UAC7B0E,EAAuB/E,EAAM+E,aAEnC,OAAQZ,GACN,IAAK,KACH,OAAOsuB,GAAGxyB,EAAK8E,EAAc2tB,GAC/B,IAAK,sBACH,OCxB6B,SAAC3tB,EAAsB2tB,GACxD,OAAI3tB,GAAgB,GAAK2tB,GAAW,EAC3B,EAEFA,EAAU3tB,EDoBNgwB,CAAoBhwB,EAAc2tB,GAC3C,IAAK,OACH,OAAOS,GAAKlzB,EAAK8E,EAAc2tB,GACjC,IAAK,eACH,OAAOoB,GAAa7zB,EAAK8E,EAAc2tB,GACzC,IAAK,aACH,OFiBmB,SACvBA,EACA3tB,EACA9E,EACAI,EACA7C,GAEA,GAAgB,IAAZk1B,EAAe,OAAO,EAC1B,GAAI3tB,EAAe,GAAI,OAAO,EAG9B,IAAIiwB,EAAsB30B,EAM1B,GALkB,SAAdA,GAAsC,UAAdA,EAC1B20B,EAAsB,UACC,cAAd30B,IACT20B,EAAsB,cAEI,YAAxBA,GAA6D,eAAxBA,EACvC,OAAO,EAIT,IAAIC,EAAgBh1B,EAGpB,GAFY,OAARA,IAAcg1B,EAAgB,KAEpB,QAAVz3B,GAA6B,MAAVA,GAA2B,MAAVA,GAA2B,MAAVA,EAAe,OAAO,EAC/E,GAAsB,MAAlBy3B,GAA2C,MAAlBA,EAAuB,OAAO,EAE3D,IAAMC,EAASjB,GAAWgB,GAAeD,GAAqBx3B,GACxD23B,EAASn2B,KAAKo2B,IAAIrwB,GAKlBpF,EAAS,IAAO,KAAO+yB,GAHhBwC,EAAO,GAAKC,EAASD,EAAO,MAC7BA,EAAO,GAAKC,EAASD,EAAO,IAGxC,OAAItb,MAAMja,IAAWA,EAAS,EACrB,EAEFA,EEvDI01B,CAAU3C,EAAS3tB,EAAc9E,EAAKI,EAAW7C,GAC1D,IAAK,cACH,OEjCoB,SAACuH,EAAsB2tB,GAU/C,OAAI3tB,EAAe,GAAW,EACtB2tB,EAAU3tB,GAJR,UAI6BA,EAH7B,SFyBCuwB,CAAWvwB,EAAc2tB,GAClC,IAAK,SACH,OAAOgC,GAAOz0B,EAAK8E,EAAc2tB,GACnC,IAAK,kBACH,OL0CwB,SAACzyB,EAAU8E,EAAsB2tB,GAC7D,OAAQzyB,GACN,IAAK,IACH,OAAOuzB,GAAqBzuB,GAAgB2tB,EAC9C,IAAK,IACH,OAAOe,GAAmB1uB,GAAgB2tB,EAC5C,QACE,OAAO,GKjDA6C,CAAet1B,EAAK8E,EAAc2tB,GAC3C,IAAK,QACH,OAAOnuB,EAAOmuB,EAAUv0B,EAAOu0B,GACjC,IAAK,QACH,OJbe,SAACzyB,EAAU8E,EAAsB2tB,GACpD,OAAQzyB,GACN,IAAK,IACL,IAAK,KACH,OAAO2zB,GAAS7uB,GAAgB2tB,EAClC,IAAK,IACH,OAAOmB,GAAW9uB,GAAgB2tB,EACpC,QAEE,OAAO,GIIA8C,CAAMv1B,EAAK8E,EAAc2tB,GAClC,QAEE,OAAO,IAIA+C,GAAuB,SAClCrxB,EACAqC,EACAtC,EACAnE,EACAxC,EACAk1B,EACAnuB,GAEA,IAAM5E,EAASm1B,GAAU3wB,EAASnE,EAAOxC,EAAOk1B,EAASnuB,GAEzD,OAAQH,GACN,IAAK,OACH,OAAOzE,EACT,IAAK,kBACH,OAAO4zB,GAAgB/sB,GAAOxG,EAAOyG,IAAa9G,EACpD,QAEE,OAAO,IG7DP+1B,GAA+B,SAAC11B,EAAc0wB,EAAkBzkB,GAMpE,IALA,IAAM0pB,EAAY31B,EAAM0wB,GAClBkF,EAAW51B,EAAMiM,GAId3K,EAAIu0B,EAAkBv0B,GAAK,EAAGA,IACrC,GAAqB,IAAjBq0B,EAAUr0B,IAA4B,IAAhBs0B,EAASt0B,GACjC,OAAOA,EAAI,EAGf,OAAO,GAOHw0B,GAA8B,SAAC91B,EAAc0wB,EAAkBzkB,GAInE,IAHA,IAAM0pB,EAAY31B,EAAM0wB,GAClBkF,EAAW51B,EAAMiM,GAEd3K,EAAIu0B,EAAkBv0B,GAAK,EAAGA,IACrC,GAAqB,IAAjBq0B,EAAUr0B,IAA4B,IAAhBs0B,EAASt0B,GACjC,OAAOA,EAAI,EAGf,OAAO,GAmEIy0B,GAA0B,SAA1BA,EAA2Bn5B,EAAUmd,EAAU2W,EAAkBjlB,GAC5E,IAAMuqB,EAAMp5B,EAAE8zB,GAASjlB,EAAoB,GACrCwqB,EAAMlc,EAAE2W,GAASjlB,EAAoB,GAG3C,OAAIuqB,IAAQC,EAAYD,EAAMC,EAGhB,IAAVr5B,EAAE+I,KAAuB,IAAVoU,EAAEpU,IAAkB/I,EAAE+I,IAAMoU,EAAEpU,IAG7C8F,EAAoB,EACfsqB,EAAwBn5B,EAAGmd,EAAG2W,EAASjlB,EAAoB,GAIhE7O,EAAEmI,eAAiBgV,EAAEhV,aAAqBnI,EAAEmI,aAAegV,EAAEhV,aAG7DnI,EAAE2G,KAAOwW,EAAExW,MAAc,EACzB3G,EAAE2G,KAAOwW,EAAExW,KAAa,EACrB,GAKI2yB,GAAwB,SACnCttB,EACA8nB,EACAjlB,GAEA,OAAO7C,EAAQkR,KAAK,SAACld,EAAGmd,GACtB,OAAOgc,GAAwBn5B,EAAGmd,EAAG2W,EAASjlB,MA2IrC0qB,GAAkB,SAACC,EAA+BhqB,GAC7D,IAAMX,EAnOuB,SAAC2qB,EAA+BhqB,GAC7D,IAAMrD,EAAOqD,EAAQrD,KACf2nB,EAAU5nB,GAAuBC,GACjCkD,EAAcjD,GAAsBD,GAG1C,GAAgC,OAA5BqD,EAAQ1C,gBACV,OAAOjL,OAAO2N,EAAQ1C,iBAKxB,IADA,IAAI2sB,EAA4BR,EACvBv0B,EAAI,EAAGA,EAAI80B,EAAgB70B,OAAQD,IAAK,CAC/C,IAAMtB,EAAQo2B,EAAgB90B,GACxBwvB,EAAO4E,GAA6B11B,EAAO0wB,EAASzkB,GAEtD6kB,EAAO,GAAKA,EAAOuF,IACrBA,EAA4BvF,GAKhC,GAAIuF,EAA4BR,EAC9B,OAAOQ,EAKT,IADA,IAAIC,EAA0B,EACrBh1B,EAAI,EAAGA,EAAI80B,EAAgB70B,OAAQD,IAAK,CAC/C,IAAMtB,EAAQo2B,EAAgB90B,GACxBqG,EAAMmuB,GAA4B91B,EAAO0wB,EAASzkB,GAEpDtE,EAAM2uB,IACRA,EAA0B3uB,GAM9B,OAAI2uB,EAA0B,EAGxBA,EAA0B,GAAK,EAC1BA,EAIFA,EAA0B,EAI5B,EAgLmBC,CAAuBH,EAAiBhqB,GAC5DoqB,EAxIuB,SAC7BJ,EACAhqB,EACAX,GAeA,IAbA,IAAM1C,EAAOqD,EAAQrD,KACf2nB,EAAU5nB,GAAuBC,GAEjC0tB,EAAqBhrB,EAAoB,EACzCirB,EAAoBjrB,EAAoB,G3D/IpB,E2DgJpBkrB,EAAoBlrB,EAAoB,EAGxCmrB,EAA8B,GAC9BC,EAA8B,GAC9BC,EAA8B,GAC9BC,EAA2B,GAExBz1B,EAAI,EAAGA,EAAI80B,EAAgB70B,OAAQD,IAAK,CAC/C,IAAMtB,EAAQo2B,EAAgB90B,GAE1Bo1B,GAAgE,IAA3C12B,EAAM0wB,GAAS+F,EAAqB,GAC3DG,EAAcrtB,KAAKvJ,GAC6B,IAAvCA,EAAM0wB,GAAS+F,GACxBI,EAActtB,KAAKvJ,GACV22B,GAAgE,IAA3C32B,EAAM0wB,GAAS+F,EAAqB,GAClEK,EAAcvtB,KAAKvJ,GAEnB+2B,EAAWxtB,KAAKvJ,GAepB,OAVI02B,GACFR,GAAsBU,EAAelG,EAASjlB,EAAoB,GAEpEyqB,GAAsBW,EAAenG,EAASjlB,GAC1CkrB,GACFT,GAAsBY,EAAepG,EAASjlB,EAAoB,GAEpEyqB,GAAsBa,EAAYrG,EAASjlB,GAGpCqN,MAAMke,UAAUh5B,OAAO44B,EAAeC,EAAeC,EAAeC,GA6FpDE,CAAuBb,EAAiBhqB,EAASX,GAClEolB,EAvFkB,SACxBzkB,EACAoqB,EACA/qB,GAEA,IAAM1C,EAAOqD,EAAQrD,KACf2nB,EAAU5nB,GAAuBC,GACjCkD,EAAcjD,GAAsBD,GAE1C,GAAgC,OAA5BqD,EAAQzC,gBACV,OAAOlL,OAAO2N,EAAQzC,iBAGxB,IAAK,IAAIrI,EAAI,EAAGA,EAAIk1B,EAAej1B,OAAQD,IAAK,CAC9C,IAAMtB,EAAQw2B,EAAel1B,GACvBqvB,EAAMllB,EAAoB,EAChC,GAA4B,IAAxBzL,EAAM0wB,GAASC,IAA0C,IAA5B3wB,EAAMiM,GAAa0kB,GAClD,OAAO3wB,EAAMG,GAGjB,OAAO,KAmEgB+2B,CAAkB9qB,EAASoqB,EAAgB/qB,GAC5D0rB,EA3DiB,SACvB/qB,EACAykB,EACA2F,EACA/qB,GAEA,IAAM1C,EAAOqD,EAAQrD,KACf2nB,EAAU5nB,GAAuBC,GACjCkD,EAAcjD,GAAsBD,GAE1C,GAAuB,OAAnB8nB,EACF,OAAO,KAIT,IAAMuG,EAAoBZ,EAAe5rB,UAAU,SAAAuB,GAAC,OAAIA,EAAEhM,KAAO0wB,IACjE,IAA2B,IAAvBuG,EACF,OAAO,KAIT,IAAK,IAAI91B,EAAI81B,EAAoB,EAAG91B,EAAIk1B,EAAej1B,OAAQD,IAAK,CAClE,IAAM+1B,EAAmE,IAAtDb,EAAel1B,GAAGovB,GAASjlB,EAAoB,GAC5D6rB,EAAqE,IAA1Dd,EAAel1B,GAAG2K,GAAaR,EAAoB,GAEpE,GAAI4rB,GAAcC,EAChB,MAAO,CACL/rB,QAASirB,EAAel1B,GAAGnB,GAC3BsL,kBAAmBA,GAMzB,GAAIA,EAAoB,E3DvPE,E2DwPxB,OAAO,KAIT,IAFA,IAAMslB,EAAwBtlB,EAAoB,EAEzCnK,EAAI,EAAGA,EAAI81B,EAAmB91B,IAAK,CAC1C,IAAM+1B,EAAuE,IAA1Db,EAAel1B,GAAGovB,GAASK,EAAwB,GAChEuG,EAAyE,IAA9Dd,EAAel1B,GAAG2K,GAAa8kB,EAAwB,GAExE,GAAIsG,GAAcC,EAChB,MAAO,CACL/rB,QAASirB,EAAel1B,GAAGnB,GAC3BsL,kBAAmBslB,GAKzB,OAAO,KAQewG,CAAiBnrB,EAASykB,EAAgB2F,EAAgB/qB,GAEhF,MAAO,CACL+qB,eAAgBA,EAChB/qB,kBAAmBA,EACnBolB,eAAgBA,EAChBE,sBAAuBoG,EAAgBA,EAAc1rB,kBAAoB,KACzEjC,YAAa2tB,EAAgBA,EAAc5rB,QAAU,OC1PnDisB,GAAgB,SAACC,GACrB,OAAOznB,KAAKO,UAAUknB,IAElBC,GAAgB,SAACr7B,GACrB,OAAO2T,KAAKC,MAAM5T,IASds7B,GAAwB,SAACn6B,EAAcwC,GAE3C,IAAK,IAAIsB,EAAI9D,EAAM+D,OAAS,EAAGD,GAAK,IAAKA,EAAG,CAE1C,OADa9D,EAAM8D,IAEjB,IAAK,IACH,GAAItB,EAAMqG,YAAYgC,SAAS,GAC7B,MAAO,IAET,MACF,IAAK,IACH,GAAIrI,EAAMsG,YAAY+B,SAAS,GAC7B,MAAO,IAET,MACF,IAAK,IACH,GAAIrI,EAAMuG,eAAe8B,SAAS,GAChC,MAAO,IAET,MACF,QACE,MAAO,KAGb,MAAO,KAUHuvB,GAA2B,SAAC7uB,EAAY/I,GAC5C,IAAI41B,EAAW,KACf,OAAQ7sB,GACN,IAAK,IACH6sB,EAAW51B,EAAMqG,YACjB,MACF,IAAK,IACHuvB,EAAW51B,EAAMsG,YACjB,MACF,IAAK,IACHsvB,EAAW51B,EAAMuG,eACjB,MACF,QAEE,OAAO,EAIX,IAAK,IAAIjF,EAAI,EAAGA,GAAK,IAAKA,EACxB,GAAoB,IAAhBs0B,EAASt0B,GAAU,OAAOA,EAEhC,OAAO,GAKHu2B,GAAwB,SAACjvB,EAA+B6uB,EAAoBh6B,GAChF,IAAMD,EAAQi6B,EAASj6B,MAGjBs6B,EAAgBlvB,EAAQ0B,QA+D9B,OA5DAwtB,EAAche,KAAK,SAACld,EAAGmd,GACrB,IAAIge,EAAS,EAGb,GAAa,cAATt6B,EAAsB,CACxBs6B,EAAS3vB,GAAyBxL,EAAGY,GACrC,IAAMw6B,EAAS5vB,GAAyB2R,EAAGvc,GAC3C,GAAIu6B,IAAWC,EAAQ,OAAOA,EAASD,OAClC,GAAa,UAATt6B,EAAkB,CAC3Bs6B,EAASrvB,GAAqB9L,EAAGY,GACjC,IAAMw6B,EAAStvB,GAAqBqR,EAAGvc,GACvC,GAAIu6B,IAAWC,EAAQ,OAAOA,EAASD,EAIzC,GAAIn7B,EAAEmI,eAAiBgV,EAAEhV,aAAc,OAAOnI,EAAEmI,aAAegV,EAAEhV,aAIjE,GAAe,IAAXgzB,EACF,OAAIn7B,EAAE2G,KAAOwW,EAAExW,MAAc,EACzB3G,EAAE2G,KAAOwW,EAAExW,KAAa,EACrB,EAeT,IAAM00B,EAAsBN,GAAsBn6B,EAAOZ,GACnDs7B,EAAsBP,GAAsBn6B,EAAOuc,GACnDoe,EAA2B,CAAC,IAAK,IAAK,KAAKpS,QAAQkS,GACnDG,EAA2B,CAAC,IAAK,IAAK,KAAKrS,QAAQmS,GACzD,GAAIC,IAA6BC,EAC/B,OAAOD,EAA2BC,EAKpC,IAAMrvB,EAAakvB,EACbI,EAAiCT,GAAyB7uB,EAAMnM,GAChE07B,EAAiCV,GAAyB7uB,EAAMgR,GACtE,GAAIse,IAA2BC,EAC7B,OAAOD,EAAyBC,EAKlC,IAAMjsB,EAAUgsB,EAChB,OAAOtC,GAAwBn5B,EAAGmd,EAAGjR,GAAuBC,GAAOsD,KAG9DyrB,GAIHS,GAAoB,SAACC,GACzB,MAAO,CAAC,MAAO,KAAM,KAAM,KAAM,IAAK,IAAK,KAAKzS,QAAQyS,IAIpDC,GAAwB,SAACC,GAC7B,MAAO,CAAC,OAAQ,UAAW,QAAS,aAAc,aAAa3S,QAAQ2S,IAInEC,GAAkB,SAAC14B,GACvB,OAAQA,GACN,IAAK,IACH,OAAO,EACT,IAAK,IACH,OAAO,EACT,IAAK,KACH,OAAO,EACT,QAEE,OAAO,IA2CP24B,GAAkB,SACtB34B,EACA44B,EACAC,EACAzO,GAEA,OAAQpqB,GACN,IAAK,IACH,OAAO44B,EACT,IAAK,IACH,OAAOC,EACT,IAAK,KACH,OAAOzO,EACT,QAEE,OAAOwO,IAQPE,GAAgB,SACpBnwB,EACA5E,EACAC,EACAC,EACAG,EACA5G,GAMA,IADA,IAAMu7B,EAAc,IAAIC,IACf33B,EAAI,EAAGA,EAAIsH,EAAQrH,OAAQD,IAAK,CACvC,IAAM6K,EAAIvD,EAAQtH,GAGZrB,EAAMkM,EAAElM,IACRi5B,EAAgBN,GAAgB34B,EAAK+D,EAAoBC,EAAsBC,GAC/Ei1B,EAAiBt0B,GAAkBq0B,EAAe/sB,EAAEpH,cAGtD1E,EAAY8L,EAAE9L,UACdgE,GAAwC,YAAdhE,IAC5BA,EAAY,SAId,IAAK,IAAI+4B,EAAS,EAAGA,EAASjtB,EAAEpI,UAAUxC,OAAQ63B,IAGhD,IAFA,IAAM/f,EAAWlN,EAAEpI,UAAUq1B,GAEpBC,EAAQ,EAAGA,EAAQltB,EAAEzG,OAAOnE,OAAQ83B,IAAS,CACpD,IAAM77B,EAAQ2O,EAAEzG,OAAO2zB,GAEjBh9B,EAAMm7B,GADK,CAAEv3B,MAAKzC,QAAO6C,YAAWgZ,WAAU8f,mBAG9CG,EAAaN,EAAYO,IAAIl9B,QACpByC,IAAfw6B,EAA2BN,EAAYQ,IAAIn9B,EAAK,CAAC8P,IAAMmtB,EAAW/vB,KAAK4C,IAM7E,IAAMstB,EAAU,GAnCWC,GAAA,EAAAC,GAAA,EAAAC,OAAA96B,EAAA,IAoC3B,QAAA+6B,EAAAC,EAAgCd,EAAhCe,OAAAC,cAAAN,GAAAG,EAAAC,EAAAhJ,QAAAmJ,MAAAP,GAAA,EAA6C,KAAAQ,EAAAL,EAAA/8B,MAAAif,EAAAjV,OAAAC,GAAA,EAAAD,CAAAozB,EAAA,GAAjC79B,EAAiC0f,EAAA,GAA5Bud,EAA4Bvd,EAAA,GACrC0b,EAAWC,GAAcr7B,GACzBm6B,EAAiBqB,GAAsByB,EAAY7B,EAAUh6B,GACnEg8B,EAAQlwB,KAAK,CAAEkuB,WAAUjB,oBAvCA,MAAArmB,GAAAwpB,GAAA,EAAAC,EAAAzpB,EAAA,YAAAupB,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GA2C3B,OA9GiC,SAACH,GAClCA,EAAQ3f,KAAK,SAACld,EAAGmd,GACf,IAAMqgB,EAAOx9B,EAAE66B,SACT4C,EAAOtgB,EAAE0d,SAGT6C,EAAO3B,GAAgByB,EAAKn6B,KAC5Bs6B,EAAO5B,GAAgB0B,EAAKp6B,KAClC,GAAIq6B,IAASC,EAAM,OAAOD,EAAOC,EAGjC,IAAMC,EAASjC,GAAkB6B,EAAK58B,OAChCi9B,EAASlC,GAAkB8B,EAAK78B,OACtC,GAAIg9B,IAAWC,EAAQ,OAAOD,EAASC,EAGvC,IAAMC,EAAajC,GAAsB2B,EAAK/5B,WACxCs6B,EAAalC,GAAsB4B,EAAKh6B,WAC9C,GAAIq6B,IAAeC,EAAY,OAAOD,EAAaC,EAGnD,GAAIP,EAAK/gB,SAAWghB,EAAKhhB,SAAU,OAAQ,EAC3C,GAAI+gB,EAAK/gB,SAAWghB,EAAKhhB,SAAU,OAAO,EAI1C,IAAMuhB,EAAkBR,EAAKjB,eAAe9wB,SAAS,KAC/CwyB,EAAkBR,EAAKlB,eAAe9wB,SAAS,KACrD,OAAIuyB,IAAWC,EAAe,GACzBD,GAAUC,GAAgB,GAEc,KAAxBT,EAAKjB,eAAwB,EAAI3kB,SAAS4lB,EAAKjB,kBACvB,KAAxBkB,EAAKlB,eAAwB,EAAI3kB,SAAS6lB,EAAKlB,mBA6EtE2B,CAAoBrB,GACbA,GAoBIsB,GAAkB,SAC7BnyB,EACA5E,EACAC,EACAC,EACAG,GAEA,OAAO00B,GACLnwB,EACA5E,EACAC,EACAC,EACAG,EACA,UCjRO22B,GAA2C,KAIlDC,GAA2C,EAEzCC,eACJ,SAAAA,EAAYp/B,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAq/B,IACxB7sB,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAo0B,GAAAzsB,KAAA5S,KAAMC,KAORq/B,wBAA0B,SAACn7B,EAAc+I,EAAYqyB,GAQnD,IAPA,IAAM1K,EAAU5nB,GAAuBC,GACjCkD,EAAcjD,GAAsBD,GAGtCsyB,EAAQ,EACRC,EAAiB,EAEZh6B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMlD,EAAK4B,EAAM0wB,GAASpvB,GAEI,IAA1BtB,EAAMiM,GAAa3K,GACrB+5B,EAAQr8B,KAAK2I,IAAI0zB,EAAOj9B,IACY,IAA3B4B,EAAMiM,GAAa3K,KAC5Bg6B,EAAoC,IAAnBA,EAAuBl9B,EAAKY,KAAK8lB,IAAIwW,EAAgBl9B,IAK1E,GAAc,IAAVi9B,EAAa,CACf,IAAMn6B,EAAWmN,EAAKvS,MAAMmO,KAAK1F,KAAO82B,EAAQl9B,EAAOk9B,GACvD,OACE1+B,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,EAAY/9B,UAAWkU,KAAO1X,UACpC8E,EAAcuC,EAAUmN,EAAKvS,MAAMF,WAI1C,GAAuB,IAAnB0/B,EAAsB,CACxB,IAAMp6B,EAAWmN,EAAKvS,MAAMmO,KAAK1F,KAAO+2B,EAAiBn9B,EAAOm9B,GAChE,OACE3+B,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,EAAY/9B,UAAWkU,KAAOzX,QACpC6E,EAAcuC,EAAUmN,EAAKvS,MAAMF,WAM1C,OAAOe,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,KA7CQ/sB,EAgD1BktB,mBAAqB,SAACv7B,EAAc+I,EAAY0C,EAA2B2vB,GACzE,IAAM1K,EAAU5nB,GAAuBC,GACjCkD,EAAcjD,GAAsBD,GAEpC3K,EAAK4B,EAAM0wB,GAASjlB,EAAoB,GACxCM,EAAS/L,EAAMiM,GAAaR,EAAoB,GAChD+vB,EAAO78B,EAAc0P,EAAKvS,MAAMmO,KAAK1F,KAAOnG,EAAKD,EAAOC,GAAKiQ,EAAKvS,MAAMF,UACxE6/B,EAAoB,IAAPr9B,EAAW,GAAKo9B,EAK7Br7B,EAAK,gBAAkBH,EAAMG,GAAK,IAAM4I,EAAO0C,EAKrD,GAAI4C,EAAKvS,MAAMsQ,QAAQzC,kBAAoB3J,EAAMG,IAAMsL,IAAsB4C,EAAKvS,MAAM2P,kBAOtF,OALIA,GAAqBwvB,KACvBA,GAAmCxvB,EACnCuvB,GAA4B76B,GAI5BxD,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,EAAY/9B,UAAWkU,KAAO5X,kBACrCgD,EAAAC,EAAAC,cAAC6+B,GAAD,CAAcv7B,GAAIA,EAAIH,MAAOA,EAAO+I,KAAMA,EAAM0C,kBAAmBA,KAOzE,GAAe,IAAXM,EAAc,CAChB,IAAM1O,EAAuB,IAAX0O,EAAewF,KAAO1X,SAAW0X,KAAOzX,OACpD6hC,EAA2B,IAAX5vB,EAAe,GAAK,IAC1C,OACEpP,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,EAAY/9B,UAAWA,GAC7Bs+B,EACAF,GAMP,GAAI1yB,IAASsF,EAAKvS,MAAMsQ,QAAQrD,KAC9B,OAAOpM,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAaK,GAK/B,IADA,IAAIG,GAA0B,EACrBt6B,EAAI,EAAGA,EAAImK,EAAmBnK,IACrC,GAAkC,IAA9BtB,EAAMiM,GAAa3K,EAAI,GAAU,CACnCs6B,GAA0B,EAC1B,MAQJ,IAAMC,EAAwBpwB,IAAsB4C,EAAKvS,MAAM2P,mBAAqBmwB,EAC9EE,EACJrwB,IAAsB4C,EAAKvS,MAAM2P,kBAAoB,GACI,IAAzDzL,EAAMiM,GAAaoC,EAAKvS,MAAM2P,kBAAoB,GAEpD,OAAW,IAAPrN,GAAYy9B,GAAyBC,GAEnCrwB,GAAqBwvB,KACvBA,GAAmCxvB,EACnCuvB,GAA4B76B,GAI5BxD,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,EAAY/9B,UAAWkU,KAAO5X,kBACrCgD,EAAAC,EAAAC,cAAC6+B,GAAD,CAAcv7B,GAAIA,EAAIH,MAAOA,EAAO+I,KAAMA,EAAM0C,kBAAmBA,MAMlE9O,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAaK,IAlILptB,EAqI1BuqB,gBAAkB,SAAC34B,EAAU87B,GAC3B,OAAQ97B,GACN,IAAK,IACH,OAAO87B,EAAU/3B,mBACnB,IAAK,IACH,OAAO+3B,EAAU93B,qBACnB,IAAK,KACH,OAAO83B,EAAU73B,kBACnB,QAEE,OAAO63B,EAAU/3B,qBA/IGqK,EAmJ1B2tB,WAAa,SAACh8B,EAAco7B,EAAwBa,GAClD,OAAQb,GACN,IAAK,SACH,IAAIc,EAA6Bl8B,EAAMuD,KAOvC,OAJI8K,EAAKvS,MAAM+0B,iBAAmB7wB,EAAMG,KACtC+7B,EAAOv/B,EAAAC,EAAAC,cAAA,SAAImD,EAAMuD,OAIjB5G,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,EAAY/9B,UAAWkU,KAAOhY,UACpC2iC,GAIP,IAAK,aACH,IAAMC,EAAKn8B,EAAM+E,aACXq3B,EAAQz9B,EAAc0P,EAAKvS,MAAMmO,KAAK1F,KAAO43B,EAAKh+B,EAAOg+B,GAAK9tB,EAAKvS,MAAMF,UAC/E,OAAOe,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAoB,IAAPe,EAAW,KAAOC,GAEjD,IAAK,cACH,IAAMD,EAAKn8B,EAAM+E,aACXm0B,EAAgB7qB,EAAKuqB,gBAAgB54B,EAAMC,IAAKoO,EAAKvS,MAAMmO,MAC3DoyB,EAAchuB,EAAKvS,MAAMmO,KAAK1F,KAChCM,GAAkBq0B,EAAeiD,EAAI9tB,EAAKvS,MAAMF,UAChDwJ,GAAqB8zB,EAAeiD,GACxC,OAAOx/B,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAoB,IAAPe,EAAW,KAAOE,GAEjD,IAAK,WAGH,IAAMC,EAAWt8B,EAAM+D,UAAUxC,OAAS,EAAIvB,EAAM+D,UAAU,GAAK,KACnE,OACEpH,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,EAAY/9B,UAAWkU,KAAOhY,UACpC+iC,GAIP,IAAK,MACH,OACE3/B,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,EAAY/9B,UAAWkU,KAAOhY,UACtB,IAAdyG,EAAM2F,IAAY,GAAK3F,EAAM2F,KAIpC,IAAK,YAEH,IAAItF,EAAgCL,EAAMK,UAG1C,MAFkB,eAAdA,IAA4BA,EAAY,UAC1B,cAAdA,IAA2BA,EAAY,SACpC1D,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAa/6B,GAE/B,IAAK,MACH,OAAO1D,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAap7B,EAAMwF,KACrC,IAAK,KACH,OAAO6I,EAAKktB,mBAAmBv7B,EAAO,IAAK,EAAGo7B,GAChD,IAAK,KACH,OAAO/sB,EAAKktB,mBAAmBv7B,EAAO,IAAK,EAAGo7B,GAChD,IAAK,KACH,OAAO/sB,EAAKktB,mBAAmBv7B,EAAO,IAAK,EAAGo7B,GAChD,IAAK,KACH,OAAO/sB,EAAKktB,mBAAmBv7B,EAAO,IAAK,EAAGo7B,GAChD,IAAK,KACH,OAAO/sB,EAAKktB,mBAAmBv7B,EAAO,IAAK,EAAGo7B,GAChD,IAAK,KACH,OAAO/sB,EAAKktB,mBAAmBv7B,EAAO,IAAK,EAAGo7B,GAChD,IAAK,KACH,OAAO/sB,EAAKktB,mBAAmBv7B,EAAO,IAAK,EAAGo7B,GAChD,IAAK,KACH,OAAO/sB,EAAKktB,mBAAmBv7B,EAAO,IAAK,EAAGo7B,GAChD,IAAK,KACH,OAAO/sB,EAAKktB,mBAAmBv7B,EAAO,IAAK,EAAGo7B,GAChD,IAAK,KACH,OAAO/sB,EAAKktB,mBAAmBv7B,EAAO,IAAK,EAAGo7B,GAChD,IAAK,KACH,OAAO/sB,EAAKktB,mBAAmBv7B,EAAO,IAAK,EAAGo7B,GAChD,IAAK,KACH,OAAO/sB,EAAKktB,mBAAmBv7B,EAAO,IAAK,EAAGo7B,GAChD,IAAK,YACH,OAAO/sB,EAAK8sB,wBAAwBn7B,EAAO,IAAKo7B,GAClD,IAAK,YACH,OAAO/sB,EAAK8sB,wBAAwBn7B,EAAO,IAAKo7B,GAClD,IAAK,UACL,IAAK,UACH,OAAOz+B,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,EAAY/9B,UAAWkU,KAAO9X,aAChD,IAAK,iBACH,IAAMi5B,EAAU1qB,GAAoBhI,GAC9BkB,EAAWmN,EAAKvS,MAAMmO,KAAK1F,KAAOmuB,EAAUv0B,EAAOu0B,GACzD,OAAO/1B,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAyB,IAAZ1I,EAAgB,KAAO/zB,EAAcuC,EAAUmN,EAAKvS,MAAMF,WAEzF,IAAK,kBACH,IAAM82B,EAAkB1qB,GAAoBhI,GACtCxC,EAAQwC,EAAM0F,OAAOnE,OAAS,EAAIvB,EAAM0F,OAAO,GAAK,MACpD/F,EAAiBm1B,GAAUzmB,EAAKvS,MAAMmO,KAAK9F,QAASnE,EAAOxC,EAAOk1B,EAASrkB,EAAKvS,MAAMmO,KAAK1F,MAGjG,MAAgC,UAA5B8J,EAAKvS,MAAMmO,KAAK9F,QACXxH,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAwB,IAAXz7B,EAAehB,EAAcgB,EAAQ0O,EAAKvS,MAAMF,UAAY,MAEpFe,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAwB,IAAXz7B,EAAeD,EAAcC,EAAQ0O,EAAKvS,MAAMF,UAAY,MAE3F,IAAK,aACH,IAAM82B,EAAUjqB,GAAgBzI,GAC1BkB,EAAWmN,EAAKvS,MAAMmO,KAAK1F,KAAOmuB,EAAUv0B,EAAOu0B,GACzD,OAAO/1B,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAyB,IAAZ1I,EAAgB,KAAO/zB,EAAcuC,EAAUmN,EAAKvS,MAAMF,WAEzF,IAAK,cACH,IAAM82B,EAAkBjqB,GAAgBzI,GAClCxC,EAAQwC,EAAM0F,OAAOnE,OAAS,EAAIvB,EAAM0F,OAAO,GAAK,MACpD/F,EAAiBm1B,GAAUzmB,EAAKvS,MAAMmO,KAAK9F,QAASnE,EAAOxC,EAAOk1B,EAASrkB,EAAKvS,MAAMmO,KAAK1F,MAGjG,MAAgC,UAA5B8J,EAAKvS,MAAMmO,KAAK9F,QACXxH,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAwB,IAAXz7B,EAAehB,EAAcgB,EAAQ0O,EAAKvS,MAAMF,UAAY,MAEpFe,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAwB,IAAXz7B,EAAeD,EAAcC,EAAQ0O,EAAKvS,MAAMF,UAAY,MAE3F,IAAK,QAEH,GAA+B,IAA3B6M,GAAgBzI,GAAc,OAAOrD,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,IAIlD,GAA+B,IAA3Bp7B,EAAM+D,UAAUxC,OAAc,OAAO5E,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,IAMlD,IALA,IAAMkB,EAAWt8B,EAAM+D,UAAU,GAKxBzC,EAAI,EAAGA,EAAI26B,EAAgB16B,OAAQD,IAAK,CAC/C,IAAMvD,EAASk+B,EAAgB36B,GAC/B,GAAIvD,EAAO05B,SAASpe,WAAaijB,EAKjC,IADA,IAAMhD,EAAav7B,EAAOy4B,eACjBvQ,EAAI,EAAGA,EAAIqT,EAAW/3B,OAAQ0kB,IAAK,CAG1C,GAFiBqT,EAAWrT,GAEf9lB,KAAOH,EAAMG,GAAI,CAC5B,IAAMo8B,EAAUx8B,EAAoBkmB,EAAI,EAAGjmB,EAAOqO,EAAKvS,MAAMF,UAC7D,OAAOe,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,GAAamB,KAKnC,OAAO5/B,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,IAElB,QAEE,OAAOz+B,EAAAC,EAAAC,cAAA,MAAIR,IAAK++B,MA1SI/sB,EA8S1B8S,WAAa,SAACqb,EAA4BP,GAKxC,IAJA,IAAMzF,EAAiBnoB,EAAKvS,MAAM06B,eAC5B3F,EAAiBxiB,EAAKvS,MAAM+0B,eAE5BhL,EAAO,GACJvkB,EAAI,EAAGA,EAAIk1B,EAAej1B,OAAQD,IAAK,CAK9C,IAJA,IAAMtB,EAAQw2B,EAAel1B,GAGvBm7B,EAAQ,GACLC,EAAM,EAAGA,EAAMF,EAAQj7B,OAAQm7B,IAAO,CAC7C,IAAMtB,EAAaoB,EAAQE,GAC3BD,EAAMlzB,KAAK8E,EAAK2tB,WAAWh8B,EAAOo7B,EAAYa,IAGhD,IACMU,EADY38B,EAAMG,KAAO0wB,EACEtf,KAAO3X,QAAU,GAClDisB,EAAKtc,KACH5M,EAAAC,EAAAC,cAAA,MAAIR,IAAK2D,EAAMG,GAAI9C,UAAWs/B,GAC3BF,IAIP,OAAO5W,GArUiBxX,EAwU1BuuB,qBAAuB,SAACxB,GACtB,OAAQA,GACN,IAAK,SACH,OAAOz+B,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,0BAC7B,IAAK,aACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,8BAC7B,IAAK,cACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,+BAC7B,IAAK,WACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,4BAC7B,IAAK,MACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,uBAC7B,IAAK,YACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,6BAC7B,IAAK,MACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,uBAC7B,IAAK,KACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,sBAC7B,IAAK,KACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,sBAC7B,IAAK,KACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,sBAC7B,IAAK,KACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,sBAC7B,IAAK,KACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,sBAC7B,IAAK,KACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,sBAC7B,IAAK,KACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,sBAC7B,IAAK,KACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,sBAC7B,IAAK,KACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,sBAC7B,IAAK,KACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,sBAC7B,IAAK,KACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,sBAC7B,IAAK,KACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,sBAC7B,IAAK,YACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,6BAC7B,IAAK,YACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,6BAC7B,IAAK,UACL,IAAK,UACH,MAAO,GACT,IAAK,iBACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,kCAC7B,IAAK,kBACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,mCAC7B,IAAK,aACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,kCAC7B,IAAK,cACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,+BAC7B,IAAK,QACH,OAAOxD,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,yBAC7B,QAEE,MAAO,KAjYXkO,EAAK8S,WAAa9S,EAAK8S,WAAWrQ,KAAhBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAClBA,EAAK8sB,wBAA0B9sB,EAAK8sB,wBAAwBrqB,KAA7BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC/BA,EAAKktB,mBAAqBltB,EAAKktB,mBAAmBzqB,KAAxBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC1BA,EAAK2tB,WAAa3tB,EAAK2tB,WAAWlrB,KAAhBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IALMA,wEAyYxB4sB,GAAmC,EAGnC,IAAMuB,EAA6B,CAAC,UAEa,IAA7C3gC,KAAKC,MAAMsQ,QAAQxC,uBACrB4yB,EAAQjzB,KAAK,YAEfizB,EAAQjzB,KAAK,aAAc,eAG3B,IAAK,IAAIjI,EAAI,EAAGA,EAAIzF,KAAKC,MAAM06B,eAAej1B,SAAUD,EACtD,GAAyC,IAArCzF,KAAKC,MAAM06B,eAAel1B,GAAGqE,IAAW,CAC1C62B,EAAQjzB,KAAK,OACb,MAK4B,MAA5B1N,KAAKC,MAAMsQ,QAAQrD,MACrByzB,EAAQjzB,KAAK,WACbizB,EAAQjzB,KAAK,KAAM,KAAM,MACY,IAAjC1N,KAAKC,MAAM2P,mBACb+wB,EAAQjzB,KAAK,MAEfizB,EAAQjzB,KAAK,WACbizB,EAAQjzB,KAAK,KAAM,OACkB,MAA5B1N,KAAKC,MAAMsQ,QAAQrD,MAC5ByzB,EAAQjzB,KAAK,YAAa,UAAW,KAAM,KAAM,MACZ,IAAjC1N,KAAKC,MAAM2P,mBACb+wB,EAAQjzB,KAAK,MAEfizB,EAAQjzB,KAAK,UAAW,OACa,MAA5B1N,KAAKC,MAAMsQ,QAAQrD,OAC5ByzB,EAAQjzB,KAAK,YAAa,YAAa,UAAW,KAAM,KAAM,MACzB,IAAjC1N,KAAKC,MAAM2P,mBACb+wB,EAAQjzB,KAAK,MAEfizB,EAAQjzB,KAAK,YAIf,IAAMszB,EAA2C,MAA5BhhC,KAAKC,MAAMsQ,QAAQrD,MAAgBlN,KAAKC,MAAM2P,kBAAoB,EACvF+wB,EAAQjzB,KAAKszB,EAAe,iBAAmB,cACf,UAA5BhhC,KAAKC,MAAMmO,KAAK9F,SAClBq4B,EAAQjzB,KAAKszB,EAAe,kBAAoB,eAElDL,EAAQjzB,KAAK,SAKb,IAFA,IAAMid,EAAU,GACVsW,EAAkBjhC,KAAKC,MAAMsQ,QAAQrD,KAAO1G,OAAOxG,KAAKC,MAAM2P,mBAC3DnK,EAAI,EAAGA,EAAIk7B,EAAQj7B,OAAQD,IAAK,CACvC,IAAM2pB,EAASuR,EAAQl7B,GACnBjE,EAAYkU,KAAO/X,UACnBqX,OAAgC,EAErB,WAAXoa,EACF5tB,EAAYkU,KAAOwrB,SACC,aAAX9R,GACT5tB,EAAYkU,KAAOyrB,aACfnhC,KAAKC,MAAMsQ,QAAQxC,wBACrBiH,EAAQ,CAAEyH,MAAOzc,KAAKC,MAAMsQ,QAAQxC,sBAAwB,QAE1C,YAAXqhB,GAAmC,YAAXA,EACjC5tB,EAAYkU,KAAO9X,WACVwxB,IAAW6R,IACpBz/B,EAAYkU,KAAO7X,cAGrB8sB,EAAQjd,KACN5M,EAAAC,EAAAC,cAAA,MAAIR,IAAK4uB,EAAQ5tB,UAAWA,EAAWwT,MAAOA,GAC3ChV,KAAK+gC,qBAAqB3R,KAMjC,ID1OFriB,EACA5E,EACAC,EACAC,EACAG,ECsOQ43B,EAAkBY,GD1O1Bj0B,EC4OQ/M,KAAKC,MAAM06B,eD3OnBxyB,EC4OQnI,KAAKC,MAAMmO,KAAKjG,mBD3OxBC,EC4OQpI,KAAKC,MAAMmO,KAAKhG,qBD3OxBC,EC4OQrI,KAAKC,MAAMmO,KAAK/F,kBD3OxBG,EC4OQxI,KAAKC,MAAMmO,KAAK5F,uBD1OjB00B,GACLnwB,EACA5E,EACAC,EACAC,EACAG,EACA,cCsOI02B,GACEl/B,KAAKC,MAAM06B,eACX36B,KAAKC,MAAMmO,KAAKjG,mBAChBnI,KAAKC,MAAMmO,KAAKhG,qBAChBpI,KAAKC,MAAMmO,KAAK/F,kBAChBrI,KAAKC,MAAMmO,KAAK5F,wBAGtB,OACE1H,EAAAC,EAAAC,cAAA,SAAOQ,UAAWkU,KAAOjY,cACvBqD,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAK2pB,IAEP7pB,EAAAC,EAAAC,cAAA,aAAQhB,KAAKslB,WAAWqb,EAASP,YA7ed1/B,IAAMe,WA2flBd,eARS,SAACC,GACvB,MAAO,CACLwN,KAAMxN,EAAMwN,KACZmC,QAAS3P,EAAM2P,QACfxQ,SAAUa,EAAMb,WAILY,CAAyB0+B,wBC1hBlC+B,eACJ,SAAAA,EAAYnhC,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAohC,IACxB5uB,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAm2B,GAAAxuB,KAAA5S,KAAMC,KAmBRohC,gBAAkB,SAAC1/B,GACjB,IAAM0E,EAAMzD,OAAOjB,EAAME,cAAcZ,OACjCoB,EAASmQ,EAAKvS,MAAMsQ,QAAQlO,OAC5B6K,EAAOsF,EAAKvS,MAAMsQ,QAAQrD,KAG5BzD,EAAW+I,EAAKvS,MAAMsQ,QAAQ9G,SAC9BA,EAAW+I,EAAKvS,MAAMgI,gBAAgB5B,EAAM,KAC9CoD,EAAW,GAGb+I,EAAKvS,MAAMqhC,gBAAgBj7B,EAAKoD,EAAUpH,EAAQ6K,IA/B1BsF,EAkC1B+uB,qBAAuB,SAAC5/B,GACtB,IAAM0E,EAAMmM,EAAKvS,MAAMsQ,QAAQlK,IACzBoD,EAAW7G,OAAOjB,EAAME,cAAcZ,OACtCoB,EAASmQ,EAAKvS,MAAMsQ,QAAQlO,OAC5B6K,EAAOsF,EAAKvS,MAAMsQ,QAAQrD,KAChCsF,EAAKvS,MAAMqhC,gBAAgBj7B,EAAKoD,EAAUpH,EAAQ6K,IAvC1BsF,EA0C1BgvB,mBAAqB,SAAC7/B,GACpB,IAAM0E,EAAMmM,EAAKvS,MAAMsQ,QAAQlK,IACzBoD,EAAW+I,EAAKvS,MAAMsQ,QAAQ9G,SAC9BpH,EAASV,EAAME,cAAcZ,MAC7BiM,EAAOsF,EAAKvS,MAAMsQ,QAAQrD,KAC5BjL,EAAaI,IAAWD,EAAaC,IACvCmQ,EAAKvS,MAAMqhC,gBAAgBj7B,EAAKoD,EAAUpH,EAAQ6K,IAhD5BsF,EAoD1BivB,iBAAmB,SAAC9/B,GAClB,IAAM0E,EAAMmM,EAAKvS,MAAMsQ,QAAQlK,IACzBoD,EAAW+I,EAAKvS,MAAMsQ,QAAQ9G,SAE9ByD,EAAOvL,EAAME,cAAcZ,MAC7BgB,EAAaiL,ItE3Bd,SAAoBjM,GACzB,IAAMiM,EAAOjM,EACb,OAAQiM,GACN,IAAK,IACL,IAAK,IACL,IAAK,IACH,OAAO,EACT,QAEE,MAAM,IAAIhN,MAAJ,uDAAAiC,OAAiElB,EAAjE,OsEkBkBygC,CAAWx0B,IACnCsF,EAAKvS,MAAMqhC,gBAAgBj7B,EAAKoD,EAHnB,IAGqCyD,IA1D5BsF,EA8D1BmvB,oBAAsB,SAAChgC,GACrB,IAAM6O,EAAU5N,OAAOjB,EAAME,cAAcZ,OAC3CuR,EAAKvS,MAAM4N,gBAAgB2C,IAhEHgC,EAmE1BovB,mBAAqB,SAACjgC,GACpB,IAAM+N,EAAU9M,OAAOjB,EAAME,cAAcZ,OAC3CuR,EAAKvS,MAAM6N,gBAAgB4B,IArEH8C,EA0E1BqvB,4BAA8B,WACM,OAA9B1C,KAKA3sB,EAAKvS,MAAM2P,mBAAqB,GAIpCmP,WAAW,WACT,GAAkC,OAA9BogB,GAAJ,CAIA,IAAM2C,EAAO/uB,SAASC,eAAemsB,IACjC2C,GACFA,EAAKC,UAEN,OA7FqBvvB,EA0G1BwvB,mBAAqB,WACnB,IAAMC,EAAgBlvB,SAASkvB,cAC3BA,aAAyBC,aAC3BD,EAAcprB,QA7GQrE,EAiH1B2vB,eAAiB,WAEf,GAAkC,OAA9B3vB,EAAKvS,MAAM+0B,eAAf,CAIA,IAAMtlB,EAAU9M,OAAO4P,EAAKvS,MAAM+0B,gBAC5B9nB,EAAOsF,EAAKvS,MAAMsQ,QAAQrD,KAC1BsD,EAAUgC,EAAKvS,MAAM2P,kBAC3B4C,EAAKvS,MAAMmiC,SAAS1yB,EAASxC,EAAMsD,GAAS,GAC5CgC,EAAKqvB,gCA3HmBrvB,EA8H1B6vB,aAAe,WAEb,GAAkC,OAA9B7vB,EAAKvS,MAAM+0B,eAAf,CAIA,IAAMtlB,EAAU9M,OAAO4P,EAAKvS,MAAM+0B,gBAC5B9nB,EAAOsF,EAAKvS,MAAMsQ,QAAQrD,KAC1BsD,EAAUgC,EAAKvS,MAAM2P,kBAC3B4C,EAAKvS,MAAMmiC,SAAS1yB,EAASxC,EAAMsD,GAAS,GAC5CgC,EAAKqvB,gCAxImBrvB,EA4I1B8vB,qBAAuB,WACrB,IAAMC,EAAWxvB,SACjB,QAAIwvB,EAAIC,sBACJD,EAAIE,4BACJF,EAAIG,wBACJH,EAAII,uBAjJgBnwB,EAsJ1BowB,eAAiB,WACf,IAAML,EAAWxvB,SACiB,oBAAvBwvB,EAAIK,eAA+BL,EAAIK,iBACL,oBAA7BL,EAAIM,qBAAqCN,EAAIM,uBACnB,oBAA1BN,EAAIO,kBAAkCP,EAAIO,oBACjB,oBAAzBP,EAAIQ,kBAAiCR,EAAIQ,oBA3JjCvwB,EA+J1BwwB,kBAAoB,SAAC1yB,GACgB,oBAAxBA,EAAE0yB,kBAAkC1yB,EAAE0yB,oBACH,oBAA9B1yB,EAAE2yB,wBAAwC3yB,EAAE2yB,0BACjB,oBAA3B3yB,EAAE4yB,qBAAqC5yB,EAAE4yB,uBACf,oBAA1B5yB,EAAE6yB,qBAAoC7yB,EAAE6yB,uBAnKhC3wB,EAuK1B4wB,iBAAmB,WAGjB,IAAoC,IAAhC5wB,EAAK8vB,uBACP9vB,EAAKowB,qBACA,CACL,IAAM3nC,EAAc8X,SAASC,eAAe,eACxB,OAAhB/X,GACFuX,EAAKwwB,kBAAkB/nC,KA/KHuX,EAoL1B6wB,kBAAoB,WAClB,IAAM1I,EAAiBnoB,EAAKvS,MAAM06B,eAElC,GAA8B,IAA1BA,EAAej1B,OACjB,OACE5E,EAAAC,EAAAC,cAAA,UAAQC,MAAO,EAAGT,IAAK,GACpB6D,GAAU,4BAA6BmO,EAAKvS,MAAMF,WAMzD,IADA,IAAMujC,EAAgB,GACb79B,EAAI,EAAGA,EAAIk1B,EAAej1B,OAAQD,IAAK,CAC9C,IAAMtB,EAAQw2B,EAAel1B,GAC7B69B,EAAc51B,KACZ5M,EAAAC,EAAAC,cAAA,UAAQC,MAAOkD,EAAMG,GAAI9D,IAAK2D,EAAMG,IACjCH,EAAMuD,OAIb,OAAO47B,GArMP9wB,EAAK6uB,gBAAkB7uB,EAAK6uB,gBAAgBpsB,KAArBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACvBA,EAAK+uB,qBAAuB/uB,EAAK+uB,qBAAqBtsB,KAA1BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC5BA,EAAKgvB,mBAAqBhvB,EAAKgvB,mBAAmBvsB,KAAxBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC1BA,EAAKivB,iBAAmBjvB,EAAKivB,iBAAiBxsB,KAAtBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAExBA,EAAKwvB,mBAAqBxvB,EAAKwvB,mBAAmB/sB,KAAxBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC1BA,EAAK2vB,eAAiB3vB,EAAK2vB,eAAeltB,KAApBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACtBA,EAAK6vB,aAAe7vB,EAAK6vB,aAAaptB,KAAlBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAEpBA,EAAKmvB,oBAAsBnvB,EAAKmvB,oBAAoB1sB,KAAzBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC3BA,EAAKovB,mBAAqBpvB,EAAKovB,mBAAmB3sB,KAAxBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAE1BA,EAAKqvB,4BAA8BrvB,EAAKqvB,4BAA4B5sB,KAAjChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAEnCA,EAAK6wB,kBAAoB7wB,EAAK6wB,kBAAkBpuB,KAAvBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAjBDA,wEAiNxB,IALA,IAAMzS,EAAWC,KAAKC,MAAMF,SACtBwjC,EAAevjC,KAAKC,MAAMgI,gBAAgBjI,KAAKC,MAAMsQ,QAAQlK,IAAM,GAEnEyhB,EAAa,GACb0b,EAAcn/B,GAAU,8BAA+BtE,GACpD0F,EAAI,EAAGA,GAAKzF,KAAKC,MAAM+H,WAAYvC,IAC1CqiB,EAAWpa,KACT5M,EAAAC,EAAAC,cAAA,UAAQC,MAAOwE,EAAGjF,IAAKiF,GACpB+9B,EAAY3gC,QAAQ,MAAOmB,EAAcyB,EAAG1F,MAOnD,IAFA,IAAMgoB,EAAkB,GAClB0b,EAAmBp/B,GAAU,mCAAoCtE,GAC9D0F,EAAI,EAAGA,GAAK89B,EAAc99B,IACjCsiB,EAAgBra,KACd5M,EAAAC,EAAAC,cAAA,UAAQC,MAAOwE,EAAGjF,IAAKiF,GACpBg+B,EAAiB5gC,QAAQ,MAAOmB,EAAcyB,EAAG1F,MAmBxD,IAdA,IAAM2jC,EAAc,CAClB5iC,EAAAC,EAAAC,cAAA,UAAQR,IAAK,IAAKS,MAAO,KACtBoD,GAAU,uBAAwBtE,IAErCe,EAAAC,EAAAC,cAAA,UAAQR,IAAK,IAAKS,MAAO,KACtBoD,GAAU,uBAAwBtE,IAErCe,EAAAC,EAAAC,cAAA,UAAQR,IAAK,IAAKS,MAAO,KACtBoD,GAAU,0BAA2BtE,KAIpC4jC,EAAgB,GAChBC,EAAiBv/B,GAAU,iCAAkCtE,GAC1D0F,EAAI,EAAGA,EAAIzF,KAAKC,MAAM4jC,kBAAkBn+B,OAAQD,IAAK,CAC5D,IAAMpD,EAASrC,KAAKC,MAAM4jC,kBAAkBp+B,GACtCjF,EAAMR,KAAKC,MAAMsQ,QAAQlK,IAAM,IAAMrG,KAAKC,MAAMsQ,QAAQ9G,SAAW,IAAMhE,EAC/Ek+B,EAAcj2B,KACZ5M,EAAAC,EAAAC,cAAA,UAAQC,MAAOoB,EAAQ7B,IAAKA,GACzBojC,EAAe/gC,QAAQ,WAAYgC,GAAexC,EAAQtC,MAIpC,IAAzB4jC,EAAcj+B,QAChBi+B,EAAcj2B,KAAK5M,EAAAC,EAAAC,cAAA,UAAQR,IAAI,QAAQ6D,GAAU,4BAA6BtE,KAKhF,IAFA,IAAM+jC,EAAiB,GACjB5N,EAAkB7xB,GAAU,kCAAmCtE,GAC5D0F,EAAI,EAAGA,GAAK,EAAGA,IACtBq+B,EAAep2B,KACb5M,EAAAC,EAAAC,cAAA,UAAQR,IAAKiF,EAAGxE,MAAOwE,GACpBywB,EAAgBrzB,QAAQ,MAAOmB,EAAcyB,EAAG1F,OAInB,IAAhCC,KAAKC,MAAMwI,kBACbq7B,EAAep2B,KACb5M,EAAAC,EAAAC,cAAA,UAAQR,IAAK,EAAGS,MAAO,GACpBi1B,EAAgBrzB,QAAQ,MAAOmB,EAAc,EAAGjE,MAKvD,IAAMi1B,EAA+C,OAA9Bh1B,KAAKC,MAAM+0B,oBAA0B/xB,EAAYjD,KAAKC,MAAM+0B,eAAe9L,WAElG,OACEpoB,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOtX,QACrB0C,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOrX,cACrByC,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACErW,GAAG,SACHC,aAAcrB,KAAKC,MAAMsQ,QAAQlK,IAAI6iB,WACrC5nB,SAAUtB,KAAKqhC,gBACf7/B,UAAS,iBAAAW,OAAmBuT,KAAOhX,WAElCopB,GAEHhnB,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACErW,GAAG,SACHC,aAAcrB,KAAKC,MAAMsQ,QAAQ9G,SAASyf,WAC1C5nB,SAAUtB,KAAKuhC,qBACf//B,UAAS,iBAAAW,OAAmBuT,KAAOhX,WAElCqpB,GAEHjnB,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACErW,GAAG,SACHC,aAAcrB,KAAKC,MAAMsQ,QAAQrD,KACjC5L,SAAUtB,KAAKyhC,iBACfjgC,UAAS,iBAAAW,OAAmBuT,KAAOhX,WAElCglC,GAEH5iC,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACEjX,IAAK,UAAYR,KAAKC,MAAMsQ,QAAQlO,OACpCjB,GAAG,SACHC,aAAcrB,KAAKC,MAAMsQ,QAAQlO,OACjCf,SAAUtB,KAAKwhC,mBACfhgC,UAAS,iBAAAW,OAAmBuT,KAAOhX,WAElCilC,GAEH7iC,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACExW,MAAOjB,KAAKC,MAAM2P,kBAAkBsZ,WACpC9nB,GAAG,SACHE,SAAUtB,KAAK2hC,oBACfngC,UAAS,iBAAAW,OAAmBuT,KAAOhX,WAElColC,GAEHhjC,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACExW,MAAO+zB,EACP5zB,GAAG,SACHE,SAAUtB,KAAK4hC,mBACfpgC,UAAS,iBAAAW,OAAmBuT,KAAOhX,WAElCsB,KAAKqjC,sBAIVviC,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOpX,eACrBwC,EAAAC,EAAAC,cAACygB,GAAA1gB,EAAD,KACED,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ2Q,QAAQ,kBAAkBD,QAASzR,KAAKC,MAAM8jC,gCACpDjjC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,kCAAkC6M,eAAe,sBAExErQ,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ2Q,QAAQ,oBAAoBD,QAASzR,KAAKojC,iBAAkB5hC,UAAWkU,KAAOnX,YACpFuC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,mCAAmC6M,eAAe,wBAG3ErQ,EAAAC,EAAAC,cAAA,UACEY,KAAK,SACLoe,aAAchgB,KAAKgiC,mBACnB/nB,YAAaja,KAAKqiC,aAClB7gC,UAAWkU,KAAOjX,QAElBqC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,yBAAyB6M,eAAe,aAE/DrQ,EAAAC,EAAAC,cAAA,UACEY,KAAK,SACLoe,aAAchgB,KAAKgiC,mBACnB/nB,YAAaja,KAAKmiC,eAClB3gC,UAAWkU,KAAOlX,UAElBsC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,2BAA2B6M,eAAe,wBA/V/CzQ,IAAMe,WA4XnBd,eArBS,SAACC,GACvB,MAAO,CACLoH,WAAYpH,EAAMwN,KAAKpG,WACvBC,gBAAiBrH,EAAMwN,KAAKnG,gBAC5BQ,iBAAkB7H,EAAMwN,KAAK3F,iBAC7B8H,QAAS3P,EAAM2P,QACfxQ,SAAUa,EAAMb,WAIO,SAAC2B,GAC1B,MAAO,CACL4/B,gBAAiB,SAACj7B,EAAaoD,EAAkBpH,EAAgB6K,GAAhD,OACfxL,EvBzXyB,SAAC2E,EAAaoD,EAAkBpH,EAAgB6K,GAC7E,MAAO,CACLtL,KAAM,oBACNyE,IAAKA,EACLoD,SAAUA,EACVpH,OAAQA,EACR6K,KAAMA,GuBmXKo0B,CAAgBj7B,EAAKoD,EAAUpH,EAAQ6K,KAClDW,gBAAiB,SAAC2C,GAAD,OAAqB9O,EvB9WX,SAAC8O,GAC9B,MAAO,CACL5O,KAAM,mBACN4O,QAASA,GuB2WsC3C,CAAgB2C,KAC/D1C,gBAAiB,SAAC4B,GAAD,OAAqBhO,EvBtWX,SAACgO,GAC9B,MAAO,CACL9N,KAAM,oBACN8N,QAASA,GuBmWsC5B,CAAgB4B,KAC/D0yB,SAAU,SAAC1yB,EAAiBxC,EAAYsD,EAAiBL,GAA/C,OACRzO,EvBzYkB,SAACgO,EAAiBxC,EAAY0C,EAA2BO,GAC/E,MAAO,CACLvO,KAAM,YACN8N,QAASA,EACTxC,KAAMA,EACN0C,kBAAmBA,EACnBO,QAASA,GuBmYEiyB,CAAS1yB,EAASxC,EAAMsD,EAASL,OAIjCxP,CAA6CygC,yBCnZtD4C,oLAGF,IAAIvoC,EAAaqF,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,4BACjC5I,EAAO,GAGX,GAAkC,OAA9BsE,KAAKC,MAAM+0B,qBAAyD/xB,IAA9BjD,KAAKC,MAAM+0B,eAA8B,CACjF,IAAMF,EAAM90B,KAAKC,MAAMoP,aAAazB,OAAO5N,KAAKC,MAAM+0B,gBAChD7wB,EAAQnE,KAAKC,MAAMoP,aAAatC,QAAQ+nB,GAC9Cr5B,EAAaqF,EAAAC,EAAAC,cAAA,YAAOmD,EAAMuD,MAE1B,IAAMu8B,EAA6B,GAEJ,kBAApB9/B,EAAM4iB,WAA8C,KAApB5iB,EAAM4iB,UAC/Ckd,EAAYv2B,KAAK,IAAMvJ,EAAM4iB,WAE7Bkd,EAAYv2B,KAAK,IAEfvJ,EAAMwF,IAAM,GACds6B,EAAYv2B,KAAK1J,EAAcG,EAAMwF,IAAK3J,KAAKC,MAAMF,WAEvDkkC,EAAYv2B,KAAKnJ,GAAkBJ,EAAMK,UAAWxE,KAAKC,MAAMF,WAC3DoE,EAAM+D,UAAUxC,OAAS,GAC3Bu+B,EAAYv2B,KAAKvJ,EAAM+D,UAAU0iB,KAAK,OAGxClvB,EAAOuoC,EAAYrZ,KAAK,UAG1B,OACE9pB,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOla,QACrBsF,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOja,YAAaA,GACpCqF,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOha,MAAOA,WAjCVgF,IAAMe,WA8CnBd,eAPS,SAACC,GACvB,MAAO,CACLyO,aAAczO,EAAMyO,aACpBtP,SAAUa,EAAMb,WAILY,CAAyBqjC,IC/BlCE,GAAmB,EAEnBC,eACJ,SAAAA,EAAYlkC,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAmkC,IACxB3xB,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAk5B,GAAAvxB,KAAA5S,KAAMC,KAUR0W,SAAW,WAAkB,IACnB1V,EAAUuR,EAAK5R,MAAfK,MACFoE,EAAWzC,OAAO3B,GAExB,OAAI8c,MAAM1Y,IAAaA,EAAW,GAAKA,EAAW,IACzC,QAEF,WAlBiBmN,EAqB1BsE,aAAe,SAACnV,GACd,IAAMV,EAAQU,EAAME,cAAcZ,MAClC,IAAK2f,oBAAS3f,KAAWe,EAASf,GAChC,MAAM,IAAIf,MAAJ,kDAAAiC,OAA4DlB,EAA5D,MAGRuR,EAAKW,SAAS,CAAElS,MAAOA,GAAS,WAE9B,GAAwB,UAApBuR,EAAKmE,WAAwB,CAE/B,IAAMzH,EAAe,GACrBA,EAAQsD,EAAKvS,MAAMmkC,WAAajhC,KAAKmG,MAAM1G,OAAO3B,GAASijC,IAC3D1xB,EAAKvS,MAAMokC,aAAan1B,OA9B5BsD,EAAKmE,SAAWnE,EAAKmE,SAAS1B,KAAdhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAChBA,EAAKsE,aAAetE,EAAKsE,aAAa7B,KAAlBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAEpBA,EAAK5R,MAAQ,CACXK,MAAOkC,KAAK0W,KAAKrH,EAAKvS,MAAMsQ,QAAQiC,EAAKvS,MAAMmkC,WAAaF,KAPtC1xB,wEAuCxB,IAAM0E,EAAyBlX,KAAK2W,WAEpC,OACE7V,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKwW,MAAN,KACEzW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAKuW,MAAN,KAAatX,KAAKC,MAAMmX,OACxBtW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAK0W,QAAN,CACE7V,KAAK,SACL0iC,QAAQ,SACRrb,IAAI,IACJzP,KAAK,IACLvY,MAAOjB,KAAKY,MAAMK,MAAMioB,WACxB5nB,SAAUtB,KAAK8W,aACfgB,QAAwB,YAAfZ,EACTa,UAA0B,UAAfb,EACX1V,UAA0B,YAAf0V,EAA2B,kBAAejU,YAtDrCvC,IAAMe,WAuEjBd,eAVS,SAACC,GAAD,MAAqC,CAC3D2P,QAAS3P,EAAM2P,UAGU,SAAC7O,GAC1B,MAAO,CACL2iC,aAAc,SAACn1B,GAAD,OAAoCxN,EzB9B7C,CACLE,KAAM,iBACNsN,QyB4BwEA,OAI7DvO,CAA6CwjC,yBCrEtDI,eACJ,SAAAA,EAAYtkC,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAukC,IACxB/xB,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAs5B,GAAA3xB,KAAA5S,KAAMC,KAOR8jC,+BAAiC,WAC/BvxB,EAAKW,SAAS,CACZqxB,0BAA2BhyB,EAAK5R,MAAM4jC,4BARxChyB,EAAKuxB,+BAAiCvxB,EAAKuxB,+BAA+B9uB,KAApChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACtCA,EAAK5R,MAAQ,CACX4jC,0BAA0B,GAJJhyB,wEAexB,IAAMiyB,EAAMnK,GAAgBt6B,KAAKC,MAAMs6B,gBAAiBv6B,KAAKC,MAAMsQ,SAE/Dm0B,EAAe,KAenB,OAbEA,GAD0C,IAAxC1kC,KAAKY,MAAM4jC,yBAEX1jC,EAAAC,EAAAC,cAAC2jC,GAAD,CACE/0B,kBAAmB60B,EAAI70B,kBACvB+qB,eAAgB8J,EAAI9J,eACpB3F,eAAgByP,EAAIzP,iBAKtBl0B,EAAAC,EAAAC,cAAC6xB,GAAD,CAAcxsB,IAAKrG,KAAKC,MAAMsQ,QAAQlK,IAAKoD,SAAUzJ,KAAKC,MAAMsQ,QAAQ9G,SAAUqnB,eAAe,IAKnGhwB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,CAAMiU,MAAO,CAAEuM,OAAQ,cACrBzgB,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAAA,OAAKgU,MAAO,CAAEyH,MAAO,UACnB3b,EAAAC,EAAAC,cAAC4jC,GAAD,CACExtB,MAAO/S,GAAU,sCAAuCrE,KAAKC,MAAMF,UACnEqkC,UAAU,2BAGdtjC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,8BACH6M,eAAe,0FAKvBrQ,EAAAC,EAAAC,cAAA,OAAKsD,GAAG,cAAc9C,UAAWkU,KAAOza,aACtC6F,EAAAC,EAAAC,cAAC6jC,GAAD,CACEj1B,kBAAmB60B,EAAI70B,kBACvB+qB,eAAgB8J,EAAI9J,eACpB3F,eAAgByP,EAAIzP,iBAGtBl0B,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOxa,uBACrB4F,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOva,mBACrB2F,EAAAC,EAAAC,cAAC8jC,GAAD,CACEl1B,kBAAmB60B,EAAI70B,kBACvB+qB,eAAgB8J,EAAI9J,eACpB3F,eAAgByP,EAAIzP,eACpBrnB,YAAa82B,EAAI92B,YACjBunB,sBAAuBuP,EAAIvP,yBAI/Bp0B,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOta,oBAAqBspC,IAG9C5jC,EAAAC,EAAAC,cAAC+jC,GAAD,CACEn1B,kBAAmB60B,EAAI70B,kBACvB+qB,eAAgB8J,EAAI9J,eACpB3F,eAAgByP,EAAIzP,eACpB6O,kBAAmB7jC,KAAKC,MAAM4jC,kBAC9BE,+BAAgC/jC,KAAK+jC,0CA7EvBrjC,IAAMe,WAoHjBd,eA/BS,SAACC,GAWvB,IAVA,IAAMyF,EAAMzF,EAAM2P,QAAQlK,IACpBoD,EAAW7I,EAAM2P,QAAQ9G,SACzBpH,EAASzB,EAAM2P,QAAQlO,OAEvB2iC,EAAoBpkC,EAAMyO,aAAatC,QAAQC,OACnD,SAAA7I,GAAK,OAAIA,EAAMkC,MAAQA,GAAOlC,EAAMsF,WAAaA,IAI7Cw7B,EAAyB,GACtBx/B,EAAI,EAAGA,EAAIu/B,EAAkBt/B,OAAQD,IAAK,CACjD,IAAMtB,EAAQ6gC,EAAkBv/B,IACO,IAAnCw/B,EAAQ/a,QAAQ/lB,EAAM9B,SACxB4iC,EAAQv3B,KAAKvJ,EAAM9B,QAGvB4iC,EAAQhnB,OAGR,IAAMsc,EAAkByK,EAAkBh4B,OAAO,SAAA7I,GAAK,OAAIA,EAAM9B,SAAWA,IAE3E,MAAO,CACL+L,KAAMxN,EAAMwN,KACZmC,QAAS3P,EAAM2P,QACfszB,kBAAmBoB,EACnB1K,gBAAiBA,EACjBx6B,SAAUa,EAAMb,WAILY,CAAyB4jC,ICvJzBW,oLAJX,OAAOpkC,EAAAC,EAAAC,cAACmkC,GAAD,aAFoBzkC,IAAMe,gCCyC/B2jC,8MACJC,WAAa,SAACn4B,GACZ,IAAM2nB,EAAU5nB,GAAuBC,GAGjCo4B,EAAiB9yB,EAAKvS,MAAMs6B,gBAAgBvtB,OAAO,SAAAsD,GACvD,OAAyB,IAAlBA,EAAEukB,GAAS,KAIpB,OAAOwF,GAAsBiL,EAAgBzQ,EAAS,mFAGxCzF,EAAgBrvB,GAC9B,OAAQqvB,GACN,IAAK,YACH,OAAO/qB,GAAU,mCAAoCtE,GACvD,IAAK,UACH,OAAOsE,GAAU,gCAAiCtE,GACpD,IAAK,WACH,OAAOsE,GAAU,6BAA8BtE,GACjD,IAAK,iBACH,MAAO,GACT,IAAK,YACH,OAAOsE,GAAU,mCAAoCtE,GACvD,IAAK,UACH,OAAOsE,GAAU,gCAAiCtE,GACpD,IAAK,WACH,OAAOsE,GAAU,6BAA8BtE,GACjD,IAAK,oBACH,MAAO,GACT,IAAK,eACH,OAAOsE,GAAU,sCAAuCtE,GAC1D,IAAK,aACH,OAAOsE,GAAU,gCAAiCtE,GACpD,IAAK,cACH,OAAOsE,GAAU,6BAA8BtE,GACjD,QAEE,MAAO,qCAKX,IAAMA,EAAWC,KAAKC,MAAMF,SAEtBwlC,EAAUvlC,KAAKqlC,WAAW,KAC1BG,EAAUxlC,KAAKqlC,WAAW,KAC1BI,EAAazlC,KAAKqlC,WAAW,KAE7BxT,EAA8B,IAAnB0T,EAAQ7/B,OACnBosB,EAA8B,IAAnB0T,EAAQ9/B,OACnBqsB,EAAoC,IAAtB0T,EAAW//B,OAEzBggC,EAAUviC,KAAK2I,IAAIy5B,EAAQ7/B,OAAQ8/B,EAAQ9/B,OAAQ+/B,EAAW//B,QAG9Di7B,EAAyB,GAC3B9O,IACF8O,EAAQjzB,KAAK,aACbizB,EAAQjzB,KAAK1N,KAAKC,MAAMyI,KAAO,UAAY,YACvC1I,KAAKC,MAAM0I,oBACbg4B,EAAQjzB,KAAK1N,KAAKC,MAAMyI,KAAO,WAAa,YAG5CopB,IACED,GACF8O,EAAQjzB,KAAK,kBAEfizB,EAAQjzB,KAAK,aACbizB,EAAQjzB,KAAK1N,KAAKC,MAAMyI,KAAO,UAAY,YACvC1I,KAAKC,MAAM0I,oBACbg4B,EAAQjzB,KAAK1N,KAAKC,MAAMyI,KAAO,WAAa,YAG5CqpB,KACEF,GAAYC,IACd6O,EAAQjzB,KAAK,qBAEfizB,EAAQjzB,KAAK,gBACbizB,EAAQjzB,KAAK1N,KAAKC,MAAMyI,KAAO,aAAe,eAC1C1I,KAAKC,MAAM0I,oBACbg4B,EAAQjzB,KAAK1N,KAAKC,MAAMyI,KAAO,cAAgB,eAMnD,IADA,IAAMshB,EAAO,GACJvkB,EAAI,EAAGA,EAAIigC,IAAWjgC,EAAG,CAGhC,IAFA,IAAMkgC,EAAU,GAEPvb,EAAI,EAAGA,EAAIuW,EAAQj7B,SAAU0kB,EAAG,CACvC,IAAMgF,EAASuR,EAAQvW,GACjB5pB,EAAc4uB,EAAS5oB,OAAOf,GAEhCmgC,EAAkB,GAClBpkC,OAAYyB,EAEhB,OAAQmsB,GACN,IAAK,YACH,GAAI3pB,EAAI8/B,EAAQ7/B,OAAQ,CACtB,IAAMvB,EAAQohC,EAAQ9/B,GACtBmgC,EAAU5hC,EAAcyB,EAAI,EAAG1F,GAAY,KAAOoE,EAAMuD,KAE1D,MAEF,IAAK,UACH,GAAIjC,EAAI8/B,EAAQ7/B,OAAQ,CACtB,IAAMvB,EAAQohC,EAAQ9/B,GACtBmgC,EAAU9iC,EAAcqB,EAAMkG,QAAQ,GAAItK,GAE5C,MAEF,IAAK,WACH,GAAI0F,EAAI8/B,EAAQ7/B,OAAQ,CACtB,IAAMvB,EAAQohC,EAAQ9/B,GACtBmgC,EAAU9iC,EAAcR,EAAO6B,EAAMkG,QAAQ,IAAKtK,GAEpD,MAEF,IAAK,iBACHyB,EAAYkU,KAAO7Z,YACnB,MACF,IAAK,YACH,GAAI4J,EAAI+/B,EAAQ9/B,OAAQ,CACtB,IAAMvB,EAAQqhC,EAAQ//B,GACtBmgC,EAAU5hC,EAAcyB,EAAI,EAAG1F,GAAY,KAAOoE,EAAMuD,KAE1D,MAEF,IAAK,UACH,GAAIjC,EAAI+/B,EAAQ9/B,OAAQ,CACtB,IAAMvB,EAAQqhC,EAAQ//B,GACtBmgC,EAAU9iC,EAAcqB,EAAMmG,QAAQ,GAAIvK,GAE5C,MAEF,IAAK,WACH,GAAI0F,EAAI+/B,EAAQ9/B,OAAQ,CACtB,IAAMvB,EAAQqhC,EAAQ//B,GACtBmgC,EAAU9iC,EAAcR,EAAO6B,EAAMmG,QAAQ,IAAKvK,GAEpD,MAEF,IAAK,oBACHyB,EAAYkU,KAAO7Z,YACnB,MACF,IAAK,eACH,GAAI4J,EAAIggC,EAAW//B,OAAQ,CACzB,IAAMvB,EAAQshC,EAAWhgC,GACzBmgC,EAAU5hC,EAAcyB,EAAI,EAAG1F,GAAY,KAAOoE,EAAMuD,KAE1D,MAEF,IAAK,aACH,GAAIjC,EAAIggC,EAAW//B,OAAQ,CACzB,IAAMvB,EAAQshC,EAAWhgC,GACzBmgC,EAAU9iC,EAAcqB,EAAMoG,WAAW,GAAIxK,GAE/C,MAEF,IAAK,cACH,GAAI0F,EAAIggC,EAAW//B,OAAQ,CACzB,IAAMvB,EAAQshC,EAAWhgC,GACzBmgC,EAAU9iC,EAAcR,EAAO6B,EAAMoG,WAAW,IAAKxK,IAM3D4lC,EAAQj4B,KACN5M,EAAAC,EAAAC,cAAA,MAAIR,IAAKA,EAAKgB,UAAWA,GACtBokC,IAKP5b,EAAKtc,KAAK5M,EAAAC,EAAAC,cAAA,MAAIR,IAAKiF,GAAIkgC,IAKzB,IADA,IAAMnqC,EAAS,GACNiK,EAAI,EAAGA,EAAIk7B,EAAQj7B,SAAUD,EAAG,CACvC,IAAM2pB,EAASuR,EAAQl7B,GACjBuM,EAAQhS,KAAK6lC,gBAAgBzW,EAAQpvB,KAAKC,MAAMF,UACtDvE,EAAOkS,KAAK5M,EAAAC,EAAAC,cAAA,MAAIR,IAAK4uB,GAASpd,IAGhC,OACElR,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,KACED,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,2BACH6M,eAAe,gCACfC,OAAQ,CAAE/O,OAAQwC,GAAe7E,KAAKC,MAAMoC,OAAQrC,KAAKC,MAAMF,cAGnEe,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAACmgB,GAAApgB,EAAD,CAAOqgB,SAAO,EAACE,OAAK,EAACD,KAAK,KAAKrM,MAAO,CAAEuM,OAAQ,QAC9CzgB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAKxF,IAEPsF,EAAAC,EAAAC,cAAA,aAAQgpB,aA1MStpB,IAAMe,WA0NpBd,eARS,SAACC,GACvB,MAAO,CACL8H,KAAM9H,EAAMwN,KAAK1F,KACjBC,mBAAoB/H,EAAMwN,KAAKzF,mBAC/B5I,SAAUa,EAAMb,WAILY,CAAyBykC,ICxOlCU,eACJ,SAAAA,EAAY7lC,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAA8lC,IACxBtzB,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAA66B,GAAAlzB,KAAA5S,KAAMC,KAYR8lC,UAAY,SAACpkC,GACX,IAAM0E,EAAMzD,OAAOjB,EAAME,cAAcZ,OACnCuR,EAAK5R,MAAMyF,MAAQA,IAEjBmM,EAAK5R,MAAM6I,SAAW+I,EAAKvS,MAAMmO,KAAKnG,gBAAgB5B,EAAM,GAC9DmM,EAAKW,SAAS,CAAE9M,IAAKA,EAAKoD,SAAU,IAEpC+I,EAAKW,SAAS,CAAE9M,IAAKA,MApBDmM,EAyB1BwzB,eAAiB,SAACrkC,GAChB,IAAM8H,EAAW7G,OAAOjB,EAAME,cAAcZ,OACxCuR,EAAK5R,MAAM6I,WAAaA,GAC1B+I,EAAKW,SAAS,CAAE1J,SAAUA,KA5BJ+I,EAgC1ByzB,YAAc,WACZrnC,OAAOsnC,SA9BP1zB,EAAKuzB,UAAYvzB,EAAKuzB,UAAU9wB,KAAfhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACjBA,EAAKwzB,eAAiBxzB,EAAKwzB,eAAe/wB,KAApBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACtBA,EAAKyzB,YAAczzB,EAAKyzB,YAAYhxB,KAAjBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAEnBA,EAAK5R,MAAQ,CACXyF,IAAK,EACLoD,SAAU,GATY+I,wEA2CxB,IAPO,IAAA4M,EAAApf,KACDD,EAAWC,KAAKC,MAAMF,SACtBomC,EAAgB,CAAE1pB,MAAO,QAAStK,YAAa,QAG/C2V,EAAa,GACb0b,EAAcn/B,GAAU,8BAA+BtE,GACpD0F,EAAI,EAAGA,GAAKzF,KAAKC,MAAMmO,KAAKpG,WAAYvC,IAC/CqiB,EAAWpa,KACT5M,EAAAC,EAAAC,cAAA,UAAQC,MAAOwE,EAAGjF,IAAKiF,GACpB+9B,EAAY3gC,QAAQ,MAAOmB,EAAcyB,EAAG1F,MASnD,IAHA,IAAMgoB,EAAkB,GAClB0b,EAAmBp/B,GAAU,mCAAoCtE,GACjEwjC,EAAevjC,KAAKC,MAAMmO,KAAKnG,gBAAgBjI,KAAKY,MAAMyF,IAAM,GAC7DZ,EAAI,EAAGA,GAAK89B,EAAc99B,IACjCsiB,EAAgBra,KACd5M,EAAAC,EAAAC,cAAA,UAAQC,MAAOwE,EAAGjF,IAAKiF,GACpBg+B,EAAiB5gC,QAAQ,MAAOmB,EAAcyB,EAAG1F,MAYxD,IANA,IAAMqmC,EAAepmC,KAAKC,MAAM8M,QAAQC,OAAO,SAAAsD,GAC7C,OAAOA,EAAEjK,MAAQ+Y,EAAKxe,MAAMyF,KAAOiK,EAAE7G,WAAa2V,EAAKxe,MAAM6I,WAIzD48B,EAAyB,GACtB5gC,EAAI,EAAGA,EAAI2gC,EAAa1gC,OAAQD,IAAK,CAC5C,IAAMtB,EAAQiiC,EAAa3gC,IACiB,IAAxC4gC,EAAanc,QAAQ/lB,EAAM9B,SAC7BgkC,EAAa34B,KAAKvJ,EAAM9B,QAG5BgkC,EAAapoB,OAIb,IADA,IAAMqoB,EAAe,GA3CdC,EAAA,SA4CE9gC,GACP,IAAMpD,EAASgkC,EAAa5gC,GACtB80B,EAAkB6L,EAAap5B,OAAO,SAAAsD,GAAC,OAAIA,EAAEjO,SAAWA,IACxDiC,EAAU8a,EAAKxe,MAAMyF,IAAM,IAAM+Y,EAAKxe,MAAM6I,SAAW,IAAMpH,EACnEikC,EAAa54B,KAAK5M,EAAAC,EAAAC,cAACwlC,GAAD,CAAgBhmC,IAAK8D,EAAIjC,OAAQA,EAAQk4B,gBAAiBA,MAJrE90B,EAAI,EAAGA,EAAI4gC,EAAa3gC,OAAQD,IAAK8gC,EAArC9gC,GA0BT,OACE3E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,CAAMiU,MAAO,CAAE1C,aAAc,SAC3BxR,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,CAAW0D,MAAO,CAAEyB,QAAS,SAC3B3V,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEM,aAAcrB,KAAKY,MAAMyF,IACzBjF,GAAG,SACHE,SAAUtB,KAAK+lC,UACf/wB,MAAOmxB,EACP3kC,UAAU,iBAETsmB,GAGHhnB,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEM,aAAcrB,KAAKY,MAAM6I,SAASyf,WAClC9nB,GAAG,SACHE,SAAUtB,KAAKgmC,eACfhxB,MAAOmxB,EACP3kC,UAAU,iBAETumB,GAGHjnB,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ2Q,QAAQ,OAAOD,QAASzR,KAAKimC,aACnCnlC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,4BAA4B6M,eAAe,kBAKrEm1B,UAzIqB5lC,IAAMe,WAuJrBd,eARS,SAACC,GACvB,MAAO,CACLwN,KAAMxN,EAAMwN,KACZrB,QAASnM,EAAMyO,aAAatC,QAC5BhN,SAAUa,EAAMb,WAILY,CAAyBmlC,ICtKzBW,oLARX,OACE3lC,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOvX,aACrB2C,EAAAC,EAAAC,cAAC0lC,GAAD,cAJ2BhmC,IAAMe,gCCwCnCs7B,GAAkB,SAAC34B,EAAUnE,GACjC,OAAQmE,GACN,IAAK,IACH,OAAOnE,EAAMkI,mBACf,IAAK,IACH,OAAOlI,EAAMmI,qBACf,IAAK,KACH,OAAOnI,EAAMoI,kBACf,QAEE,OAAOpI,EAAMkI,qBAIbw+B,8MACJC,eAAiB,SAACziC,EAAcy3B,EAAoBp7B,GAElD,IAAK4M,GAAejJ,GAAQ,OAAO,KAInC,IAAM0yB,EAAUhqB,GAAqB1I,EAAOy3B,EAASj6B,OACrD,GAAgB,IAAZk1B,EAAe,OAAO,KAE1B,IAAMnuB,EAAO8J,EAAKvS,MAAMyI,KAClB3I,EAAWyS,EAAKvS,MAAMF,SAGtB8mC,EACQ,IAAZhQ,EACIxyB,GAAU,8BAA+BtE,GACzCmE,EAAoB1D,EAAM,EAAG2D,EAAOqO,EAAKvS,MAAMF,UAE/C+D,EAAiBm1B,GAAUzmB,EAAKvS,MAAMqI,QAASnE,EAAOy3B,EAASj6B,MAAOk1B,EAASnuB,GAEjFo+B,EAAY,GACA,IAAZjQ,GAA4B,IAAX/yB,EACnBgjC,EAAYziC,GAAU,+BAAgCtE,GACjC,IAAZ82B,GAA4B,IAAX/yB,IAC1BgjC,EAAYjjC,EAAcC,EAAQ/D,IAGpC,IAAMkJ,EAAU8zB,GAAgB54B,EAAMC,IAAKoO,EAAKvS,OAC1CiF,EAAQwD,EACVM,GAAkBC,EAAS9E,EAAM+E,aAAcnJ,GAC/CwJ,GAAqBN,EAAS9E,EAAM+E,cAClCo3B,EAAK53B,EAAOvE,EAAM+E,aAAe5G,EAAO6B,EAAM+E,cAE9CmB,EAAUuB,GAAgBzH,GAC1B4iC,EAAQr+B,EAAO2B,EAAU/H,EAAO+H,GAEhCC,EAAUyB,GAAgB5H,GAC1B6iC,EAAQt+B,EAAO4B,EAAUhI,EAAOgI,GAEhCC,EAAa0B,GAAmB9H,GAChC8iC,EAAWv+B,EAAO6B,EAAajI,EAAOiI,GAExC28B,EAAiB,GAGjBA,EAFAx+B,GACoC,IAAlC8J,EAAKvS,MAAM0I,mBACItE,GAAU,gCAAiCtE,GAE3CsE,GAAU,4BAA6BtE,IAGpB,IAAlCyS,EAAKvS,MAAM0I,mBACItE,GAAU,gCAAiCtE,GAE3CsE,GAAU,6BAA8BtE,GAI7D,IAAIonC,EAA8B,KAOlC,OANItQ,EAAU,IACZsQ,EAAeD,EACZrkC,QAAQ,OAAQC,EAAc+zB,EAAS92B,IACvC8C,QAAQ,QAASC,EAAcR,EAAOu0B,GAAU92B,KAInDe,EAAAC,EAAAC,cAAA,MAAIR,IAAKA,GACPM,EAAAC,EAAAC,cAAA,UAAK6lC,GACL/lC,EAAAC,EAAAC,cAAA,UAAKmD,EAAMuD,MACX5G,EAAAC,EAAAC,cAAA,UAA4B,IAAvBmD,EAAM+E,aAAqB,KAAOhE,GACvCpE,EAAAC,EAAAC,cAAA,UAA4B,IAAvBmD,EAAM+E,aAAqB,KAAOpG,EAAcw9B,EAAIvgC,IACzDe,EAAAC,EAAAC,cAAA,UAAmB,IAAdmD,EAAMwF,IAAY,KAAOxF,EAAMwF,KACpC7I,EAAAC,EAAAC,cAAA,UAAiB,IAAZqJ,EAAgB,GAAKvH,EAAcikC,EAAOhnC,IAC/Ce,EAAAC,EAAAC,cAAA,UAAiB,IAAZsJ,EAAgB,GAAKxH,EAAckkC,EAAOjnC,IAC/Ce,EAAAC,EAAAC,cAAA,UAAoB,IAAfuJ,EAAmB,GAAKzH,EAAcmkC,EAAUlnC,IACrDe,EAAAC,EAAAC,cAAA,UAAKmmC,GACLrmC,EAAAC,EAAAC,cAAA,UAAK8lC,OAKXM,cAAgB,SAAChjC,EAAUrE,GACzB,OAAQqE,GACN,IAAK,IACH,OAAOC,GAAU,eAAgBtE,GACnC,IAAK,IACH,OAAOsE,GAAU,iBAAkBtE,GACrC,IAAK,KACH,OAAOsE,GAAU,cAAetE,GAClC,QAEE,MAAO,OAIbsnC,sBAAwB,SAACzJ,EAA0Bp9B,GAOjD,IAPqF,IAC7Eo7B,EAA6BgC,EAA7BhC,SAAUjB,EAAmBiD,EAAnBjD,eACZ56B,EAAWyS,EAAKvS,MAAMF,SACtBqE,EAAcoO,EAAK40B,cAAcxL,EAASx3B,IAAKrE,GAG/CiqB,EAAO,GACJvkB,EAAI,EAAGA,EAAIk1B,EAAej1B,OAAQD,IAAK,CAC9C,IAAMilB,EAAMlY,EAAKo0B,eAAejM,EAAel1B,GAAIm2B,EAAUn2B,GACjD,OAARilB,GACFV,EAAKtc,KAAKgd,GAKd,GAAoB,IAAhBV,EAAKtkB,OACP,OAAO,KAGT,IAAI4hC,EAAiB/iC,GAAkBq3B,EAASp3B,UAAWzE,GACvDyS,EAAKvS,MAAMuI,yBACb8+B,EAASjjC,GAAU,iCAAkCtE,IAGvD,IAAMwnC,EAAQ/0B,EAAKvS,MAAMyI,KACrBrE,GAAU,2BAA4BtE,GACtCsE,GAAU,4BAA6BtE,GAGvCmF,EAAQD,GAAuB22B,EAAS0B,eAAgBv9B,GAC5B,KAA5B67B,EAAS0B,gBAA0B9qB,EAAKvS,MAAMyI,OAChDxD,EAAQiE,GAAeyyB,EAAS0B,iBAGlC,IACM9f,EADWnZ,GAAU,4BAA6BtE,GAErD8C,QAAQ,QAASuB,GACjBvB,QAAQ,gBAAiBqC,GACzBrC,QAAQ,gBAA6C,KAA5B+4B,EAAS0B,eAAwBiK,EAAQ,IAClE1kC,QAAQ,cAAeykC,GACvBzkC,QAAQ,aAAc+4B,EAASpe,UAC/B3a,QAAQ,UAAW8B,GAAci3B,EAASj6B,MAAO5B,IAEpD,OACEe,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,CAAMP,IAAKA,EAAKwU,MAAO,CAAEwyB,UAAW,SAClC1mC,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KAAcyM,GACd1c,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAACmgB,GAAApgB,EAAD,CAAOugB,OAAK,EAACD,KAAK,MAChBvgB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,uBAAwBtE,IACvCe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,wBAAyBtE,IACxCe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,6BAA8BtE,IAC7Ce,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,4BAA6BtE,IAC5Ce,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,qBAAsBtE,IACrCe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,mCAAoCtE,IACnDe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,mCAAoCtE,IACnDe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,sCAAuCtE,IACtDe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,4BAA6BtE,IAC5Ce,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,6BAA8BtE,MAGjDe,EAAAC,EAAAC,cAAA,aAAQgpB,+EAiBhB,IATA,IAAM4T,EAAUsB,GACdl/B,KAAKC,MAAM8M,QACX/M,KAAKC,MAAMkI,mBACXnI,KAAKC,MAAMmI,qBACXpI,KAAKC,MAAMoI,kBACXrI,KAAKC,MAAMuI,wBAGPi/B,EAAgB,GACbhiC,EAAI,EAAGA,EAAIm4B,EAAQl4B,OAAQD,IAAK,CACvC,IAAMiiC,EAAQ1nC,KAAKqnC,sBAAsBzJ,EAAQn4B,GAAIA,GACvC,OAAViiC,GACFD,EAAc/5B,KAAKg6B,GAIvB,OAAO5mC,EAAAC,EAAAC,cAAA,WAAMymC,UArLQ/mC,IAAMe,WA+MhBd,eAtBS,SAACC,EAAoByd,GAC3C,IAAMhY,EAAMzD,OAAOyb,EAAShY,KACxB0G,EAAUnM,EAAMyO,aAAatC,QAKjC,OAJI1G,EAAM,IACR0G,EAAUA,EAAQC,OAAO,SAAAsD,GAAC,OAAIA,EAAEjK,MAAQA,KAGnC,CACLqC,KAAM9H,EAAMwN,KAAK1F,KACjBC,mBAAoB/H,EAAMwN,KAAKzF,mBAC/B0I,SAAUzQ,EAAMwN,KAAK1G,KACrBY,QAAS1H,EAAMwN,KAAK9F,QACpBE,uBAAwB5H,EAAMwN,KAAK5F,uBACnCR,WAAYpH,EAAMwN,KAAKpG,WACvBG,mBAAoBvH,EAAMwN,KAAKjG,mBAC/BC,qBAAsBxH,EAAMwN,KAAKhG,qBACjCC,kBAAmBzH,EAAMwN,KAAK/F,kBAC9BtI,SAAUa,EAAMb,SAChBgN,QAASA,IAIEpM,CAAyBgmC,IC9OlChL,GAAgB,SAACC,GACrB,OAAOznB,KAAKO,UAAUknB,IAElBC,GAAgB,SAACr7B,GACrB,OAAO2T,KAAKC,MAAM5T,IAKdmnC,GAA+B,SACnC56B,EACA6uB,EACAtzB,EACAC,EACAG,EACAkC,GAIA,IADA,IAAMg9B,EAAW,IAAIxK,IACZ33B,EAAI,EAAGA,EAAIsH,EAAQrH,OAAQD,IAClCmiC,EAASjK,IAAI5wB,EAAQtH,GAAIA,GAM3B,IADA,IAAMoiC,EAAiB,IAAI5qB,MAAMlQ,EAAQrH,QAChCD,EAAI,EAAGA,EAAIsH,EAAQrH,OAAQD,IAAK,CACvC,IAAMtB,EAAQ4I,EAAQtH,GAChBoxB,EAAUhqB,GAAqB1I,EAAOy3B,EAASj6B,OAErDkmC,EAAepiC,GAAKm0B,GAAqBrxB,EAAiBqC,EAAUtC,EAASnE,EAAOy3B,EAASj6B,MAAOk1B,EAASnuB,GAI/G,IAAMuzB,EAAgBlvB,EAAQ0B,QAsB9B,OAnBAwtB,EAAche,KAAK,SAACld,EAAGmd,GACrB,IAAM4pB,EAASF,EAASlK,IAAI38B,GACtBgnC,EAASH,EAASlK,IAAIxf,GAG5B,QAAejb,IAAX6kC,QAAmC7kC,IAAX8kC,EAAsB,OAAO,EAGzD,IAAMC,EAAUH,EAAeC,GACzBG,EAAUJ,EAAeE,GAC/B,OAAIC,IAAYC,EAAgBA,EAAUD,EAGtCjnC,EAAEmI,eAAiBgV,EAAEhV,aAAqBnI,EAAEmI,aAAegV,EAAEhV,aAG1D,IAGF+yB,GAIHS,GAAoB,SAACC,GACzB,MAAO,CAAC,MAAO,KAAM,KAAM,KAAM,IAAK,IAAK,KAAKzS,QAAQyS,IAIpDC,GAAwB,SAACC,GAE7B,MAAO,CAAC,OAAQ,UAAW,QAAS,aAAc,aAAa3S,QAAQ2S,IAInEC,GAAkB,SAAC14B,GACvB,OAAQA,GACN,IAAK,IACH,OAAO,EACT,IAAK,IACH,OAAO,EACT,IAAK,KACH,OAAO,EACT,QAEE,OAAO,IAgCA8jC,GAAiB,SAC5Bn7B,EACAzE,EACAC,EACAC,EACAE,EACAkC,GAMA,IADA,IAAMuyB,EAAc,IAAIC,IACf33B,EAAI,EAAGA,EAAIsH,EAAQrH,OAAQD,IAAK,CACvC,IAAM6K,EAAIvD,EAAQtH,GAGZrB,EAAMkM,EAAElM,IACVI,EAAuB8L,EAAE9L,UAGzBgE,GAAwC,YAAdhE,IAC5BA,EAAY,SAId,IAAK,IAAIg5B,EAAQ,EAAGA,EAAQltB,EAAEzG,OAAOnE,OAAQ83B,IAAS,CACpD,IAAM77B,EAAQ2O,EAAEzG,OAAO2zB,GAEjBh9B,EAAMm7B,GADK,CAAEv3B,MAAKzC,QAAO6C,cAGzBi5B,EAAaN,EAAYO,IAAIl9B,QACpByC,IAAfw6B,EAA2BN,EAAYQ,IAAIn9B,EAAK,CAAC8P,IAAMmtB,EAAW/vB,KAAK4C,IAK3E,IAAMstB,EAAU,GA7BiBC,GAAA,EAAAC,GAAA,EAAAC,OAAA96B,EAAA,IA8BjC,QAAA+6B,EAAAC,EAAgCd,EAAhCe,OAAAC,cAAAN,GAAAG,EAAAC,EAAAhJ,QAAAmJ,MAAAP,GAAA,EAA6C,KAAAQ,EAAAL,EAAA/8B,MAAAif,EAAAjV,OAAAC,GAAA,EAAAD,CAAAozB,EAAA,GAAjC79B,EAAiC0f,EAAA,GAA5Bud,EAA4Bvd,EAAA,GACrC0b,EAAWC,GAAcr7B,GACzBm6B,EAAiBgN,GAA6BlK,EAAY7B,EAAUtzB,EAASC,EAAiBG,EAAMkC,GAC1GgzB,EAAQlwB,KAAK,CAAEkuB,WAAUjB,oBAjCM,MAAArmB,GAAAwpB,GAAA,EAAAC,EAAAzpB,EAAA,YAAAupB,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAqCjC,OAtEuC,SAACH,GACxCA,EAAQ3f,KAAK,SAACld,EAAGmd,GACf,IAAMqgB,EAAOx9B,EAAE66B,SACT4C,EAAOtgB,EAAE0d,SAGT6C,EAAO3B,GAAgByB,EAAKn6B,KAC5Bs6B,EAAO5B,GAAgB0B,EAAKp6B,KAClC,GAAIq6B,IAASC,EAAM,OAAOD,EAAOC,EAGjC,IAAMC,EAASjC,GAAkB6B,EAAK58B,OAChCi9B,EAASlC,GAAkB8B,EAAK78B,OACtC,GAAIg9B,IAAWC,EAAQ,OAAOD,EAASC,EAGvC,IAAMC,EAAajC,GAAsB2B,EAAK/5B,WACxCs6B,EAAalC,GAAsB4B,EAAKh6B,WAC9C,OAAIq6B,IAAeC,EAAmBD,EAAaC,EAE5C,IAiDTqJ,CAA0BvK,GACnBA,GCtIHb,GAAkB,SAAC34B,EAAUnE,GACjC,OAAQmE,GACN,IAAK,IACH,OAAOnE,EAAMkI,mBACf,IAAK,IACH,OAAOlI,EAAMmI,qBACf,IAAK,KACH,OAAOnI,EAAMoI,kBACf,QAEE,OAAOpI,EAAMkI,qBAIbigC,8MACJxB,eAAiB,SAACziC,EAAcy3B,EAA0Bp7B,GAExD,IAAK4M,GAAejJ,GAAQ,OAAO,KAInC,IAAM0yB,EAAUhqB,GAAqB1I,EAAOy3B,EAASj6B,OACrD,GAAgB,IAAZk1B,EAAe,OAAO,KAE1B,IAAMnuB,EAAO8J,EAAKvS,MAAMyI,KAClB3I,EAAWyS,EAAKvS,MAAMF,SAGtBsoC,EACQ,IAAZxR,EACIxyB,GAAU,8BAA+BtE,GACzCmE,EAAoB1D,EAAM,EAAG2D,EAAOpE,GAEpC+D,EAAiB81B,GACrBpnB,EAAKvS,MAAMsI,gBACXiK,EAAKvS,MAAM2K,SACX4H,EAAKvS,MAAMqI,QACXnE,EACAy3B,EAASj6B,MACTk1B,EACAnuB,GAGEo+B,EAAY,GACA,IAAZjQ,GAA4B,IAAX/yB,EACnBgjC,EAAYziC,GAAU,+BAAgCtE,GACjC,IAAZ82B,GAA4B,IAAX/yB,IAC1BgjC,EAAYjjC,EAAcC,EAAQ/D,IAGpC,IAAMuoC,EAAgBnkC,EAAM+D,UAAUxC,OAAS,EAAIvB,EAAM+D,UAAU,GAAK,GAClEqgC,EAAepkC,EAAM+D,UAAUxC,OAE/BuD,EAAU8zB,GAAgB54B,EAAMC,IAAKoO,EAAKvS,OAC1CiF,EAAQwD,EACVM,GAAkBC,EAAS9E,EAAM+E,aAAcnJ,GAC/CwJ,GAAqBN,EAAS9E,EAAM+E,cAClCo3B,EAAK53B,EAAOvE,EAAM+E,aAAe5G,EAAO6B,EAAM+E,cAE9CmB,EAAUuB,GAAgBzH,GAC1B4iC,EAAQr+B,EAAO2B,EAAU/H,EAAO+H,GAEhCC,EAAUyB,GAAgB5H,GAC1B6iC,EAAQt+B,EAAO4B,EAAUhI,EAAOgI,GAEhCC,EAAa0B,GAAmB9H,GAChC8iC,EAAWv+B,EAAO6B,EAAajI,EAAOiI,GAEtCi+B,EAAQ9/B,EAAOmuB,EAAUv0B,EAAOu0B,GAEtC,OACE/1B,EAAAC,EAAAC,cAAA,MAAIR,IAAKA,GACPM,EAAAC,EAAAC,cAAA,UAAKqnC,GACLvnC,EAAAC,EAAAC,cAAA,UAAKmD,EAAMuD,MACX5G,EAAAC,EAAAC,cAAA,UAAK+D,GAAYZ,EAAMC,IAAKrE,IAC5Be,EAAAC,EAAAC,cAAA,UACGsnC,EADH,IACmBC,EAAe,EAAI,MAAQA,EAAe,GAAK,IAAM,IAExEznC,EAAAC,EAAAC,cAAA,UAAKuD,GAAkBJ,EAAMK,UAAWzE,IACxCe,EAAAC,EAAAC,cAAA,UAA4B,IAAvBmD,EAAM+E,aAAqB,KAAOhE,GACvCpE,EAAAC,EAAAC,cAAA,UAA4B,IAAvBmD,EAAM+E,aAAqB,KAAOpG,EAAcw9B,EAAIvgC,IACzDe,EAAAC,EAAAC,cAAA,UAAmB,IAAdmD,EAAMwF,IAAY,KAAO3F,EAAcG,EAAMwF,IAAK5J,IACvDe,EAAAC,EAAAC,cAAA,UAAiB,IAAZqJ,EAAgB,GAAKvH,EAAcikC,EAAOhnC,IAC/Ce,EAAAC,EAAAC,cAAA,UAAiB,IAAZsJ,EAAgB,GAAKxH,EAAckkC,EAAOjnC,IAC/Ce,EAAAC,EAAAC,cAAA,UAAoB,IAAfuJ,EAAmB,GAAKzH,EAAcmkC,EAAUlnC,IACrDe,EAAAC,EAAAC,cAAA,UAAiB,IAAZ61B,EAAgB,GAAK/zB,EAAc0lC,EAAOzoC,IAC/Ce,EAAAC,EAAAC,cAAA,UAAK8lC,OAKXM,cAAgB,SAAChjC,EAAUrE,GACzB,OAAQqE,GACN,IAAK,IACH,OAAOC,GAAU,eAAgBtE,GACnC,IAAK,IACH,OAAOsE,GAAU,iBAAkBtE,GACrC,IAAK,KACH,OAAOsE,GAAU,cAAetE,GAClC,QAEE,MAAO,OAIbsnC,sBAAwB,SAACzJ,EAAgCp9B,GAOvD,IAP2F,IACnFo7B,EAA6BgC,EAA7BhC,SAAUjB,EAAmBiD,EAAnBjD,eACZ56B,EAAWyS,EAAKvS,MAAMF,SACtBqE,EAAcoO,EAAK40B,cAAcxL,EAASx3B,IAAKrE,GAG/CiqB,EAAO,GACJvkB,EAAI,EAAGA,EAAIk1B,EAAej1B,OAAQD,IAAK,CAC9C,IAAMilB,EAAMlY,EAAKo0B,eAAejM,EAAel1B,GAAIm2B,EAAUn2B,GACjD,OAARilB,GACFV,EAAKtc,KAAKgd,GAKd,GAAoB,IAAhBV,EAAKtkB,OACP,OAAO,KAGT,IAAI4hC,EAAiB/iC,GAAkBq3B,EAASp3B,UAAWzE,GACvDyS,EAAKvS,MAAMuI,yBACb8+B,EAASjjC,GAAU,iCAAkCtE,IAGvD,IACM0oC,EADWpkC,GAAU,4BAA6BtE,GAErD8C,QAAQ,QAASuB,GACjBvB,QAAQ,cAAeykC,GACvBzkC,QAAQ,UAAW8B,GAAci3B,EAASj6B,MAAO5B,IAEpD,OACEe,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,CAAMP,IAAKA,EAAKwU,MAAO,CAAEwyB,UAAW,SAClC1mC,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KAAc03B,GACd3nC,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAACmgB,GAAApgB,EAAD,CAAOqgB,SAAO,EAACE,OAAK,EAACD,KAAK,MACxBvgB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,sBAAuBtE,IACtCe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,wBAAyBtE,IACxCe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,qBAAsBtE,IACrCe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,0BAA2BtE,IAC1Ce,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,2BAA4BtE,IAC3Ce,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,6BAA8BtE,IAC7Ce,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,4BAA6BtE,IAC5Ce,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,qBAAsBtE,IACrCe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,mCAAoCtE,IACnDe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,mCAAoCtE,IACnDe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,sCAAuCtE,IACtDe,EAAAC,EAAAC,cAAA,UAAKqD,GAAU,4BAA6BtE,IAC5Ce,EAAAC,EAAAC,cAAA,UACkC,SAA/BwR,EAAKvS,MAAMsI,gBACRlE,GAAU,6BAA8BtE,GACxCsE,GAAU,4BAA6BtE,MAIjDe,EAAAC,EAAAC,cAAA,aAAQgpB,+EAOT,IAAA5K,EAAApf,KACH+M,EAAU/M,KAAKC,MAAM8M,QAGY,eAAjC/M,KAAKC,MAAMyoC,oBACb37B,EAAUA,EAAQC,OAAO,SAAAsD,GAEvB,OAAQ8O,EAAKnf,MAAMyoC,mBACjB,IAAK,aACH,MACF,IAAK,oBAGH,GAAIp4B,EAAE3G,KAAO,GACX,OAAO,EAET,MACF,IAAK,oBAGH,GAAI2G,EAAE3G,KAAO,GACX,OAAO,EAET,MACF,QACiByV,EAAKnf,MAAMyoC,kBAK9B,OAAQtpB,EAAKnf,MAAMsI,iBACjB,IAAK,OACH,OAAO,EACT,IAAK,kBACH,OAAkC,IAA3BmvB,GAAgBpnB,EAAE3G,KAC3B,QAEE,OADeyV,EAAKnf,MAAMsI,iBACnB,MAef,IAVA,IAAMq1B,EAAUsK,GACdn7B,EACA/M,KAAKC,MAAMqI,QACXtI,KAAKC,MAAMsI,gBACXvI,KAAKC,MAAMuI,uBACXxI,KAAKC,MAAMyI,KACX1I,KAAKC,MAAM2K,UAGP68B,EAAgB,GACbhiC,EAAI,EAAGA,EAAIm4B,EAAQl4B,OAAQD,IAAK,CACvC,IAAMiiC,EAAQ1nC,KAAKqnC,sBAAsBzJ,EAAQn4B,GAAIA,GACvC,OAAViiC,GACFD,EAAc/5B,KAAKg6B,GAIvB,OAAO5mC,EAAAC,EAAAC,cAAA,WAAMymC,UArNM/mC,IAAMe,WA+Odd,eAtBS,SAACC,EAAoByd,GAC3C,IAAMhY,EAAMzD,OAAOyb,EAAShY,KACxB0G,EAAUnM,EAAMyO,aAAatC,QAKjC,OAJI1G,EAAM,IACR0G,EAAUA,EAAQC,OAAO,SAAAsD,GAAC,OAAIA,EAAEjK,MAAQA,KAGnC,CACLqC,KAAM9H,EAAMwN,KAAK1F,KACjB2I,SAAUzQ,EAAMwN,KAAK1G,KACrBkD,SAAUhK,EAAMwN,KAAKtG,KACrBQ,QAAS1H,EAAMwN,KAAK9F,QACpBE,uBAAwB5H,EAAMwN,KAAK5F,uBACnCR,WAAYpH,EAAMwN,KAAKpG,WACvBG,mBAAoBvH,EAAMwN,KAAKjG,mBAC/BC,qBAAsBxH,EAAMwN,KAAKhG,qBACjCC,kBAAmBzH,EAAMwN,KAAK/F,kBAC9BtI,SAAUa,EAAMb,SAChBgN,QAASA,IAIEpM,CAAyBynC,ICnPlCO,GAAgB,SAACxd,EAAUyQ,EAAoBlzB,EAAekC,EAAkBzG,EAAc2K,GAClG,IAOe85B,EAPTC,EAAengC,EAAO,KAAO,MAC7BogC,EAAoBj8B,GAAqB1I,EAAOy3B,EAASj6B,OAGzDoB,EAAS,SAACR,GACd,OAAOO,EAAc4F,EAAOnG,EAAKD,EAAOC,KAOpCmoB,EAAqBzN,MAAMkO,EAAIpB,WAAWrkB,QAAQypB,KAAK,IAwB7D,GAtBK/hB,GAAejJ,GAGlBumB,EAAIS,EAAIrc,MAAM,UAAkC,IAAtBg6B,EAA0B,KAAOzf,GAAUva,EAAQ,GAF7E4b,EAAIS,EAAIrc,MAAM,UAAY,KAK5B4b,EAAIS,EAAIrc,MAAM,SAAWua,GAAUllB,EAAMuD,MACzCgjB,EAAIS,EAAIrc,MAAM,cAAgBua,GAAUllB,EAAM4iB,WAC9C2D,EAAIS,EAAIrc,MAAM,QAAUua,GAAUllB,EAAMC,KACxCsmB,EAAIS,EAAIrc,MAAM,cAAgB0a,GAAQrlB,EAAMuF,WAC5CghB,EAAIS,EAAIrc,MAAM,QAAUua,GAAU1e,GAAOxG,EAAOyG,IAChD8f,EAAIS,EAAIrc,MAAM,YAAcua,GAAUllB,EAAMwD,SAC5C+iB,EAAIS,EAAIrc,MAAM,UAAYua,GAAUllB,EAAMvD,OAC1C8pB,EAAIS,EAAIrc,MAAM,cAAgBua,GA9CH,SAACwT,GAC5B,OAAQA,GACN,IAAK,OAEL,IAAK,UACH,MAAO,MACT,IAAK,QACH,MAAO,QACT,IAAK,aACH,MAAO,aACT,IAAK,YACH,MAAO,YACT,QAEE,MAAO,OAgC6BkM,CAAqB5kC,EAAMK,YACnEkmB,EAAIS,EAAIrc,MAAM,aAAeua,GAAUuS,EAASpe,UAChDkN,EAAIS,EAAIrc,MAAM,aAAe+5B,IAASxf,GAAUtmB,EAAOoB,EAAM+E,eAC7DwhB,EAAIS,EAAIrc,MAAM,cAAgB+5B,IAASxf,IAvBxBuf,EAuBwChN,EAAS0B,eAtBvD50B,EAAOkgC,EAAMz/B,GAAey/B,KAuBrCle,EAAIS,EAAIrc,MAAM,QAAU+5B,IAASxf,GAAUtmB,EAAO+lC,IAClDpe,EAAIS,EAAIrc,MAAM,UAAYua,GAAUuS,EAASj6B,OAC7C+oB,EAAIS,EAAIrc,MAAM,SAAWua,GAAUllB,EAAM8F,MAGrC2xB,EAASj6B,MAAM6K,SAAS,KAAM,CAChCke,EAAIS,EAAIrc,MAAM,aAAe+5B,IAASxf,GAAUtmB,EAAO0J,GAAgBtI,KACvE,IAAK,IAAIsB,EAAI,EAAGA,EzEhGQ,EyEgGUA,IAAK,CACrC,IAAMoK,EAAQ,SAAWpK,EAAI,GAAKojC,EAClCne,EAAIS,EAAIrc,MAAMe,IAAUwZ,GAAUtmB,EAAOoB,EAAMkG,QAAQ5E,GAAKtB,EAAMqG,YAAY/E,MAKlF,GAAIm2B,EAASj6B,MAAM6K,SAAS,KAAM,CAChCke,EAAIS,EAAIrc,MAAM,aAAe+5B,IAASxf,GAAUtmB,EAAO2J,GAAgBvI,KACvE,IAAK,IAAIsB,EAAI,EAAGA,EzEzGQ,EyEyGUA,IAAK,CACrC,IAAMoK,EAAQ,SAAWpK,EAAI,GAAKojC,EAClCne,EAAIS,EAAIrc,MAAMe,IAAUwZ,GAAUtmB,EAAOoB,EAAMmG,QAAQ7E,GAAKtB,EAAMsG,YAAYhF,MAKlF,GAAIm2B,EAASj6B,MAAM6K,SAAS,KAAM,CAChCke,EAAIS,EAAIrc,MAAM,gBAAkB+5B,IAASxf,GAAUtmB,EAAO4J,GAAmBxI,KAC7E,IAAK,IAAIsB,EAAI,EAAGA,EzElHQ,EyEkHUA,IAAK,CACrC,IAAMoK,EAAQ,YAAcpK,EAAI,GAAKojC,EACrCne,EAAIS,EAAIrc,MAAMe,IAAUwZ,GAAUtmB,EAAOoB,EAAMoG,WAAW9E,GAAKtB,EAAMuG,eAAejF,MAIxF0lB,EAAInB,KAAKtc,KAAKgd,IAuDHse,GAAiB,SAACpoC,GAC7B,IAAMqoC,EAjKY,SAAC76B,GACnB,IAAM+c,EAAM,IAAIrB,GAChBqB,EAAIpB,WAAa,CAAC,aAAc,OAAQ,cAAe,YAAa,WAAY,WAAY,WAE5F,IAAMW,EAAqB,CACzBrB,GAAUjb,EAAKvG,YACf2hB,GAAQpb,EAAKtG,MACbuhB,GAAUjb,EAAKzG,SACf0hB,GAAUjb,EAAKxN,OACfyoB,GAAUjb,EAAKxG,MACfyhB,GAAUjb,EAAK1G,MACf2hB,GAAUjb,EAAK9F,UAUjB,OARA6iB,EAAInB,KAAO,CAACU,IAGwB,IAAhCtc,EAAK5F,yBACP2iB,EAAIpB,WAAWrc,KAAK,WACpByd,EAAInB,KAAK,GAAGtc,KAAK,uBAGZyd,EA4Ic+d,CAAYtoC,EAAMwN,MAEjC+6B,EAvDe,SAACvoC,GAOtB,IANA,IAAM8H,EAAgB9H,EAAMwN,KAAK1F,KAC3BmgC,EAAengC,EAAO,KAAO,MAE7ByiB,EAAM,IAAIrB,GAEVsf,EAAkB,GACf3jC,EAAI,EAAGA,EzElIU,EyEkIQA,IAChC2jC,EAAgB17B,KAAK,SAAWjI,EAAI,GAAKojC,GAE3CO,EAAgB17B,KAAK,aAAem7B,GAGpC,IADA,IAAMQ,EAAkB,GACf5jC,EAAI,EAAGA,EzExIU,EyEwIQA,IAChC4jC,EAAgB37B,KAAK,SAAWjI,EAAI,GAAKojC,GAE3CQ,EAAgB37B,KAAK,aAAem7B,GAGpC,IADA,IAAMS,EAAqB,GAClB7jC,EAAI,EAAGA,EzE9IU,EyE8IQA,IAChC6jC,EAAmB57B,KAAK,YAAcjI,EAAI,GAAKojC,GAEjDS,EAAmB57B,KAAK,gBAAkBm7B,GAE1C1d,EAAIpB,WAAa9M,MAAMke,UAAUh5B,OAC/B,CAAC,QAAS,OAAQ,YAAa,MAAO,YAAa,MAAO,UAAW,SACrE,CAAC,YAAa,WAAY,aAAe0mC,EAAM,cAAgBA,GAC/DO,EACAC,EACAC,EACA,CAAC,QAAUT,EAAM,QAAS,SAW5B,IARA,IAAMjL,EAAkCsB,GACtCt+B,EAAMyO,aAAatC,QACnBnM,EAAMwN,KAAKjG,mBACXvH,EAAMwN,KAAKhG,qBACXxH,EAAMwN,KAAK/F,kBACXzH,EAAMwN,KAAK5F,wBAGJ/C,EAAI,EAAGA,EAAIm4B,EAAQl4B,OAAQD,IAGlC,IAHuC,IAAA8jC,EACF3L,EAAQn4B,GAArCm2B,EAD+B2N,EAC/B3N,SAAUjB,EADqB4O,EACrB5O,eAETvQ,EAAI,EAAGA,EAAIuQ,EAAej1B,OAAQ0kB,IACzCue,GAAcxd,EAAKyQ,EAAUlzB,EAAM9H,EAAMwN,KAAKtG,KAAM6yB,EAAevQ,GAAIA,GAI3E,OAAOe,EAMiBqe,CAAe5oC,GACvCuoC,EAAW3e,qBAIX,MAAOif,iEAAsBR,EAAQ/f,WAAa,KAAOigB,EAAWjgB,YC7IhEwgB,GAAa,SAACve,EAAUyQ,EAAoBz3B,GAChD,IAAM0tB,EAAoB+J,EAASj6B,MAAM6K,SAAS,KAC5CslB,EAAoB8J,EAASj6B,MAAM6K,SAAS,KAC5Cm9B,EAAiB/N,EAASj6B,MAAM6K,SAAS,KAGzCke,EAAqBzN,MAAMkO,EAAIpB,WAAWrkB,QAAQypB,KAAK,IAE7DzE,EAAIS,EAAIrc,MAAM,SAAWua,GAAUllB,EAAMuD,MACzCgjB,EAAIS,EAAIrc,MAAM,SAAWua,GAAUllB,EAAM8F,MACzCygB,EAAIS,EAAIrc,MAAM,QAAUua,GAAUuS,EAASpe,UAC3CkN,EAAIS,EAAIrc,MAAM,aAAeua,GAAUvmB,EAAcqB,EAAM+E,eAC3DwhB,EAAIS,EAAIrc,MAAM,eAAiBua,GAAUuS,EAAS0B,gBAClD5S,EAAIS,EAAIrc,MAAM,QAAUua,GAvBJ,SAACllB,GACrB,QAAwBlB,IAApBkB,EAAMuF,WAA+C,KAApBvF,EAAMuF,UACzC,MAAO,GAFqC,IAAA4B,EAIJnH,EAAMuF,UAAUoB,MAAM,KAJlBS,EAAAN,OAAAC,GAAA,EAAAD,CAAAK,EAAA,GAIvCrF,EAJuCsF,EAAA,GAK9C,OAL8CA,EAAA,GAK/B,IAL+BA,EAAA,GAKnB,IAAMtF,EAkBC2jC,CAAczlC,IAChDumB,EAAIS,EAAIrc,MAAM,YAAcua,GAAUvmB,EAAc+uB,EAAW1tB,EAAMkG,QAAQ,GAAKlG,EAAMqG,YAAY,GAAK,IACzGkgB,EAAIS,EAAIrc,MAAM,YAAcua,GAAUvmB,EAAc+uB,EAAW1tB,EAAMkG,QAAQ,GAAKlG,EAAMqG,YAAY,GAAK,IACzGkgB,EAAIS,EAAIrc,MAAM,YAAcua,GAAUvmB,EAAc+uB,EAAW1tB,EAAMkG,QAAQ,GAAKlG,EAAMqG,YAAY,GAAK,IACzGkgB,EAAIS,EAAIrc,MAAM,YAAcua,GAAUvmB,EAAcgvB,EAAW3tB,EAAMmG,QAAQ,GAAKnG,EAAMsG,YAAY,GAAK,IACzGigB,EAAIS,EAAIrc,MAAM,YAAcua,GAAUvmB,EAAcgvB,EAAW3tB,EAAMmG,QAAQ,GAAKnG,EAAMsG,YAAY,GAAK,IACzGigB,EAAIS,EAAIrc,MAAM,YAAcua,GAAUvmB,EAAcgvB,EAAW3tB,EAAMmG,QAAQ,GAAKnG,EAAMsG,YAAY,GAAK,IACzGigB,EAAIS,EAAIrc,MAAM,eAAiBua,GAAUvmB,EAAc6mC,EAAQxlC,EAAMoG,WAAW,GAAKpG,EAAMuG,eAAe,GAAK,IAC/GggB,EAAIS,EAAIrc,MAAM,eAAiBua,GAAUvmB,EAAc6mC,EAAQxlC,EAAMoG,WAAW,GAAKpG,EAAMuG,eAAe,GAAK,IAC/GggB,EAAIS,EAAIrc,MAAM,eAAiBua,GAAUvmB,EAAc6mC,EAAQxlC,EAAMoG,WAAW,GAAKpG,EAAMuG,eAAe,GAAK,IAC/GggB,EAAIS,EAAIrc,MAAM,UAAYua,GA3DL,SAACsT,GACtB,OAAQA,GAEN,IAAK,MACH,MAAO,KACT,IAAK,KACH,MAAO,KACT,IAAK,IACH,MAAO,KACT,IAAK,IACH,MAAO,KACT,IAAK,IACH,MAAO,KAGT,IAAK,KACH,MAAO,KACT,IAAK,KACH,MAAO,KACT,QAEE,OAAOA,GAsCyBkN,CAAejO,EAASj6B,QAC5D+oB,EAAIS,EAAIrc,MAAM,UAAYua,GAAUllB,EAAMvD,OAC1C8pB,EAAIS,EAAIrc,MAAM,aAAeua,GAAUllB,EAAM4F,UAG7CohB,EAAInB,KAAKtc,KAAKgd,IAGHof,GAAmB,SAAClpC,GAC/B,IAAMuqB,EAAM,IAAIrB,GAChBqB,EAAIpB,WAAa,CACf,OACA,OACA,MACA,WACA,aACA,MACA,UACA,UACA,UACA,UACA,UACA,UACA,aACA,aACA,aACA,QACA,QACA,WACA,aAWF,IARA,IAAM6T,EAAkCsB,GACtCt+B,EAAMyO,aAAatC,QACnBnM,EAAMwN,KAAKjG,mBACXvH,EAAMwN,KAAKhG,qBACXxH,EAAMwN,KAAK/F,kBACXzH,EAAMwN,KAAK5F,wBAGJ/C,EAAI,EAAGA,EAAIm4B,EAAQl4B,OAAQD,IAGlC,IAHuC,IAAAskC,EACFnM,EAAQn4B,GAArCm2B,EAD+BmO,EAC/BnO,SAAUjB,EADqBoP,EACrBpP,eAETvQ,EAAI,EAAGA,EAAIuQ,EAAej1B,OAAQ0kB,IACzCsf,GAAWve,EAAKyQ,EAAUjB,EAAevQ,IAI7C,OAAOe,EAAIjC,iCCtFP8gB,GAAuB,SAAC/oC,GAC5B,IAAMgpC,EAAYhpC,EAClB,OAAQgpC,GACN,IAAK,oBACL,IAAK,oBACL,IAAK,WACL,IAAK,SACH,OAAO,EACT,QAEE,MAAM,IAAI/pC,MAAJ,8CAAAiC,OAAwDlB,EAAxD,QAyBRipC,GAAyB,EACzBC,GAA8B,EAE5BC,eACJ,SAAAA,EAAYnqC,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAoqC,IACxB53B,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAm/B,GAAAx3B,KAAA5S,KAAMC,KAmBRoqC,eAAiB,WASf,IARA,IAAMtqC,EAAWyS,EAAKvS,MAAMF,SACtBgpB,EAAU,CACdjoB,EAAAC,EAAAC,cAAA,UAAQR,IAAK,MAAOS,MAAO,GACxBoD,GAAU,4BAA6BtE,KAItCuqC,EAAkBjmC,GAAU,qBAAsBtE,GAC/CsG,EAAM,EAAGA,GAAOmM,EAAKvS,MAAMyvB,OAAOthB,KAAKpG,WAAY3B,IAC1D0iB,EAAQrb,KACN5M,EAAAC,EAAAC,cAAA,UAAQR,IAAK6F,EAAKpF,MAAOoF,GACtBikC,EAAgBznC,QAAQ,MAAO2D,OAAOH,MAI7C,OAAO0iB,GApCiBvW,EAuC1B6uB,gBAAkB,SAAC1/B,GACjB,IAAM0E,EAAMzD,OAAOjB,EAAME,cAAcZ,OACnCuR,EAAK5R,MAAMyF,MAAQA,GACrBmM,EAAKW,SAAS,CAAE9M,IAAKA,KA1CCmM,EA8C1B+3B,eAAiB,SAAC5oC,GAChB,IAAM6J,EAAK7J,EAAME,cAAcZ,MAC3BuR,EAAK5R,MAAM4K,KAAOA,GAAMvJ,EAAauJ,IAAOw+B,GAAqBx+B,IACnEgH,EAAKW,SAAS,CAAE3H,GAAIA,KAjDEgH,EAqD1Bg4B,0BAA4B,SAAC7oC,GAE3B,IAAI8S,EAAWjC,EAAKvS,MAAMyvB,OAAOthB,KAAK1G,KACrB,KAAb+M,IACFA,EAAWpQ,GAAU,0BAA2BmO,EAAKvS,MAAMF,WAE7D0U,EAAWA,EAAS5R,QAAQ,KAAM,KAElC,IAAMsoB,EAAc6d,GAAex2B,EAAKvS,MAAMyvB,QACxC/a,EAAO,IAAIC,KAAK,CAACuW,GAAM,CAAEvpB,KAAM,2BACrCiT,iBAAOF,EAAMF,EAAW,aA/DAjC,EAkE1Bi4B,4BAA8B,SAAC9oC,GAE7B,IAAI8S,EAAWjC,EAAKvS,MAAMyvB,OAAOthB,KAAK1G,KACrB,KAAb+M,IACFA,EAAWpQ,GAAU,0BAA2BmO,EAAKvS,MAAMF,WAE7D0U,EAAWA,EAAS5R,QAAQ,KAAM,KAElC,IAAMsoB,EAAc2e,GAAiBt3B,EAAKvS,MAAMyvB,QAC1C/a,EAAO,IAAIC,KAAK,CAACuW,GAAM,CAAEvpB,KAAM,2BACrCiT,iBAAOF,EAAMF,EAAW,eA5EAjC,EA+E1Bk4B,0BAA4B,SAACrkC,EAAaoD,EAAkB9H,GAE1D,IAAM5B,EAAWyS,EAAKvS,MAAMF,SACxB0U,EAAWjC,EAAKvS,MAAMyvB,OAAOthB,KAAK1G,KACrB,KAAb+M,IACFA,EAAWpQ,GAAU,0BAA2BtE,IAElD0U,EAAWA,EAAS5R,QAAQ,KAAM,KAElC,IACM8nC,EADWtmC,GAAU,mCAAoCtE,GAE5D8C,QAAQ,QAAS2D,OAAOH,IACxBxD,QAAQ,aAAc2D,OAAOiD,IAC7B5G,QAAQ,aAAc4R,GAEnB7T,EAAQuT,KAAKO,UAAUlC,EAAKvS,MAAMyvB,QAClC/a,EAAO,IAAIC,KAAK,CAAChU,GAAQ,CAAEgB,KAAM,mCACvCiT,iBAAOF,EAAMg2B,EAAa,uBAhGFn4B,EAqG1Bo4B,yBAA2B,SAACvkC,EAAaoD,EAAkB9H,GACzD,IAAM6R,EAAaT,SAASC,eAAe,cACxB,OAAfQ,IACF02B,GAAiB7jC,EACjB8jC,GAAsB1gC,EACtB+J,EAAWP,UA1GWT,EA+G1Be,oBAAsB,WACpB,IAAMC,EAAaT,SAASC,eAAe,cAC3C,GAAmB,OAAfQ,GAAyBA,aAAsBC,kBAA0C,OAArBD,EAAWE,MAAnF,CAKA,IAAMrN,EAAc6jC,GACdzgC,EAAmB0gC,GAGnBlqC,EAAQuS,EAAKvS,MACbF,EAAWE,EAAMF,SAEjB8T,EAAY5I,OAAA6I,EAAA,EAAA7I,CAAAuH,GACZmB,EAAeH,EAAWE,MAAM,GAChCK,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACd,IAAIzW,EAAuB,KAI3B,GAA6B,kBAAlBuW,EAAO7R,OAAlB,CAKA,IACE,IAAMoN,EAAmB6E,KAAKC,MAAML,EAAO7R,QAG3C,GAAIoN,EAAIrB,SAASnI,eAAiB7F,EAAMyvB,OAAOzhB,SAASnI,aAEtDtI,EADU6G,GAAU,yBAA0BtE,GAE3C8C,QAAQ,gBAAiB5C,EAAMyvB,OAAOzhB,SAASnI,cAC/CjD,QAAQ,iBAAkByM,EAAIrB,SAASnI,mBACrC,GAAIwJ,EAAIlB,KAAK1G,OAASzH,EAAMyvB,OAAOthB,KAAK1G,KAAM,CAGnDlK,EADU6G,GAAU,0BAA2BtE,GACrC8C,QAAQ,aAAc5C,EAAMyvB,OAAOthB,KAAK1G,MAAM7E,QAAQ,cAAeyM,EAAIlB,KAAK1G,WACnF,GAAK2F,GAAyBiC,EAAID,aAAatC,QAAS1G,EAAKoD,GAI7D,CAEL,IAAM4G,EAAkBf,EAAID,aAAatC,QAAQC,OAAO,SAAAsD,GACtD,OAAOA,EAAEjK,MAAQA,GAAOiK,EAAE7G,WAAaA,IAEzCxJ,EAAM4qC,cAAcxkC,EAAKoD,EAAU4G,OAT0C,CAG7E7S,EADU6G,GAAU,yBAA0BtE,GACpC8C,QAAQ,QAAS2D,OAAOH,IAAMxD,QAAQ,aAAc2D,OAAOiD,KAQvE,MAAO6K,GACP9W,EAAQ6G,GAAU,iBAAkBtE,GAGjB,kBAAVvC,GACTqW,EAAaV,SAAS,CAAE3V,MAAOA,SAjC/BoB,OAAOuxB,MAAM9rB,GAAU,uBAAwBtE,KAoCnDgU,EAAOQ,WAAWZ,KA1KMnB,EA6K1Bc,gBAAkB,WAChBd,EAAKW,SAAS,CAAE3V,MAAO,MA9KCgV,EAiL1Bs4B,yBAA2B,WAezB,IAbA,IAAMC,EAA6Cz9B,GACjDkF,EAAKvS,MAAMyvB,OAAOthB,KAAKnG,gBACvBuK,EAAKvS,MAAMyvB,OAAOrgB,aAAatC,SAG3BhN,EAAWyS,EAAKvS,MAAMF,SACtBirC,EAAkB3mC,GAAU,mCAAoCtE,GAChEkrC,EAAgB5mC,GAAU,yBAA0BtE,GACpDmrC,EAAiB7mC,GAAU,0BAA2BtE,GAEtDorC,EAAQ,GACR78B,EAAUnL,KAAK8lB,IAAIzW,EAAKvS,MAAMyvB,OAAOthB,KAAKpG,WAAY+iC,EAAoBrlC,QAbjD6gC,EAAA,SAetB9gC,GAIP,IAHA,IAAM2lC,EAAcL,EAAoBtlC,GAElC4lC,EAAU,GAlBaC,EAAA,SAmBpBlhB,GACP,IAAMmhB,EAASH,EAAYhhB,GACrB1Y,GAAqB,IAAX65B,EAAkB,UAAY,UACxCC,EAAcphB,EAAI,EAAI,CAAEhY,WAAY,aAAWnP,EAE/CwoC,GAA4B,IAAXF,EAAkBL,EAAiBD,EAC1DI,EAAQ39B,KACN5M,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CACEP,IAAKiF,EAAI,IAAM2kB,EACf1Y,QAASA,EACTsD,MAAOw2B,EACP/5B,QAAS,SAACnB,IACG,IAAXi7B,EACI/4B,EAAKk4B,0BAA0BjlC,EAAI,EAAG2kB,EAAI,EAAG9Z,GAC7CkC,EAAKo4B,yBAAyBnlC,EAAI,EAAG2kB,EAAI,EAAG9Z,KAGjDm7B,EAAe5oC,QAAQ,QAAS2D,OAAOf,EAAI,IAAI5C,QAAQ,aAAc2D,OAAO4jB,EAAI,OAjB9EA,EAAI,EAAGA,EAAIghB,EAAY1lC,OAAQ0kB,IAAKkhB,EAApClhB,GAsBT+gB,EAAMz9B,KACJ5M,EAAAC,EAAAC,cAAA,OAAKR,IAAKiF,GACR3E,EAAAC,EAAAC,cAAA,WAAMgqC,EAAgBnoC,QAAQ,MAAO2D,OAAOf,EAAI,KAChD3E,EAAAC,EAAAC,cAAA,WAAMqqC,GACL5lC,EAAIslC,EAAoBrlC,OAAS,EAAI5E,EAAAC,EAAAC,cAAA,WAAS,QA9B5CyE,EAAI,EAAGA,EAAI6I,EAAS7I,IAAK8gC,EAAzB9gC,GAmCT,OAAO0lC,GAhOP34B,EAAK6uB,gBAAkB7uB,EAAK6uB,gBAAgBpsB,KAArBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACvBA,EAAK+3B,eAAiB/3B,EAAK+3B,eAAet1B,KAApBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACtBA,EAAKg4B,0BAA4Bh4B,EAAKg4B,0BAA0Bv1B,KAA/BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACjCA,EAAKi4B,4BAA8Bj4B,EAAKi4B,4BAA4Bx1B,KAAjChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACnCA,EAAKk4B,0BAA4Bl4B,EAAKk4B,0BAA0Bz1B,KAA/BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACjCA,EAAKo4B,yBAA2Bp4B,EAAKo4B,yBAAyB31B,KAA9BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAChCA,EAAKe,oBAAsBf,EAAKe,oBAAoB0B,KAAzBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAC3BA,EAAKc,gBAAkBd,EAAKc,gBAAgB2B,KAArBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACvBA,EAAKs4B,yBAA2Bt4B,EAAKs4B,yBAAyB71B,KAA9BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAEhCA,EAAK5R,MAAQ,CACXyF,IAAK,EACLmF,GAAI,WACJhO,MAAO,IAhBegV,wEAuOxB,IAAMzS,EAAWC,KAAKC,MAAMF,SACxB69B,EAAU,KACd,OAAQ59B,KAAKY,MAAM4K,IACjB,IAAK,WACHoyB,EAAU98B,EAAAC,EAAAC,cAAC0qC,GAAD,CAAYlrC,IAAKR,KAAKY,MAAMyF,IAAKA,IAAKrG,KAAKY,MAAMyF,MAC3D,MACF,IAAK,SACHu3B,EACE98B,EAAAC,EAAAC,cAAC2qC,GAAD,CAAUnrC,IAAKR,KAAKY,MAAMyF,IAAKA,IAAKrG,KAAKY,MAAMyF,IAAKkC,gBAAgB,OAAOmgC,kBAAkB,eAE/F,MACF,IAAK,oBACH9K,EACE98B,EAAAC,EAAAC,cAAC2qC,GAAD,CACEnrC,IAAKR,KAAKY,MAAMyF,IAChBA,IAAKrG,KAAKY,MAAMyF,IAChBkC,gBAAiBvI,KAAKC,MAAMyvB,OAAOthB,KAAK7F,gBACxCmgC,kBAAkB,sBAGtB,MACF,IAAK,oBACH9K,EACE98B,EAAAC,EAAAC,cAAC2qC,GAAD,CACEnrC,IAAKR,KAAKY,MAAMyF,IAChBA,IAAKrG,KAAKY,MAAMyF,IAChBkC,gBAAiBvI,KAAKC,MAAMyvB,OAAOthB,KAAK7F,gBACxCmgC,kBAAkB,sBAQ1B,IAAIkD,EAAc,KAelB,OAdI5rC,KAAKC,MAAMyvB,OAAOthB,KAAKpG,WAAa,IACtC4jC,EACE9qC,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEM,aAAcrB,KAAKY,MAAMyF,IAAI6iB,WAC7B9nB,GAAG,SACHE,SAAUtB,KAAKqhC,gBACf7/B,UAAS,iBAAAW,OAAmBuT,KAAO9Z,UACnCoZ,MAAO,CAAE7C,YAAa,SAErBnS,KAAKqqC,mBAMVvpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4U,GAAD,CACEpY,MAAOwC,KAAKY,MAAMpD,MAClBwU,MAAO3N,GAAU,4BAA6BtE,GAC9C6Q,KAA2B,KAArB5Q,KAAKY,MAAMpD,MACjBsT,MAAO9Q,KAAKsT,kBAGdxS,EAAAC,EAAAC,cAAC6qC,GAAA9qC,EAAD,KACED,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,CAAMiU,MAAO,CAAE1C,aAAc,SAC3BxR,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,sCAAsC6M,eAAe,qBAE5ErQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAAA,OAAKgU,MAAO,CAAE82B,WAAY,SACxBhrC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,kCACH6M,eAAe,wEAGnBrQ,EAAAC,EAAAC,cAAA,WACChB,KAAK8qC,6BAIVhqC,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,CAAMiU,MAAO,CAAE1C,aAAc,SAC3BxR,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,qCAAqC6M,eAAe,6BAE3ErQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ0Q,QAASzR,KAAKwqC,2BACpB1pC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,yCACH6M,eAAe,iCAInBrQ,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ0Q,QAASzR,KAAKyqC,4BAA6Bz1B,MAAO,CAAE5C,WAAY,SACtEtR,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,8BAA8B6M,eAAe,yBAM1ErQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,KACED,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,8BAA8B6M,eAAe,oBAEpErQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,CAAW9P,UAAWkU,KAAOq2B,aAC1BH,EAED9qC,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEM,aAAcrB,KAAKY,MAAM4K,GACzBpK,GAAG,SACHE,SAAUtB,KAAKuqC,eACf/oC,UAAS,iBAAAW,OAAmBuT,KAAO9Z,WAEnCkF,EAAAC,EAAAC,cAAA,UAAQC,MAAM,YAAYoD,GAAU,sBAAuBtE,IACf,SAA3CC,KAAKC,MAAMyvB,OAAOthB,KAAK7F,gBACtBzH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,qBAAqBoD,GAAU,8BAA+BtE,IAC1E,KACwC,SAA3CC,KAAKC,MAAMyvB,OAAOthB,KAAK7F,gBACtBzH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,qBAAqBoD,GAAU,8BAA+BtE,IAC1E,KACJe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,UAAUoD,GAAU,sBAAuBtE,OAK9D69B,EAED98B,EAAAC,EAAAC,cAAA,SACEsD,GAAG,aACH1C,KAAK,OACL4U,OAAO,8BACPxB,MAAO,CAAEyB,QAAS,QAClBnV,SAAUtB,KAAKuT,8BAvWC7S,IAAMe,WA2XjBd,eAbS,SAACC,GACvB,MAAO,CACL8uB,OAAQ9uB,EACRb,SAAUa,EAAMb,WAIO,SAAC2B,GAC1B,MAAO,CACLmpC,cAAe,SAACxkC,EAAKoD,EAAU4G,GAAhB,OAAoC3O,E9C/Y1B,SAAC2E,EAAaoD,EAAkB4G,GAC3D,MAAO,CACLzO,KAAM,iBACNyE,IAAKA,EACLoD,SAAUA,EACV4G,gBAAiBA,G8C0Y2Cw6B,CAAcxkC,EAAKoD,EAAU4G,OAI9E1P,CAA6CypC,ICjb7C4B,oLARX,OACElrC,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOvX,aACrB2C,EAAAC,EAAAC,cAACirC,GAAD,cAJuBvrC,IAAMe,WCJxByqC,GAAe,WAE1B,OAAO/oC,KAAKgpC,SACTjjB,SAAS,IACTkjB,OAAO,IAICC,GAAY,SAACpjB,EAAand,GACrC,OAAO3I,KAAKmG,MAAMnG,KAAKgpC,UAAYrgC,EAAMmd,EAAM,IAAMA,GAI1CqjB,GAAmB,SAACrjB,EAAand,EAAaygC,GACzD,IAAMC,EAAQrpC,KAAK4zB,IAAI,GAAIwV,GAM3B,OAHUppC,KAAKmG,MAAMnG,KAAKgpC,UAAYrgC,EAAMmd,EAAM,GAAKujB,GAG5CA,EAAQvjB,GCYfwjB,GAAsB,CAC1B,UACA,UACA,UACA,WACA,UACA,WACA,SACA,UACA,aAGIC,GAAoB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAE5EC,eACJ,SAAAA,EAAY1sC,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAA2sC,IACxBn6B,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAA0hC,GAAA/5B,KAAA5S,KAAMC,KACD2sC,mBAAqBp6B,EAAKo6B,mBAAmB33B,KAAxBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAFFA,oFAQxBxS,KAAKC,MAAM0jB,YAAYuoB,KAAiBA,MAIxC,IAAMpnB,EAAM2nB,GAAoBJ,GAAU,EAAGI,GAAoB/mC,OAAS,IAC1E1F,KAAKC,MAAM2jB,cAAckB,GAQzB,IAJA,IAAM+nB,EAAgBR,GAAU,EAAG,IAC7BS,EAAkBT,GAAU,EAAG,GAEjCU,EAAa,GACRtnC,EAAI,EAAGA,EAAIonC,EAAepnC,IACjCsnC,EAAWr/B,KAAK4+B,GAAiB,GAAI,IAAK,IAE5CS,EAAaA,EAAW9uB,KAAK,SAACld,EAAGmd,GAAJ,OAAUtb,OAAO7B,GAAK6B,OAAOsb,KAG1D,IADA,IAAI8uB,EAAe,GACVvnC,EAAI,EAAGA,EAAIqnC,EAAiBrnC,IACnCunC,EAAat/B,KAAK4+B,GAAiB,GAAI,IAAK,IAE9CU,EAAeA,EAAa/uB,KAAK,SAACld,EAAGmd,GAAJ,OAAUtb,OAAO7B,GAAK6B,OAAOsb,KAG9D,IADA,IAAI+uB,EAAY,GACPxnC,EAAI,EAAGA,EAAIqnC,EAAiBrnC,IACnCwnC,EAAUv/B,KAAK4+B,GAAiB,GAAI,IAAK,IAE3CW,EAAYA,EAAUhvB,KAAK,SAACld,EAAGmd,GAAJ,OAAUtb,OAAO7B,GAAK6B,OAAOsb,KAExDle,KAAKC,MAAMkY,iBAAiB,IAAK40B,GACjC/sC,KAAKC,MAAMkY,iBAAiB,IAAK60B,GACjChtC,KAAKC,MAAMkY,iBAAiB,KAAM80B,GAIlC,IAAM3+B,EAAU+9B,GAAU,EAAG,GAC7BrsC,KAAKC,MAAMgY,cAAc3J,GAEzB,IAAK,IAAI7I,EAAI,EAAGA,EAAI6I,EAAS7I,IAAK,CAChC,IAAMY,EAAMZ,EAAI,EACV89B,EAAe8I,GAAU,EAAG,GAClCrsC,KAAKC,MAAMiY,mBAAmB7R,EAAKk9B,GAOrC,IAFA,IAAMgF,EAAe8D,GAAU,EAAG,IAC5BnkC,EAAY,GACTzC,EAAI,EAAGA,EAAI8iC,EAAc9iC,IAAK,CACrC,IAAIynC,EAAMR,GAAkBL,GAAU,EAAGK,GAAkBhnC,OAAS,IACpE,GAAIvC,KAAKgpC,SAAW,GAAK,CACvB,IAAMgB,EAAYd,GAAU,EAAG,IACzBe,EAAYf,GAAUc,EAAY,EAAG,IAC3CD,EAAMA,EAAM,IAAM1mC,OAAO2mC,GAAa,IAAM3mC,OAAO4mC,IAIrB,IAA5BllC,EAAUgiB,QAAQgjB,IACpBhlC,EAAUwF,KAAKw/B,GAGnBltC,KAAKC,MAAM+X,aAAa9P,oCAIxB,OACEpH,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ0Q,QAASzR,KAAK4sC,oBACpB9rC,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,2BA7EW5D,IAAMe,WAkG9Bd,eAfS,SAACC,GAAD,OAAAqK,OAAAoD,EAAA,EAAApD,CAAA,GACnBrK,IAGsB,SAACc,GAC1B,MAAO,CACLsW,aAAc,SAAC9P,GAAD,OAA8BxG,EAASsW,GAAa9P,KAClE0b,cAAe,SAAC/b,GAAD,OAAwBnG,ErE5Gd,SAACmG,GAC5B,MAAO,CACLjG,KAAM,iBACNiG,cqEyGgD+b,CAAc/b,KAC9DoQ,cAAe,SAACvS,GAAD,OAAoBhE,EAASuW,GAAcvS,KAC1Die,YAAa,SAACjc,GAAD,OAAkBhG,ErE5HR,SAACgG,GAC1B,MAAO,CACL9F,KAAM,gBACN8F,QqEyHwCic,CAAYjc,KACpDwQ,mBAAoB,SAAC7R,EAAaqI,GAAd,OAAgChN,EAASwW,GAAmB7R,EAAKqI,KACrFyJ,iBAAkB,SAAC/T,EAAUyK,GAAX,OAAmCnN,EAASyW,GAAiB/T,EAAKyK,OAIzElO,CAA6CgsC,ICnItDU,GAAqB,CACzB,UACA,QACA,OACA,QACA,QACA,WACA,OACA,QACA,QACA,QACA,OACA,SACA,UACA,WACA,aACA,QACA,OACA,WACA,OACA,WACA,OACA,SACA,UACA,SACA,QACA,QACA,OACA,UACA,OACA,WACA,QACA,YACA,SACA,UACA,QACA,QACA,aACA,YACA,SACA,UACA,QACA,UACA,OACA,UACA,SACA,SACA,QACA,SACA,WACA,QACA,SACA,OACA,MACA,MACA,QACA,WACA,SACA,WACA,OACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,YACA,MACA,YACA,SACA,OACA,QACA,OACA,QACA,UACA,WAGIC,GAAoB,CACxB,QACA,UACA,SACA,aACA,QACA,aACA,SACA,UACA,SACA,WACA,UACA,aACA,UACA,YACA,QACA,WACA,QACA,QACA,UACA,cACA,SACA,aACA,aACA,WACA,aACA,WACA,QACA,SACA,aACA,aACA,WACA,QACA,OACA,QACA,aACA,YACA,YACA,WACA,QACA,UACA,UACA,SACA,WACA,SACA,WACA,QACA,UACA,aACA,cACA,WACA,WACA,WACA,YACA,QACA,UACA,SACA,aACA,QACA,YACA,WACA,WACA,QACA,YACA,UACA,OACA,SACA,UAUIC,eACJ,SAAAA,EAAYttC,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAutC,IACxB/6B,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAsiC,GAAA36B,KAAA5S,KAAMC,KACDutC,4BAA8Bh7B,EAAKg7B,4BAA4Bv4B,KAAjChK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACnCA,EAAKi7B,gBAAkBj7B,EAAKi7B,gBAAgBx4B,KAArBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IACvBA,EAAKk7B,sBAAwBl7B,EAAKk7B,sBAAsBz4B,KAA3BhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAJLA,6FASxB,IADA,IAAM0d,EAAWlwB,KAAKC,MAAMoP,aAAatC,QAAQhC,IAAI,SAAAuF,GAAC,OAAIA,EAAEhM,KACnDmB,EAAI,EAAGA,EAAIyqB,EAASxqB,OAAQD,IACnCzF,KAAKC,MAAMomB,mBAAmB6J,EAASzqB,4CAM3BY,EAAaoD,EAAkBpH,GAG7C,IAFA,IAAMsrC,EAAatB,GAAU,EAAG,IAEvB5mC,EAAI,EAAGA,EAAIkoC,EAAYloC,IAAK,CAGnC,IAEMiC,EAFY2lC,GAAmBhB,GAAU,EAAGgB,GAAmB3nC,OAAS,IAErD,IADR4nC,GAAkBjB,GAAU,EAAGiB,GAAkB5nC,OAAS,IAKrEkoC,EAAe,CAAC,IAAK,IAAK,MAC1BxpC,EAAWwpC,EAAMvB,GAAU,EAAGuB,EAAMloC,OAAS,IAI7CmoC,EAAkB,CAAC,WAAY,aAAc,aAC7C5jC,EAAe4jC,EAAMxB,GAAU,EAAGwB,EAAMnoC,OAAS,IAIjDmE,EAAkB,GACpB1G,KAAKgpC,SAAW,IAClBtiC,EAAO6D,KAAK,OAEVvK,KAAKgpC,SAAW,IAClBtiC,EAAO6D,KAAK,MAEVvK,KAAKgpC,SAAW,IAClBtiC,EAAO6D,KAAK,KAEVvK,KAAKgpC,SAAW,IAClBtiC,EAAO6D,KAAK,KAEVvK,KAAKgpC,SAAW,IAClBtiC,EAAO6D,KAAK,KAEQ,IAAlB7D,EAAOnE,QACTmE,EAAO6D,KAAK,OAOd,IADA,IAAImkB,GAAW,EACNpsB,EAAI,EAAGA,EAAIoE,EAAOnE,OAAQD,IACjC,GAAIoE,EAAOpE,GAAG+G,SAAS,KAAM,CAC3BqlB,GAAW,EACX,MAIJ,IAAMic,EAAkB3qC,KAAKgpC,SACzB3nC,EAAuB,UACvBspC,EAAkB,KAEXA,EAAkB,GACvBjc,IACFrtB,EAAY,SAGdA,EADSspC,EAAkB,IACf,aAEA,aAKd,IAAM5lC,EAAY,GAClB,GAAIlI,KAAKC,MAAMmO,KAAKlG,UAAUxC,OAAS,EAOrC,IANA,IAAMqoC,EAAsB5qC,KAAK2I,IAAI,EAAG9L,KAAKC,MAAMmO,KAAKlG,UAAUxC,OAAS,GACrE6iC,EAAe8D,GAAU,EAAG0B,GAG5BC,EAAahuC,KAAKC,MAAMmO,KAAKlG,UAAUuG,QAEpChJ,EAAI,EAAGA,EAAI8iC,EAAc9iC,IAAK,CACrC,IAAMwoC,EAAS5B,GAAU,EAAG2B,EAAWtoC,OAAS,GAChDwC,EAAUwF,KAAKsgC,EAAWC,IAG1BD,EAAW3jB,OAAO4jB,EAAQ,GAI9BjuC,KAAKC,MAAMmmB,gBAAgB,CACzB/f,IAAKA,EACLoD,SAAUA,EACVpH,OAAQA,EACRqF,KAAMA,EACNtD,IAAKA,EACL6F,KAAMA,EACNJ,OAAQA,EACRrF,UAAWA,EACX0D,UAAWA,qDAMf,IAAMgmC,EAAwB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEjFluC,KAAKwtC,8BACL,IAAK,IAAInnC,EAAM,EAAGA,GAAOrG,KAAKC,MAAMmO,KAAKpG,WAAY3B,IAEnD,IADA,IAAMk9B,EAAevjC,KAAKC,MAAMmO,KAAKnG,gBAAgB5B,EAAM,GAClDoD,EAAW,EAAGA,GAAY85B,EAAc95B,IAE/C,IADA,IAAM0kC,EAAa9B,GAAU,EAAG,GACvBhqC,EAAS,EAAGA,EAAS8rC,EAAY9rC,IACxCrC,KAAKytC,gBAAgBpnC,EAAKoD,EAAUykC,EAAY7rC,qCAOtD,OACEvB,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ0Q,QAASzR,KAAK0tC,uBACpB5sC,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,6BAvIc5D,IAAMe,WAwJjCd,eAXS,SAACC,GAAD,OAAAqK,OAAAoD,EAAA,EAAApD,CAAA,GACnBrK,IAGsB,SAACc,GAC1B,MAAO,CACL0kB,gBAAiB,SAAC9W,GAAD,OAAyB5N,EAAS0kB,GAAgB9W,KACnE+W,mBAAoB,SAAC3W,GAAD,OAAqBhO,EAAS2kB,GAAmB3W,OAI1D/O,CAA6C4sC,ICrStDa,eACJ,SAAAA,EAAYnuC,GAAc,IAAAuS,EAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAjL,KAAAouC,IACxB57B,EAAAvH,OAAAyH,EAAA,EAAAzH,CAAAjL,KAAAiL,OAAA0H,EAAA,EAAA1H,CAAAmjC,GAAAx7B,KAAA5S,KAAMC,KAIRouC,cAAgB,WAEd,OAAI77B,EAAKvS,MAAMmO,KAAK1F,KADH,IAERvF,KAAKmG,MAAMgjC,GAAiB,GAAI,IAAK,GAF7B,KAIR9pC,EAJQ,IAIDW,KAAKmG,MAAMgjC,GAAiB,GAAI,IAAK,GAJpC,OANO95B,EAc1B87B,kBAAoB,WAIlB,IAHA,IAAMvhC,EAAUyF,EAAKvS,MAAMoP,aAAatC,QAClCrE,EAAgB8J,EAAKvS,MAAMmO,KAAK1F,KAE7BjD,EAAI,EAAGA,EAAIsH,EAAQrH,OAAQD,IAAK,CACvC,IAAMtB,EAAQ4I,EAAQtH,GAIhByD,EAAeR,EAAO4jC,GAAiB,GAAI,IAAK,GAAK9pC,EAAO8pC,GAAiB,GAAI,IAAK,IAC5F95B,EAAKvS,MAAMqmB,mBAAmBniB,EAAMG,GAAI,CACtC4E,aAAcA,IAIhB,IAAMS,EAAM0iC,GAAU,EAAG,IACzB75B,EAAKvS,MAAMqmB,mBAAmBniB,EAAMG,GAAI,CACtCqF,IAAKA,IAQP,IAHA,IAAIkoB,GAAW,EACXC,GAAW,EACXC,GAAc,EACT3H,EAAI,EAAGA,EAAIjmB,EAAM0F,OAAOnE,OAAQ0kB,IAAK,CAC5C,IAAM9Z,EAAInM,EAAM0F,OAAOugB,GACnB9Z,EAAE9D,SAAS,OACbqlB,GAAW,GAETvhB,EAAE9D,SAAS,OACbslB,GAAW,GAETxhB,EAAE9D,SAAS,OACbulB,GAAc,GAkBlB,GAZIF,GACFrf,EAAKvS,MAAMoxB,aAAaltB,EAAMG,GAAI,IAAK,EAAGkO,EAAK67B,iBAE7Cvc,GACFtf,EAAKvS,MAAMoxB,aAAaltB,EAAMG,GAAI,IAAK,EAAGkO,EAAK67B,iBAE7Ctc,GACFvf,EAAKvS,MAAMoxB,aAAaltB,EAAMG,GAAI,IAAK,EAAGkO,EAAK67B,iBAK7Cxc,EAAU,CACZ,IAAM0c,EAAS/nC,OAAO6lC,GAAU,EAAG,KAC7BnlB,EAAM/jB,KAAKgpC,SAAW,GAAM,MAAQ,KAC1C35B,EAAKvS,MAAMqmB,mBAAmBniB,EAAMG,GAAI,CACtC6F,cAAeokC,EAASrnB,IAI5B,GAAI4K,EAAU,CACZ,IAAMyc,EAAS/nC,OAAO6lC,GAAU,EAAG,KAC7BmC,EAAShoC,OAAO6lC,GAAU,EAAG,IACnC75B,EAAKvS,MAAMqmB,mBAAmBniB,EAAMG,GAAI,CACtC8F,cAAemkC,EAAS,IAAMC,OA5EpCh8B,EAAK87B,kBAAoB97B,EAAK87B,kBAAkBr5B,KAAvBhK,OAAA6I,EAAA,EAAA7I,CAAAuH,IAFDA,wEAqFxB,OACE1R,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQ0Q,QAASzR,KAAKsuC,mBACpBxtC,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBtkB,GAAG,0BAxFU5D,IAAMe,WAyG7Bd,eAXS,SAACC,GAAD,MAAqC,CAC3DwN,KAAMxN,EAAMwN,KACZiB,aAAczO,EAAMyO,eAGK,SAAC3N,GAAD,MAAwC,CACjE4kB,mBAAoB,SAAC5W,EAASJ,GAAV,OAAkB5N,EAAS4kB,GAAmB5W,EAASJ,KAC3E+hB,aAAc,SAAC3hB,EAASxC,EAAM0C,EAAmBrI,GAAnC,OACZ7F,EAAS2vB,GAAa3hB,EAASxC,EAAM0C,EAAmBrI,OAG7C5G,CAA6CytC,ICxHtDK,8MAEJC,kBAAoB,WAClBC,aAAaC,QACbhwC,OAAOC,SAASgwC,kFAIhB,OACE/tC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,CAAMiU,MAAO,CAAE1C,aAAc,SAC3BxR,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,8BAA8B6M,eAAe,gCAEpErQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAACwQ,EAAAzQ,EAAD,CAAQiU,MAAO,CAAE7C,YAAa,QAAUT,QAAQ,SAASD,QAASzR,KAAK0uC,mBACrE5tC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,qBAAqB6M,eAAe,WAE3DrQ,EAAAC,EAAAC,cAACygB,GAAA1gB,EAAD,KACED,EAAAC,EAAAC,cAAC8tC,GAAD,MACAhuC,EAAAC,EAAAC,cAAC+tC,GAAD,MACAjuC,EAAAC,EAAAC,cAACguC,GAAD,SAKNluC,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,KACED,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,0BAA0B6M,eAAe,iBAEhErQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAAA,WAAMmT,KAAKO,UAAU1U,KAAKC,MAAO,KAAM,cA/B1BS,IAAMe,WA2ChBd,eAJS,SAACC,GAAD,OAAAqK,OAAAoD,EAAA,EAAApD,CAAA,GACnBrK,IAGUD,CAAyB8tC,IC5CzBQ,GARQ,WACrB,OACEnuC,EAAAC,EAAAC,cAAA,OAAKQ,UAAWkU,KAAOvX,aACrB2C,EAAAC,EAAAC,cAACkuC,GAAD,QCiJSC,oLAnIX,OACEruC,EAAAC,EAAAC,cAAC+U,EAAAhV,EAAD,CAAWS,UAAWkU,KAAOvX,aAC3B2C,EAAAC,EAAAC,cAACgV,EAAAjV,EAAD,KACED,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,KACED,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,uBAAuB6M,eAAe,aAE7DrQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,gBACH6M,eAAe,yDAGnBrQ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KAAGkV,KAAK,mCAAmCG,IAAI,sBAAsBhC,OAAO,UAA5E,yBAIFvT,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,sBAAsB6M,eAAe,eAC1DrQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,2DACAF,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,uEACAF,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,6CAOVF,EAAAC,EAAAC,cAACiV,EAAAlV,EAAD,CAAKsK,GAAI,GACPvK,EAAAC,EAAAC,cAACyU,EAAA1U,EAAD,KACED,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKgQ,OAAN,KACEjQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,uBAAuB6M,eAAe,aAE7DrQ,EAAAC,EAAAC,cAACyU,EAAA1U,EAAKuQ,KAAN,KACExQ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,kBACH6M,eAAe,yEAGnBrQ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,sBACH6M,eAAe,mFAGnBrQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,kBACH6M,eAAe,kEAGnBrQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,kBACH6M,eAAe,4EAGnBrQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,kBACH6M,eAAe,gEAGnBrQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,kBACH6M,eAAe,4EAIrBrQ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,8BACH6M,eAAe,uVAGnBrQ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,iCACH6M,eAAe,8CAGnBrQ,EAAAC,EAAAC,cAAA,WA3Hd,ofA4HcF,EAAAC,EAAAC,cAAA,KAAGkV,KAAK,gDAAgDG,IAAI,sBAAsBhC,OAAO,UACvFvT,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACE5M,GAAG,+BACH6M,eAAe,mEAGnBrQ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGkV,KAAK,4CAA4CG,IAAI,sBAAsBhC,OAAO,UACnFvT,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,qBAAqB6M,eAAe,wCA1H9CzQ,IAAMe,WCgCpB2tC,oLA3BX,GAAsC,kBAA3BxwC,OAAOC,SAASwwC,OACzB,OAAOvuC,EAAAC,EAAAC,cAACsuC,GAAD,MAGT,OAAQ1wC,OAAOC,SAASwwC,QACtB,IAAK,cACH,OAAOvuC,EAAAC,EAAAC,cAACuuC,GAAD,MACT,IAAK,gBACH,OAAOzuC,EAAAC,EAAAC,cAACwuC,GAAD,MACT,IAAK,aACH,OAAO1uC,EAAAC,EAAAC,cAACyuC,GAAD,MACT,IAAK,gBACH,OAAO3uC,EAAAC,EAAAC,cAAC0uC,GAAD,MACT,IAAK,WACH,OAAO5uC,EAAAC,EAAAC,cAAC2uC,GAAD,MACT,IAAK,WACH,OAAO7uC,EAAAC,EAAAC,cAAC4uC,GAAD,MACT,IAAK,SACH,OAAO9uC,EAAAC,EAAAC,cAAC6uC,GAAD,MACT,IAAK,SACH,OAAO/uC,EAAAC,EAAAC,cAAC8uC,GAAD,MACT,QACE,OAAOhvC,EAAAC,EAAAC,cAACsuC,GAAD,cAxBa5uC,IAAMe,qDC6CnBsuC,GA1DI,WACjB,OACEjvC,EAAAC,EAAAC,cAACgvC,GAAAjvC,EAAD,CAAQkvC,OAAO,MAAMC,GAAG,OAAOx+B,QAAQ,OAAOy+B,OAAO,MACnDrvC,EAAAC,EAAAC,cAACgvC,GAAAjvC,EAAOqvC,MAAR,KACEtvC,EAAAC,EAAAC,cAAA,OAAK6U,IAAI,aAAaC,IAAI,uBAAuBy4B,OAAO,QAK1DztC,EAAAC,EAAAC,cAACgvC,GAAAjvC,EAAOsvC,OAAR,CAAeC,gBAAc,qBAC7BxvC,EAAAC,EAAAC,cAACgvC,GAAAjvC,EAAOwvC,SAAR,KACEzvC,EAAAC,EAAAC,cAACwvC,GAAAzvC,EAAD,KACED,EAAAC,EAAAC,cAAC2Q,EAAA,cAAD,CAAe8+B,OAAK,EAAC7+B,GAAG,KACtB9Q,EAAAC,EAAAC,cAACwvC,GAAAzvC,EAAI2vC,KAAL,KACE5vC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,WAAW6M,eAAe,WAGnDrQ,EAAAC,EAAAC,cAAC2Q,EAAA,cAAD,CAAeC,GAAG,eAChB9Q,EAAAC,EAAAC,cAACwvC,GAAAzvC,EAAI2vC,KAAL,KACE5vC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,iBAAiB6M,eAAe,iBAGzDrQ,EAAAC,EAAAC,cAAC2Q,EAAA,cAAD,CAAeC,GAAG,iBAChB9Q,EAAAC,EAAAC,cAACwvC,GAAAzvC,EAAI2vC,KAAL,KACE5vC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,mBAAmB6M,eAAe,mBAG3DrQ,EAAAC,EAAAC,cAAC2Q,EAAA,cAAD,CAAeC,GAAG,cAChB9Q,EAAAC,EAAAC,cAACwvC,GAAAzvC,EAAI2vC,KAAL,KACE5vC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,gBAAgB6M,eAAe,gBAGxDrQ,EAAAC,EAAAC,cAAC2Q,EAAA,cAAD,CAAeC,GAAG,iBAChB9Q,EAAAC,EAAAC,cAACwvC,GAAAzvC,EAAI2vC,KAAL,KACE5vC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,mBAAmB6M,eAAe,mBAG3DrQ,EAAAC,EAAAC,cAAC2Q,EAAA,cAAD,CAAeC,GAAG,YAChB9Q,EAAAC,EAAAC,cAACwvC,GAAAzvC,EAAI2vC,KAAL,KACE5vC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,cAAc6M,eAAe,cAGtDrQ,EAAAC,EAAAC,cAAC2Q,EAAA,cAAD,CAAeC,GAAG,YAChB9Q,EAAAC,EAAAC,cAACwvC,GAAAzvC,EAAI2vC,KAAL,KACE5vC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,cAAc6M,eAAe,cAGtDrQ,EAAAC,EAAAC,cAAC2Q,EAAA,cAAD,CAAeC,GAAG,UAChB9Q,EAAAC,EAAAC,cAACwvC,GAAAzvC,EAAI2vC,KAAL,KACE5vC,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAkB5M,GAAG,YAAY6M,eAAe,yDCpDxDw/B,GAAgB,CACpBnwC,IAAK,OACLowC,cAGIC,GAAmBC,aAAeH,GAAe7+B,QC8CxCi/B,oLArCJ,IAAAC,EDPI,WAAiE,IAAzCnrC,EAAyCqI,UAAAxI,OAAA,QAAAzC,IAAAiL,UAAA,GAAAA,UAAA,GAAJ,GACpEnM,EAAQkvC,aAAYJ,GAAkBhrC,EAAcqrC,aAAgBC,OAE1E,MAAO,CAAEpvC,QAAOqvC,UADEC,aAAatvC,ICMAuvC,CAAe,CAAEvxC,SAAUuF,OAAhDvD,EADDivC,EACCjvC,MAAOqvC,EADRJ,EACQI,UAEf,OAQEtwC,EAAAC,EAAAC,cAAC5B,EAAA,EAAD,CAAU2C,MAAOA,GACfjB,EAAAC,EAAAC,cAACuwC,EAAA,EAAD,CAAahe,QAAS,KAAM6d,UAAWA,GACrCtwC,EAAAC,EAAAC,cAACwwC,EAAD,KACE1wC,EAAAC,EAAAC,cAACywC,EAAA,cAAD,CAAQC,SAAU9rC,kBAChB9E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2wC,GAAD,MACA7wC,EAAAC,EAAAC,cAAC4wC,EAAA,EAAD,KACE9wC,EAAAC,EAAAC,cAAC4wC,EAAA,EAAD,CAAOnB,OAAK,EAACoB,KAAK,IAAIC,UAAW1C,KACjCtuC,EAAAC,EAAAC,cAAC4wC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAW3sB,KACrCrkB,EAAAC,EAAAC,cAAC4wC,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAWlhB,KACvC9vB,EAAAC,EAAAC,cAAC4wC,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWlf,KACpC9xB,EAAAC,EAAAC,cAAC4wC,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAWrL,KACvC3lC,EAAAC,EAAAC,cAAC4wC,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAW5M,KAClCpkC,EAAAC,EAAAC,cAAC4wC,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAW9F,KAClClrC,EAAAC,EAAAC,cAAC4wC,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAW7C,KAChCnuC,EAAAC,EAAAC,cAAC4wC,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAW3C,kBA3BhCzuC,IAAMe,WCblBswC,kBAAch/B,SAASC,eAAe,SACxB,OAAhB++B,IACFC,IAASC,OAAOnxC,EAAAC,EAAAC,cAACkxC,GAAD,MAASH,ItG+GrB,kBAAmBxsC,WACrBA,UAAU4sC,cAAcC,MAAMC,KAAK,SAAAhjC,GACjCA,EAAaijC,mCuG7InBv3C,EAAAC,QAAA,CAAkBc,UAAA,4BAAAq6B,WAAA,6BAAAN,WAAA,6BAAAO,YAAA,8BAAAJ,QAAA,0BAAAF,SAAA","file":"static/js/main.277d14bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"liftingView\":\"LiftingView_liftingView__W3VXA\",\"middleParentContainer\":\"LiftingView_middleParentContainer__1ysAw\",\"leftCardContainer\":\"LiftingView_leftCardContainer__2banw\",\"rightCardContainer\":\"LiftingView_rightCardContainer__1sjfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"ColorPicker_swatch__2ipyO\",\"color\":\"ColorPicker_color__cXLvH\",\"onTop\":\"ColorPicker_onTop__1HUyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"LiftingHeader_header__3YEwh\",\"lifterName\":\"LiftingHeader_lifterName__2Vzfo\",\"info\":\"LiftingHeader_info__3mt5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlPanel\":\"ResultsView_controlPanel__J3R0v\",\"dropdown\":\"ResultsView_dropdown__2UB4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftDivider\":\"OneFlightOrder_leftDivider__8pDMh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BarLoad_container__2ae8O\",\"rackInfo\":\"BarLoad_rackInfo__2RVUT\",\"bar\":\"BarLoad_bar__TP6yB\",\"kg50\":\"BarLoad_kg50__i7LXH\",\"kg25\":\"BarLoad_kg25__nlLuS\",\"kg20\":\"BarLoad_kg20__3xVPK\",\"kg15\":\"BarLoad_kg15__nFGDt\",\"kg10\":\"BarLoad_kg10__2mAso\",\"kg5\":\"BarLoad_kg5__2H1CX\",\"kg2p5\":\"BarLoad_kg2p5__hc46t\",\"kg1p25\":\"BarLoad_kg1p25__2YvAd\",\"kg1\":\"BarLoad_kg1__3JT5m\",\"kg0p75\":\"BarLoad_kg0p75__3ebq8\",\"kg0p5\":\"BarLoad_kg0p5__3ehD9\",\"kg0p25\":\"BarLoad_kg0p25__1nUX-\",\"lbs100\":\"BarLoad_lbs100__VaSr7\",\"lbs55\":\"BarLoad_lbs55__TustM\",\"lbs45\":\"BarLoad_lbs45__DubJx\",\"lbs35\":\"BarLoad_lbs35__37o3u\",\"lbs25\":\"BarLoad_lbs25__35m-j\",\"lbs10\":\"BarLoad_lbs10__162Qu\",\"lbs5\":\"BarLoad_lbs5__3B-J3\",\"lbs2p5\":\"BarLoad_lbs2p5__lnKdM\",\"lbs1p25\":\"BarLoad_lbs1p25__1yMbs\",\"lbs0p5\":\"BarLoad_lbs0p5__1LZiS\",\"collar\":\"BarLoad_collar__3IXT7\",\"error\":\"BarLoad_error__1t6Re\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"liftingtable\":\"LiftingTable_liftingtable__2-Rse\",\"textCell\":\"LiftingTable_textCell__gOmZ-\",\"smallCell\":\"LiftingTable_smallCell__vwNWg\",\"spacerCell\":\"LiftingTable_spacerCell__3EnYx\",\"activeColumn\":\"LiftingTable_activeColumn__WQ704\",\"attemptInputCell\":\"LiftingTable_attemptInputCell__1YoPG\",\"current\":\"LiftingTable_current__1v05Z\",\"goodlift\":\"LiftingTable_goodlift__1v8vY\",\"nolift\":\"LiftingTable_nolift__GDNkx\",\"attemptInput\":\"LiftingTable_attemptInput__tuKcd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"ContentArea_contentArea__3c6kc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"LiftingFooter_footer__2Mb6I\",\"leftControls\":\"LiftingFooter_leftControls__kesKc\",\"rightControls\":\"LiftingFooter_rightControls__mXLjl\",\"fullscreen\":\"LiftingFooter_fullscreen__1HPVI\",\"goodLift\":\"LiftingFooter_goodLift__T-O7p\",\"noLift\":\"LiftingFooter_noLift__3-y0k\",\"selector\":\"LiftingFooter_selector__1Ndtq\"};","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport de from \"./de.json\";\nimport eo from \"./eo.json\";\nimport en from \"./en.json\";\nimport es from \"./es.json\";\nimport fr from \"./fr.json\";\nimport hr from \"./hr.json\";\nimport it from \"./it.json\";\nimport lt from \"./lt.json\";\nimport nl from \"./nl.json\";\nimport pt from \"./pt.json\";\nimport ru from \"./ru.json\";\nimport tr from \"./tr.json\";\nimport zh_Hans from \"./zh-Hans.json\";\n\nexport default { de, eo, en, es, fr, hr, it, lt, nl, pt, ru, tr, \"zh-Hans\": zh_Hans };\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport translations from \"../../translations\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  language: Language;\n}\n\ntype Props = StateProps;\n\nclass OpenLifterIntlProvider extends React.Component<Props> {\n  render() {\n    const language = this.props.language;\n    if (typeof language !== \"string\") {\n      throw new Error(\"language is not a string\");\n    }\n\n    // Load our translations from the json files\n    // TODO: This typing could be nicer, we should be able to state that es/eo = {}, en = undefined\n    const messages = (translations as any)[language];\n\n    return (\n      // This is going to wrap any children passed to this component with an IntlProvider\n      // This will put translations of all of our child components in our app\n      <IntlProvider locale={language} defaultLocale=\"en\" key={language} messages={messages}>\n        {this.props.children}\n      </IntlProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  language: state.language\n});\n\nexport default connect(mapStateToProps)(OpenLifterIntlProvider);\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport { changeLanguage } from \"../../actions/languageActions\";\nimport { Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport { Dispatch } from \"redux\";\nimport { FormControlTypeHack } from \"../../types/utils\";\n\ninterface StateProps {\n  language: Language;\n}\n\ninterface DispatchProps {\n  changeLanguage: (event: React.FormEvent<FormControlTypeHack>) => any;\n}\n\ntype Props = StateProps & DispatchProps;\n\n// TODO: Can we get these from the i18n lib somehow?\nconst languageOptions = [\n  <option key=\"de\" value=\"de\">\n    Deutsch (de)\n  </option>,\n  <option key=\"en\" value=\"en\">\n    English (en)\n  </option>,\n  <option key=\"eo\" value=\"eo\">\n    Esperanto (eo)\n  </option>,\n  <option key=\"es\" value=\"es\">\n    Español (es)\n  </option>,\n  <option key=\"fr\" value=\"fr\">\n    Français (fr)\n  </option>,\n  <option key=\"hr\" value=\"hr\">\n    Hrvatski (hr)\n  </option>,\n  <option key=\"it\" value=\"it\">\n    Italiano (it)\n  </option>,\n  <option key=\"lt\" value=\"lt\">\n    Lietuvių (lt)\n  </option>,\n  <option key=\"nl\" value=\"nl\">\n    Nederlands (nl)\n  </option>,\n  <option key=\"pt\" value=\"pt\">\n    Português (pt)\n  </option>,\n  <option key=\"ru\" value=\"ru\">\n    Русский (ru)\n  </option>,\n  <option key=\"tr\" value=\"tr\">\n    Türkçe (tr)\n  </option>,\n  <option key=\"zh-Hans\" value=\"zh-Hans\">\n    简体中文 (zh-Hans)\n  </option>\n];\n\nclass LanguageSelector extends React.Component<Props> {\n  render() {\n    return (\n      <FormControl\n        as=\"select\"\n        defaultValue={this.props.language}\n        onChange={this.props.changeLanguage}\n        className=\"custom-select\"\n      >\n        {languageOptions}\n      </FormControl>\n    );\n  }\n}\n\n// Allows react component to subscribe to redux state updates\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    // TODO: Can we make this more type safe and avoid the cast?\n    changeLanguage: (event: React.FormEvent<FormControlTypeHack>) =>\n      dispatch(changeLanguage(event.currentTarget.value as Language))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageSelector);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { ChangeLanguageAction } from \"../types/actionTypes\";\nimport { Language } from \"../types/dataTypes\";\n\nexport const changeLanguage = (language: Language): ChangeLanguageAction => {\n  return {\n    type: \"CHANGE_LANGUAGE\",\n    language\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { OverwriteStoreAction } from \"../types/actionTypes\";\nimport { GlobalState } from \"../types/stateTypes\";\n\n// Overwrites the entire Redux store, handled separately by each reducer.\n// This is used to implement \"Load from File\" functionality.\nexport const overwriteStore = (store: GlobalState): OverwriteStoreAction => {\n  return {\n    type: \"OVERWRITE_STORE\",\n    store: store\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines all the project-wide shared Redux state types in a single place.\n//\n// Because the Redux store is immutable, all types are internally prefixed\n// with the \"readonly \" covariant type, which makes them immutable.\n\nimport { FormControl, FormControlProps } from \"react-bootstrap\";\nimport { AgeCoefficients, Flight, Formula, Lift, Sex } from \"./dataTypes\";\n\n// This is purely used by the type system to raise a compile error when\n// we are trying to perform an exhaustive check (eg in a switch).\n// This allows us to have a compile time error, but also have graceful runtime fallback.\nexport function checkExhausted(value: never): void {}\n\n// A workaround for bad typing of react-bootstrap. Open to better suggestions.\n// see: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/16208 for more context\nexport type FormControlTypeHack = FormControlProps & FormControl & HTMLOrSVGElement;\n\n// Convenience function to narrow a variables type down to a string\nexport function isString(value: any): value is string {\n  return typeof value === \"string\";\n}\n\n// Throws an error if value isn't a string, narrows the type if it is.\nexport function assertString(value: any): value is string {\n  const result = isString(value);\n  if (!result) {\n    throw new Error(`Expected a string, but got ${value}`);\n  }\n  return result;\n}\n\n// Throws an error if value isn't a number, narrows the type if it is.\nexport function assertNumber(value: any): value is number {\n  const result = typeof value === \"number\";\n  if (!result) {\n    throw new Error(`Expected a number, but got ${value}`);\n  }\n  return result;\n}\n\n// Throws an error if value isn't a a valid flight, narrows the type if it is.\nexport function assertFlight(value: string): value is Flight {\n  const flight: Flight = value as Flight;\n  switch (flight) {\n    case \"A\":\n    case \"B\":\n    case \"C\":\n    case \"D\":\n    case \"E\":\n    case \"F\":\n    case \"G\":\n    case \"H\":\n    case \"I\":\n    case \"J\":\n    case \"K\":\n    case \"L\":\n    case \"M\":\n    case \"N\":\n    case \"O\":\n    case \"P\":\n      return true;\n    default:\n      checkExhausted(flight);\n      throw new Error(`Expected a string which corresponds to a Flight, got \"${value}\"`);\n  }\n}\n\n// Throws an error if value isn't a a valid flight, narrows the type if it is.\nexport function assertSex(value: string): value is Sex {\n  const sex = value as Sex;\n  switch (sex) {\n    case \"M\":\n    case \"F\":\n    case \"Mx\":\n      return true;\n    default:\n      checkExhausted(sex);\n      throw new Error(`Expected a string which corresponds to a Sex, got \"${value}\"`);\n  }\n}\n\nexport function assertLift(value: string): value is Lift {\n  const lift = value as Lift;\n  switch (lift) {\n    case \"S\":\n    case \"B\":\n    case \"D\":\n      return true;\n    default:\n      checkExhausted(lift);\n      throw new Error(`Expected a string which corresponds to a Lift, got \"${value}\"`);\n  }\n}\n\nexport function assertAgeCoefficients(value: string): value is AgeCoefficients {\n  const coefficient = value as AgeCoefficients;\n  switch (coefficient) {\n    case \"FosterMcCulloch\":\n    case \"None\":\n      return true;\n    default:\n      checkExhausted(coefficient);\n      throw new Error(`Expected a string which corresponds to a valid AgeCoefficients, got \"${value}\"`);\n  }\n}\n\nexport function assertFormula(value: string): value is Formula {\n  const formula = value as Formula;\n  switch (formula) {\n    case \"AH\":\n    case \"Bodyweight Multiple\":\n    case \"Dots\":\n    case \"Glossbrenner\":\n    case \"IPF Points\":\n    case \"NASA Points\":\n    case \"Reshel\":\n    case \"Schwartz/Malone\":\n    case \"Total\":\n    case \"Wilks\":\n      return true;\n    default:\n      checkExhausted(formula);\n      throw new Error(`Expected a string which corresponds to a Formula, got \"${value}\"`);\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Entry, Language } from \"../types/dataTypes\";\n\n// Defines operations for converting between different units, usually\n// pounds and kg.\n\nexport const kg2lbs = (kg: number): number => {\n  return kg * 2.20462262;\n};\n\nexport const lbs2kg = (lbs: number): number => {\n  return lbs / 2.20462262;\n};\n\n// Converts a displayed String to a Number, even if that string is localized.\nexport const string2number = (s: string): number => {\n  return Number(s.replace(\",\", \".\"));\n};\n\n// Renders a weight (kg or lbs) for display, rounding to two decimal places,\n// hiding unnecessary zeros on the right.\n//\n// This rounding behavior eliminates all the visual inconsistencies of lbs->kg\n// conversion -- for example, how 112.5lbs isn't representable exactly in kg.\nexport const displayWeight = (weight: number, lang?: Language): string => {\n  const locale = lang === undefined ? \"en\" : lang;\n\n  // This matches the OpenPowerlifting WeightKg::as_lbs() conversion logic.\n  // First, round to the hundredth place, stored as an integer.\n  let rounded = Math.round(weight * 100);\n\n  // If the fractional part is close to another tenth, add a correction.\n  // This happens due to floating-point imprecision.\n  if (rounded % 10 === 9) {\n    // Add 0.01 (still stored as an integer).\n    rounded += 1;\n  }\n\n  // Convert back to normal floating-point without truncation.\n  rounded = rounded / 100;\n\n  return new Intl.NumberFormat(locale, { useGrouping: false, maximumFractionDigits: 2 }).format(rounded);\n};\n\n// Renders a weight (kg or lbs) for display, truncating to one decimal place.\n// hiding unnecessary zeros on the right.\nexport const displayWeightOnePlace = (weight: number, lang?: Language): string => {\n  const locale = lang === undefined ? \"en\" : lang;\n\n  // This matches the OpenPowerlifting WeightKg::as_lbs() conversion logic.\n  // First, round to the hundredth place, stored as an integer.\n  let rounded = Math.round(weight * 100);\n\n  // If the fractional part is close to another tenth, add a correction.\n  // This happens due to floating-point imprecision.\n  if (rounded % 10 === 9) {\n    // Add 0.01 (still stored as an integer).\n    rounded += 1;\n  }\n\n  // Truncate to the tenth place, then convert back to normal floating-point.\n  const truncated = Math.trunc(rounded / 10) / 10;\n\n  return new Intl.NumberFormat(locale, { useGrouping: false, maximumFractionDigits: 1 }).format(truncated);\n};\n\n// Points display with two fixed decimal places (including zeros).\nexport const displayPoints = (points: number, lang: Language): string => {\n  return new Intl.NumberFormat(lang, {\n    useGrouping: false,\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(points);\n};\n\n// Display a generic number that is neither a weight nor points.\n// This is intended for things like ages, day numbers, etc.\nexport const displayNumber = (number: number, lang: Language): string => {\n  // Grouping should not be used: otherwise ',' is ambiguous as a separator.\n  return new Intl.NumberFormat(lang, { useGrouping: false }).format(number);\n};\n\n// Display an ordinal number representing a place.\n// In Spanish, Portuguese, and Italian, the ordinal differs based on the lifter's Sex.\nexport const displayPlaceOrdinal = (number: number, entry: Entry, lang: Language): string => {\n  switch (lang) {\n    case \"es\":\n    case \"pt\":\n      return displayNumber(number, lang) + (entry.sex === \"F\" ? \"ª\" : \"º\");\n    default:\n      return displayNumber(number, lang);\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Gets translation strings directly given the current language, without\n// having to thread the IntlContext everywhere.\n//\n// This works because we store the language in the Redux store in addition\n// to in the React context.\n\nimport translations from \"../translations\";\nimport { Equipment, Event, Flight, Language, Sex, TranslationId } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\nimport { displayWeight } from \"./units\";\n\n// Fetches a simple string from the translations store. No formatting is performed.\nexport const getString = (id: TranslationId, lang: Language): string => {\n  return translations[lang][id];\n};\n\n// Localizes an Equipment value.\nexport const localizeEquipment = (equipment: Equipment, language: Language): string => {\n  switch (equipment) {\n    case \"Bare\":\n      return getString(\"equipment.bare\", language);\n    case \"Sleeves\":\n      return getString(\"equipment.sleeves\", language);\n    case \"Wraps\":\n      return getString(\"equipment.wraps\", language);\n    case \"Single-ply\":\n      return getString(\"equipment.single-ply\", language);\n    case \"Multi-ply\":\n      return getString(\"equipment.multi-ply\", language);\n    default:\n      checkExhausted(equipment);\n      return \"\";\n  }\n};\n\n// Delocalizes an Equipment value.\nexport const delocalizeEquipment = (text: string, language: Language): Equipment => {\n  if (text === getString(\"equipment.bare\", language)) return \"Bare\";\n  if (text === getString(\"equipment.sleeves\", language)) return \"Sleeves\";\n  if (text === getString(\"equipment.wraps\", language)) return \"Wraps\";\n  if (text === getString(\"equipment.single-ply\", language)) return \"Single-ply\";\n  if (text === getString(\"equipment.multi-ply\", language)) return \"Multi-ply\";\n  throw new Error(\"Failed to delocalize Equipment: \" + text);\n};\n\n// Localizes an Event value.\nexport const localizeEvent = (event: Event, language: Language): string => {\n  switch (event) {\n    case \"S\":\n      return getString(\"event.s\", language);\n    case \"B\":\n      return getString(\"event.b\", language);\n    case \"D\":\n      return getString(\"event.d\", language);\n    case \"SB\":\n      return getString(\"event.sb\", language);\n    case \"SD\":\n      return getString(\"event.sd\", language);\n    case \"BD\":\n      return getString(\"event.bd\", language);\n    case \"SBD\":\n      return getString(\"event.sbd\", language);\n    default:\n      checkExhausted(event);\n      return \"\";\n  }\n};\n\n// Delocalizes an Event value.\nexport const delocalizeEvent = (text: string, language: Language): Event => {\n  if (text === getString(\"event.s\", language)) return \"S\";\n  if (text === getString(\"event.b\", language)) return \"B\";\n  if (text === getString(\"event.d\", language)) return \"D\";\n  if (text === getString(\"event.sb\", language)) return \"SB\";\n  if (text === getString(\"event.sd\", language)) return \"SD\";\n  if (text === getString(\"event.bd\", language)) return \"BD\";\n  if (text === getString(\"event.sbd\", language)) return \"SBD\";\n  throw new Error(\"Failed to delocalize Event: \" + text);\n};\n\n// Localizes a Flight value.\nexport const localizeFlight = (flight: Flight, language: Language): string => {\n  switch (flight) {\n    case \"A\":\n      return getString(\"flight.a\", language);\n    case \"B\":\n      return getString(\"flight.b\", language);\n    case \"C\":\n      return getString(\"flight.c\", language);\n    case \"D\":\n      return getString(\"flight.d\", language);\n    case \"E\":\n      return getString(\"flight.e\", language);\n    case \"F\":\n      return getString(\"flight.f\", language);\n    case \"G\":\n      return getString(\"flight.g\", language);\n    case \"H\":\n      return getString(\"flight.h\", language);\n    case \"I\":\n      return getString(\"flight.i\", language);\n    case \"J\":\n      return getString(\"flight.j\", language);\n    case \"K\":\n      return getString(\"flight.k\", language);\n    case \"L\":\n      return getString(\"flight.l\", language);\n    case \"M\":\n      return getString(\"flight.m\", language);\n    case \"N\":\n      return getString(\"flight.n\", language);\n    case \"O\":\n      return getString(\"flight.o\", language);\n    case \"P\":\n      return getString(\"flight.p\", language);\n    default:\n      checkExhausted(flight);\n      return \"\";\n  }\n};\n\n// Delocalizes a Flight value.\nexport const delocalizeFlight = (text: string, language: Language): Flight => {\n  // The \"A\" character gets special handling for the benefit of Cyrillic.\n  // Latin \"A\" and Cyrillic \"A\" are visually identical, but differ in encoding.\n  if (text === getString(\"flight.a\", language) || text === \"A\") return \"A\";\n\n  if (text === getString(\"flight.b\", language)) return \"B\";\n  if (text === getString(\"flight.c\", language)) return \"C\";\n  if (text === getString(\"flight.d\", language)) return \"D\";\n  if (text === getString(\"flight.e\", language)) return \"E\";\n  if (text === getString(\"flight.f\", language)) return \"F\";\n  if (text === getString(\"flight.g\", language)) return \"G\";\n  if (text === getString(\"flight.h\", language)) return \"H\";\n  if (text === getString(\"flight.i\", language)) return \"I\";\n  if (text === getString(\"flight.j\", language)) return \"J\";\n  if (text === getString(\"flight.k\", language)) return \"K\";\n  if (text === getString(\"flight.l\", language)) return \"L\";\n  if (text === getString(\"flight.m\", language)) return \"M\";\n  if (text === getString(\"flight.n\", language)) return \"N\";\n  if (text === getString(\"flight.o\", language)) return \"O\";\n  if (text === getString(\"flight.p\", language)) return \"P\";\n  throw new Error(\"Failed to delocalize Flight: \" + text);\n};\n\n// Localizes a Sex value.\nexport const localizeSex = (sex: Sex, language: Language): string => {\n  switch (sex) {\n    case \"M\":\n      return getString(\"sex.m\", language);\n    case \"F\":\n      return getString(\"sex.f\", language);\n    case \"Mx\":\n      return getString(\"sex.mx\", language);\n    default:\n      checkExhausted(sex);\n      return \"\";\n  }\n};\n\n// Delocalizes a Sex value.\nexport const delocalizeSex = (text: string, language: Language): Sex => {\n  if (text === getString(\"sex.m\", language)) return \"M\";\n  if (text === getString(\"sex.f\", language)) return \"F\";\n  if (text === getString(\"sex.mx\", language)) return \"Mx\";\n  throw new Error(\"Failed to delocalize Sex: \" + text);\n};\n\n// Localizes a Category weightclass string.\n// This is used by the Flight Order and Results pages.\nexport const localizeWeightClassStr = (wtcls: string, language: Language): string => {\n  const isSHW = wtcls.endsWith(\"+\");\n  const asNumber = Number(wtcls.replace(\"+\", \"\"));\n  if (asNumber === 0) return \"\";\n  return displayWeight(asNumber, language) + (isSHW ? \"+\" : \"\");\n};\n\n// Negotiates the default language with the navigator, if possible.\nexport const getDefaultLanguage = (): Language => {\n  const defaultLanguage: Language = \"en\";\n\n  // Make sure that we're in a modern browser.\n  if (typeof navigator !== \"object\" || typeof navigator.languages !== \"object\") {\n    return defaultLanguage;\n  }\n\n  // Iterate over the available languages looking for the first match.\n  const languages: ReadonlyArray<string> = navigator.languages;\n  for (let i = 0; i < languages.length; ++i) {\n    const language = languages[i];\n    if (language in translations) {\n      return language as Language;\n    }\n  }\n\n  return defaultLanguage;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Versioning for the global State object.\n//\n// Incrementing the version string breaks compatibility between implementations,\n// with the expectation that a converter will be automatically applied if possible,\n// such that a version of OpenLifter that internally uses version \"B\" can still\n// load files written in version \"A\", by means of auto-upgrading.\n//\n// This string is stored on the GlobalState as the property \"versions.stateVersion\".\n// Each save file thereby reports its own version.\nexport const stateVersion: string = \"0\";\n\n// Versioning for the OpenLifter project as a whole.\n//\n// This is safely incrementable on *releases*. Its function is exclusively to alert\n// users to \"automatic\" upgrades of the software, and it is reported explicitly\n// on the Home page.\n//\n// Changing this version does *not* represent data incompatibilities; for that,\n// please use the \"stateVersion\".\n//\n// This string is stored on the GlobalState as the property \"versions.releaseVersion\".\n//\n// It's defined by the '.env' file in the project root, which references\n// the package.json variable 'version'.\nexport const releaseVersion: string =\n  typeof process.env.REACT_APP_VERSION === \"string\" ? process.env.REACT_APP_VERSION : \"[undefined REACT_APP_VERSION]\";\n\n// Strictly-presentational representation of when the releaseVersion was changed.\n// Update this concurrently with modifying the releaseVersion.\n// This value is not stored in the state: it's purely informational.\nexport const releaseDate: string = \"2019-12-02\";\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// See comments in src/versions.js.\n\nimport { stateVersion, releaseVersion } from \"../versions\";\nimport { OverwriteStoreAction } from \"../types/actionTypes\";\nimport { VersionsState } from \"../types/stateTypes\";\n\nconst initialState: VersionsState = {\n  stateVersion,\n  releaseVersion\n};\n\ntype Action = OverwriteStoreAction;\n\nexport default (state: VersionsState = initialState, action: Action): VersionsState => {\n  switch (action.type) {\n    case \"OVERWRITE_STORE\":\n      return action.store.versions;\n\n    default:\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for working with Dates, which is trickier than you might expect:\n// the global state wants strings in YYYY-MM-DD, date objects get created from\n// strings in UTC time, and React widgets create Dates in local time.\n\nexport const iso8601ToLocalDate = (s: string): Date => {\n  const [yearStr, monthStr, dayStr] = s.split(\"-\");\n\n  const year = parseInt(yearStr, 10);\n  const month = parseInt(monthStr, 10);\n  const day = parseInt(dayStr, 10);\n\n  const d = new Date();\n  d.setFullYear(year, month - 1, day);\n  return d;\n};\n\nexport const localDateToIso8601 = (d: Date): string => {\n  const year: number = d.getFullYear();\n  const month: number = d.getMonth() + 1;\n  const day: number = d.getDate();\n\n  const yearStr = String(year);\n  let monthStr = String(month);\n  if (monthStr.length === 1) {\n    monthStr = \"0\" + monthStr;\n  }\n  let dayStr = String(day);\n  if (dayStr.length === 1) {\n    dayStr = \"0\" + dayStr;\n  }\n\n  return yearStr + \"-\" + monthStr + \"-\" + dayStr;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Color codes must be in upper-case to match the ColorPicker output.\nexport const PlateColors = {\n  PLATE_DEFAULT_BLACK: \"#000000\",\n  PLATE_DEFAULT_WHITE: \"#FFFFFF\",\n  PLATE_DEFAULT_BLUE: \"#4990E2\",\n  PLATE_DEFAULT_GREEN: \"#2AB003\",\n  PLATE_DEFAULT_GRAY: \"#575757\",\n  PLATE_DEFAULT_RED: \"#FF0000\",\n  PLATE_DEFAULT_YELLOW: \"#FFEF2A\",\n  PLATE_DEFAULT_ORANGE: \"#F25A1D\",\n  PLATE_DEFAULT_PINK: \"#E81FA5\",\n  PLATE_DEFAULT_PURPLE: \"#9B16F2\"\n};\n\nexport type PlateColorsType = keyof typeof PlateColors;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { localDateToIso8601 } from \"../logic/date\";\nimport { kg2lbs, lbs2kg, displayWeight } from \"../logic/units\";\nimport { PlateColors } from \"../constants/plateColors\";\n\nimport { MeetSetupAction, OverwriteStoreAction } from \"../types/actionTypes\";\nimport { Language, Plate } from \"../types/dataTypes\";\nimport { MeetState } from \"../types/stateTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nconst defaultPlatformsOnDay = 1;\n\nconst defaultBarAndCollarsWeightKg = 25; // Assuming metal 2.5kg collars.\nconst defaultBarAndCollarsWeightLbs = 45; // Assuming plastic collars.\n\n// Default kg plates, allowing for increments of 0.5kg.\nconst defaultPlatesKg: ReadonlyArray<Plate> = [\n  { weightKg: 50, pairCount: 0, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: 25, pairCount: 8, color: PlateColors.PLATE_DEFAULT_RED },\n  { weightKg: 20, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\n  { weightKg: 15, pairCount: 1, color: PlateColors.PLATE_DEFAULT_YELLOW },\n  { weightKg: 10, pairCount: 1, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: 5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\n  { weightKg: 2.5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\n  { weightKg: 1.25, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\n  { weightKg: 1, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\n  { weightKg: 0.75, pairCount: 1, color: PlateColors.PLATE_DEFAULT_RED },\n  { weightKg: 0.5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: 0.25, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE }\n];\n\n// Default lbs plates, allowing for increments of 1lb.\nconst defaultPlatesLbs: ReadonlyArray<Plate> = [\n  { weightKg: lbs2kg(100), pairCount: 0, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: lbs2kg(55), pairCount: 0, color: PlateColors.PLATE_DEFAULT_RED },\n  { weightKg: lbs2kg(45), pairCount: 8, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(35), pairCount: 0, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(25), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(10), pairCount: 2, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(5), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(2.5), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(1.25), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(0.5), pairCount: 2, color: PlateColors.PLATE_DEFAULT_GRAY }\n];\n\nconst initialState: MeetState = {\n  // Sanction information.\n  name: \"\",\n  country: \"\",\n  state: \"\",\n  city: \"\",\n  federation: \"\",\n  date: localDateToIso8601(new Date()),\n  lengthDays: 1,\n  platformsOnDays: [defaultPlatformsOnDay],\n\n  // Competition Rules.\n  divisions: [],\n  weightClassesKgMen: [],\n  weightClassesKgWomen: [],\n  weightClassesKgMx: [],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: true,\n\n  // Weights and Loading Setup.\n  inKg: true,\n  showAlternateUnits: true,\n  squatBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\n  benchBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\n  deadliftBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\n  plates: defaultPlatesKg\n};\n\n// Given a sorted list of weight classes (in kg) and a bodyweight (in kg),\n// return a string describing the weight class.\nexport const getWeightClassStr = (\n  classes: ReadonlyArray<number>,\n  bodyweightKg: number,\n  language?: Language\n): string => {\n  if (bodyweightKg === 0) return \"\";\n  if (classes.length === 0) return \"\";\n\n  for (let i = 0; i < classes.length; i++) {\n    if (bodyweightKg <= classes[i]) {\n      return displayWeight(classes[i], language);\n    }\n  }\n  return displayWeight(classes[classes.length - 1], language) + \"+\";\n};\n\n// Converts a kg weightclass to pounds.\n//\n// For example, the 90kg class is technically 198.41lbs,\n// but this will return \"198\".\nexport const wtclsStrKg2Lbs = (kgcls: string): string => {\n  const shw: boolean = kgcls.endsWith(\"+\");\n  const asNumber = Number(kgcls.replace(\"+\", \"\"));\n\n  // Convert to pounds and round down.\n  let truncated = Math.floor(kg2lbs(asNumber));\n\n  // This works for everything but the 183 class, which\n  // rounds down to 182.\n  if (truncated === 182) {\n    truncated = 183;\n  }\n\n  return shw ? String(truncated) + \"+\" : String(truncated);\n};\n\n// Given a sorted list of weight classes (in kg) and a bodyweight (in kg),\n// return a string describing the weight class.\n//\n// This is a separate method because it turns out that many exact translations\n// of kilo values are not what the audience expects for traditionally-reported\n// pounds classes. So a bunch of rounding must occur.\nexport const getWeightClassLbsStr = (classes: ReadonlyArray<number>, bodyweightKg: number): string => {\n  if (bodyweightKg === 0) return \"\";\n  if (classes.length === 0) return \"\";\n\n  for (let i = 0; i < classes.length; i++) {\n    if (bodyweightKg <= classes[i]) {\n      return wtclsStrKg2Lbs(String(classes[i]));\n    }\n  }\n  return wtclsStrKg2Lbs(String(classes[classes.length - 1])) + \"+\";\n};\n\ntype Action = MeetSetupAction | OverwriteStoreAction;\n\nexport default (state: MeetState = initialState, action: Action): MeetState => {\n  switch (action.type) {\n    case \"SET_MEET_NAME\":\n      return { ...state, name: action.name };\n\n    case \"SET_FORMULA\":\n      return { ...state, formula: action.formula };\n\n    case \"SET_FEDERATION\":\n      return { ...state, federation: action.federation };\n\n    case \"SET_DIVISIONS\":\n      return { ...state, divisions: action.divisions };\n\n    case \"SET_MEET_DATE\":\n      return { ...state, date: action.date };\n\n    case \"SET_LENGTH_DAYS\": {\n      const numDays = Number(action.length);\n\n      if (numDays >= state.platformsOnDays.length) {\n        const diff = numDays - state.platformsOnDays.length;\n\n        const newPlatformsOnDays: Array<number> = state.platformsOnDays.slice();\n        for (let i = 0; i < diff; i++) {\n          newPlatformsOnDays.push(defaultPlatformsOnDay);\n        }\n\n        return { ...state, lengthDays: numDays, platformsOnDays: newPlatformsOnDays };\n      }\n      return { ...state, lengthDays: numDays };\n    }\n\n    case \"SET_PLATFORM_COUNT\": {\n      const day = Number(action.day);\n      const count = Number(action.count);\n\n      const newPlatformsOnDays: Array<number> = state.platformsOnDays.slice();\n      newPlatformsOnDays[day - 1] = count;\n      return { ...state, platformsOnDays: newPlatformsOnDays };\n    }\n\n    case \"SET_IN_KG\": {\n      // Changing the units also changes the loading, so re-initialize from defaults.\n      const defaultPlates = action.inKg ? defaultPlatesKg : defaultPlatesLbs;\n      const defaultBar = action.inKg ? defaultBarAndCollarsWeightKg : lbs2kg(defaultBarAndCollarsWeightLbs);\n      return {\n        ...state,\n        inKg: action.inKg,\n        plates: defaultPlates,\n        squatBarAndCollarsWeightKg: defaultBar,\n        benchBarAndCollarsWeightKg: defaultBar,\n        deadliftBarAndCollarsWeightKg: defaultBar\n      };\n    }\n\n    case \"SET_WEIGHTCLASSES\": {\n      const sex = action.sex;\n      const classesKg = action.classesKg;\n      switch (sex) {\n        case \"M\":\n          return { ...state, weightClassesKgMen: classesKg };\n        case \"F\":\n          return { ...state, weightClassesKgWomen: classesKg };\n        case \"Mx\":\n          return { ...state, weightClassesKgMx: classesKg };\n        default:\n          checkExhausted(sex);\n          return state;\n      }\n    }\n\n    case \"SET_BAR_AND_COLLARS_WEIGHT_KG\": {\n      switch (action.lift) {\n        case \"S\":\n          return { ...state, squatBarAndCollarsWeightKg: action.weightKg };\n        case \"B\":\n          return { ...state, benchBarAndCollarsWeightKg: action.weightKg };\n        case \"D\":\n          return { ...state, deadliftBarAndCollarsWeightKg: action.weightKg };\n        default:\n          checkExhausted(action.lift);\n          return state;\n      }\n    }\n\n    case \"SET_PLATE_CONFIG\": {\n      const { weightKg, pairCount, color } = action;\n\n      // Find the index of the object in the platesOnSide array by comparing weights.\n      const index = state.plates.findIndex(p => p.weightKg === weightKg);\n\n      // Clone the array.\n      const newPlates: Array<Plate> = state.plates.slice();\n\n      // Replace with a new object in the new array.\n      newPlates[index] = { weightKg, pairCount, color };\n\n      return { ...state, plates: newPlates };\n    }\n\n    case \"UPDATE_MEET\": {\n      const changes = action.changes;\n\n      // Make a new MeetState with just the changes overwritten.\n      const newState = Object.assign({}, state);\n      return Object.assign(newState, changes);\n    }\n\n    case \"OVERWRITE_STORE\":\n      return action.store.meet;\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for creating and working with Entry objects.\n\nimport { Entry, Lift, Event, FieldKg, FieldStatus } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\n// Length of {squat,bench,deadlift}{Kg,Status} in each Entry.\nexport const MAX_ATTEMPTS = 5;\n\nexport const newDefaultEntry = (id: number): Entry => {\n  return {\n    // Bookkeeping internal information for OpenLifter.\n    id: id, // The global unique ID of this registration.\n\n    // Information about when the lifter is scheduled to lift.\n    day: 1, // The day on which the lifter is lifting.\n    platform: 1, // The platform on which the lifter is lifting.\n    flight: \"A\", // The flight in which the lifter is lifting.\n\n    // Information about the lifter themselves.\n    name: \"\", // The lifter's name.\n    sex: \"M\", // The lifter's sex.\n    birthDate: \"\", // The lifter's birthdate (YYYY-MM-DD).\n    age: 0, // The lifter's age in years\n    country: \"\", // Lifter's home country, or blank.\n    state: \"\", // Lifter's home state, or blank.\n    intendedWeightClassKg: \"\", // The weightclass for which the lifter registered.\n    equipment: \"Sleeves\", // The equipment category for which the lifter registered.\n    divisions: [], // A list of divisions the lifter entered.\n    events: [], // A list of events the lifter entered.\n\n    // Metadata about the lifter, assigned by the meet director.\n    lot: 0, // The lifter's lot number, for breaking ties in lifting order.\n    memberId: \"\", // Optional federation MemberID, for reporting in results.\n    paid: false, // Used by the meet director for tracking whether the lifter paid.\n    team: \"\", // Optional. Only used in the final results export.\n    notes: \"\", // Free-form text for the meet director to use as a scratchpad.\n\n    // Information added on the \"Weigh-ins\" page.\n    // But we might as well track it in this object.\n    bodyweightKg: 0.0,\n    squatRackInfo: \"\", // A freeform string for the benefit of the loaders.\n    benchRackInfo: \"\", // A freeform string for the benefit of the loaders.\n\n    // Lifting information. Weights always stored internally in kg.\n    squatKg: [0.0, 0.0, 0.0, 0.0, 0.0],\n    benchKg: [0.0, 0.0, 0.0, 0.0, 0.0],\n    deadliftKg: [0.0, 0.0, 0.0, 0.0, 0.0],\n\n    // Lifting information, success state:\n    //  -1 => No Lift.\n    //   0 => Not Yet Done.\n    //   1 => Good Lift.\n    //\n    // Note that this system has the property where corresponding (kg*status)\n    // produces the SquatXKg as expected by the main OpenPowerlifting CSV format.\n    squatStatus: [0, 0, 0, 0, 0],\n    benchStatus: [0, 0, 0, 0, 0],\n    deadliftStatus: [0, 0, 0, 0, 0]\n  };\n};\n\n// Gets the lifter's age, possibly by inferring it from birthDate.\n// If the age couldn't be determined, returns 0.\nexport const getAge = (entry: Entry, meetDate: string): number => {\n  // If the user overrode the Age manually, just take that.\n  if (entry.age > 0) return entry.age;\n\n  // If no birthDate is provided, nothing more can be done.\n  if (entry.birthDate === \"\") return 0;\n\n  // Infer the age given {meetDate, birthDate, day}.\n  let [my, mm, md] = meetDate.split(\"-\").map(s => Number(s));\n  const [by, bm, bd] = entry.birthDate.split(\"-\").map(s => Number(s));\n\n  // Advance the day counter if necessary.\n  // FIXME: This logic assumes that each month has exactly 31 days.\n  if (entry.day > 1) {\n    md += entry.day - 1;\n    if (md > 31) {\n      md -= 31;\n      mm += 1;\n    }\n    if (mm > 12) {\n      md -= 12;\n      my += 1;\n    }\n  }\n\n  const years = my - by;\n  if (years <= 0) return 0;\n\n  // If their birthday occurred in the most recent year, just diff years.\n  if (bm < mm || (bm === mm && bd <= md)) {\n    return years;\n  }\n\n  // Otherwise, their birthday did not occur yet, so this year doesn't count.\n  return years - 1;\n};\n\n// Gets the best squat, including extra attempts that don't count for the total.\nexport const getBest5SquatKg = (entry: Entry): number => {\n  let best3SquatKg = 0.0;\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    if (entry.squatStatus[i] === 1) {\n      best3SquatKg = Math.max(best3SquatKg, entry.squatKg[i]);\n    }\n  }\n  return best3SquatKg;\n};\n\n// Gets the best bench, including extra attempts that don't count for the total.\nexport const getBest5BenchKg = (entry: Entry): number => {\n  let best3BenchKg = 0.0;\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    if (entry.benchStatus[i] === 1) {\n      best3BenchKg = Math.max(best3BenchKg, entry.benchKg[i]);\n    }\n  }\n  return best3BenchKg;\n};\n\n// Gets the best deadlift, including extra attempts that don't count for the total.\nexport const getBest5DeadliftKg = (entry: Entry): number => {\n  let best3DeadliftKg = 0.0;\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    if (entry.deadliftStatus[i] === 1) {\n      best3DeadliftKg = Math.max(best3DeadliftKg, entry.deadliftKg[i]);\n    }\n  }\n  return best3DeadliftKg;\n};\n\n// The ProjectedTotal optimistically assumes that lifters will get *first* attempts\n// that have not yet been taken. It is used for calculating a total while lifters\n// are still squatting and benching.\n//\n// 2nd and 3rd attempts are treated normally, where they only count toward the\n// total if they have been successful.\nexport const getProjectedTotalKg = (entry: Entry): number => {\n  let best3Squat = 0.0;\n  if (entry.squatStatus[0] >= 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\n  if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\n  if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\n\n  let best3Bench = 0.0;\n  if (entry.benchStatus[0] >= 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\n  if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\n  if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\n\n  let best3Dead = 0.0;\n  if (entry.deadliftStatus[0] >= 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\n  if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\n  if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\n\n  // If there was no attempted success for a single lift, return zero.\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\nexport const getProjectedEventTotalKg = (entry: Entry, event: Event): number => {\n  let best3Squat = 0.0;\n  if (event.includes(\"S\")) {\n    if (entry.squatStatus[0] >= 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\n    if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\n    if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\n  }\n\n  let best3Bench = 0.0;\n  if (event.includes(\"B\")) {\n    if (entry.benchStatus[0] >= 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\n    if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\n    if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\n  }\n\n  let best3Dead = 0.0;\n  if (event.includes(\"D\")) {\n    if (entry.deadliftStatus[0] >= 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\n    if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\n    if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\n  }\n\n  // If there was no attempted success for a single lift, return zero.\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\nexport const getBest3SquatKg = (entry: Entry): number => {\n  let best3Squat = 0.0;\n  if (entry.squatStatus[0] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\n  if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\n  if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\n  return best3Squat;\n};\n\nexport const getBest3BenchKg = (entry: Entry): number => {\n  let best3Bench = 0.0;\n  if (entry.benchStatus[0] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\n  if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\n  if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\n  return best3Bench;\n};\n\nexport const getBest3DeadliftKg = (entry: Entry): number => {\n  let best3Dead = 0.0;\n  if (entry.deadliftStatus[0] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\n  if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\n  if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\n  return best3Dead;\n};\n\n// The Total is the sum of best of the first 3 attempts of each lift.\nexport const getFinalTotalKg = (entry: Entry): number => {\n  const best3Squat = getBest3SquatKg(entry);\n  const best3Bench = getBest3BenchKg(entry);\n  const best3Dead = getBest3DeadliftKg(entry);\n\n  // If there was no attempted success for a single lift, return zero.\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\n// Restricts the total calculation to just for the specified Event.\nexport const getFinalEventTotalKg = (entry: Entry, event: Event): number => {\n  let best3Squat = 0.0;\n  if (event.includes(\"S\")) {\n    best3Squat = getBest3SquatKg(entry);\n    if (best3Squat === 0) return 0.0;\n  }\n\n  let best3Bench = 0.0;\n  if (event.includes(\"B\")) {\n    best3Bench = getBest3BenchKg(entry);\n    if (best3Bench === 0) return 0.0;\n  }\n\n  let best3Dead = 0.0;\n  if (event.includes(\"D\")) {\n    best3Dead = getBest3DeadliftKg(entry);\n    if (best3Dead === 0) return 0.0;\n  }\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\n// Filter entries to only get lifters that are lifting on a given day\nexport const getLiftersOnDay = (entries: ReadonlyArray<Entry>, day: number): Array<Entry> => {\n  if (!entries) {\n    return [];\n  }\n  return entries.filter(entry => {\n    return entry.day === day;\n  });\n};\n\n// Convert a lift like \"S\" to the kg array field name, like \"squatKg\".\nexport const liftToAttemptFieldName = (lift: Lift): FieldKg => {\n  switch (lift) {\n    case \"S\":\n      return \"squatKg\";\n    case \"B\":\n      return \"benchKg\";\n    case \"D\":\n      return \"deadliftKg\";\n    default:\n      checkExhausted(lift);\n      return \"squatKg\";\n  }\n};\n\n// Convert a lift like \"S\" to the status array field name, like \"squatStatus\".\nexport const liftToStatusFieldName = (lift: Lift): FieldStatus => {\n  switch (lift) {\n    case \"S\":\n      return \"squatStatus\";\n    case \"B\":\n      return \"benchStatus\";\n    case \"D\":\n      return \"deadliftStatus\";\n    default:\n      checkExhausted(lift);\n      return \"squatStatus\";\n  }\n};\n\n// Whether the Entry has taken any attempts.\nexport const entryHasLifted = (entry: Entry): boolean => {\n  if (entry.squatStatus[0] !== 0) return true;\n  if (entry.benchStatus[0] !== 0) return true;\n  if (entry.deadliftStatus[0] !== 0) return true;\n  return false;\n};\n\n// Whether any Entry has taken any attempts on the given (day, platform). O(n).\nexport const liftingPresentOnPlatform = (entries: ReadonlyArray<Entry>, day: number, platform: number): boolean => {\n  for (let i = 0; i < entries.length; i++) {\n    const entry = entries[i];\n    if (entry.day !== day || entry.platform !== platform) continue;\n    if (entryHasLifted(entry)) return true;\n  }\n  return false;\n};\n\n// Given an array of how many platforms are on each day and the Entries,\n// returns an array of arrays of booleans, such that array[day-1][platform-1] is\n// true iff at least one Entry corresponding to that (day, platform) has\n// taken an attempt.\nexport const getWhetherPlatformsHaveLifted = (\n  platformsOnDays: ReadonlyArray<number>,\n  entries: ReadonlyArray<Entry>\n): Array<Array<boolean>> => {\n  const ret = [];\n  for (let day = 1; day <= platformsOnDays.length; day++) {\n    const platformsOnDay = platformsOnDays[day - 1];\n    const acc = [];\n    for (let platform = 1; platform <= platformsOnDay; platform++) {\n      acc.push(liftingPresentOnPlatform(entries, day, platform));\n    }\n    ret.push(acc);\n  }\n  return ret;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { newDefaultEntry, liftToAttemptFieldName, liftToStatusFieldName } from \"../logic/entry\";\nimport { RegistrationAction, OverwriteStoreAction, EnterAttemptAction, MarkLiftAction } from \"../types/actionTypes\";\nimport { Entry, Lift, FieldKg } from \"../types/dataTypes\";\nimport { RegistrationState } from \"../types/stateTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nconst initialState: RegistrationState = {\n  // The next unique ID to assign.\n  //\n  // This is stored in global state to handle the case of deleting registration\n  // rows during the course of lifting.\n  //\n  // A large number is used as the initial value to make it clear that this is\n  // specifically not an index into the `entries` array.\n  nextEntryId: 5000,\n\n  // Entry objects in the order they appear on the Registration page.\n  // This array owns all registration information.\n  entries: [],\n\n  // Hash from unique ID to `entries` array index.\n  //\n  // This is for the benefit of pages other than the Registration page.\n  // Because the sort order of the `entries` array can change arbitrarily,\n  // the other pages remember globally-unique identifiers for each registration,\n  // instead of a simple array index.\n  //\n  // This lookup table allows mapping those identifiers to whatever\n  // the current location of that data is in the canonical `entries` store.\n  lookup: {}\n};\n\ntype Action = RegistrationAction | EnterAttemptAction | MarkLiftAction | OverwriteStoreAction;\n\ntype NumberLookup = {\n  [id: number]: number;\n};\n\nexport default (state: RegistrationState = initialState, action: Action): RegistrationState => {\n  switch (action.type) {\n    case \"NEW_REGISTRATION\": {\n      // The object provides optional properties that can overwrite the default.\n      // Although the UI doesn't pass properties this way, debugging code does.\n      const obj = action.overwriteDefaults;\n\n      // Generate an entries array with one more item (without modifying the orginal).\n      // Object.assign() allows `obj` to overwrite defaults if present.\n      const entries: Array<Entry> = state.entries.slice();\n      const newEntry = newDefaultEntry(state.nextEntryId);\n\n      // If a previous entry exists, pre-populate some information from it.\n      if (entries.length > 0) {\n        const previousEntry = entries[entries.length - 1];\n        newEntry.day = previousEntry.day;\n        newEntry.platform = previousEntry.platform;\n        newEntry.flight = previousEntry.flight;\n      }\n\n      // Overwrite any newEntry properties with those given in obj.\n      entries.push(Object.assign(newEntry, obj));\n\n      // Since a new entry was added, generate a new 'lookup' object,\n      // mapping from the globally-unique EntryId to the array index.\n      // Specify type explicitly here so that we can mutate it\n      const lookup: NumberLookup = Object.assign({}, state.lookup);\n      lookup[state.nextEntryId] = entries.length - 1;\n\n      return {\n        ...state,\n        nextEntryId: state.nextEntryId + 1,\n        entries: entries,\n        lookup: lookup\n      };\n    }\n\n    case \"DELETE_REGISTRATION\": {\n      const entryId = action.entryId;\n\n      // Generate an entries array without the given item.\n      const entries: Array<Entry> = state.entries.filter((item, index) => item.id !== entryId);\n\n      // Since the entry was deleted from anywhere in the array,\n      // construct a new lookup table from scratch.\n      const lookup: NumberLookup = {};\n\n      for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n        lookup[entry.id] = i;\n      }\n\n      return {\n        ...state,\n        entries: entries,\n        lookup: lookup\n      };\n    }\n\n    case \"UPDATE_REGISTRATION\": {\n      const entryId = action.entryId;\n      const changes = action.changes;\n\n      // Clone the entries array, since one entry will reference a new object.\n      const entries: Array<Entry> = state.entries.slice();\n\n      // Make a new object with just the changes overwritten,\n      // and reference that object from the new array.\n      const index = entries.findIndex(obj => obj.id === entryId);\n      const newEntry = Object.assign({}, entries[index]);\n      entries[index] = Object.assign(newEntry, changes);\n\n      return {\n        ...state,\n        entries: entries\n      };\n    }\n\n    case \"ENTER_ATTEMPT\": {\n      // Action parameters, with expected types.\n      const entryId = Number(action.entryId);\n      const lift: Lift = action.lift;\n      const attemptOneIndexed = Number(action.attemptOneIndexed);\n      const weightKg = Number(action.weightKg);\n\n      const field: FieldKg = liftToAttemptFieldName(lift);\n\n      // Clone the entries array, since one slot will reference a new object.\n      const newEntries: Array<Entry> = state.entries.slice();\n      const index = newEntries.findIndex(obj => obj.id === entryId);\n      const oldEntry = newEntries[index];\n\n      // Make a copy of the attempts array containing the new attempt.\n      const newarray = oldEntry[field].slice();\n      newarray[attemptOneIndexed - 1] = weightKg;\n\n      // Put that new attempts array into an object so we can use Object.assign().\n      const newfields: Partial<Entry> = {};\n      newfields[field] = newarray;\n\n      // Make a new entry from the old entry, with the attempts field overwritten.\n      newEntries[index] = Object.assign(oldEntry, newfields);\n\n      return {\n        ...state,\n        entries: newEntries\n      };\n    }\n\n    case \"MARK_LIFT\": {\n      const entryId = Number(action.entryId);\n      const lift: Lift = action.lift;\n      const attemptOneIndexed = Number(action.attemptOneIndexed);\n      const success = Boolean(action.success);\n\n      // Map true to '1' and false to '-1'.\n      const status = success === true ? 1 : -1;\n\n      const fieldStatus = liftToStatusFieldName(lift);\n\n      // Clone the entries array, since one slot will reference a new object.\n      const newEntries: Array<Entry> = state.entries.slice();\n      const index = newEntries.findIndex(obj => obj.id === entryId);\n      const oldEntry = newEntries[index];\n\n      // Make a copy of the status array containing the new status.\n      const newarray = oldEntry[fieldStatus].slice();\n      newarray[attemptOneIndexed - 1] = status;\n\n      // Put that new array into an object so we can use Object.assign().\n      const newfields: Partial<Entry> = {};\n      newfields[fieldStatus] = newarray;\n\n      // Make a new entry from the old entry, with the status field overwritten.\n      const newEntry = Object.assign({}, oldEntry);\n      newEntries[index] = Object.assign(newEntry, newfields);\n\n      return {\n        ...state,\n        entries: newEntries\n      };\n    }\n\n    // Caused by clicking a \"Merge\" button on the Results page.\n    case \"MERGE_PLATFORM\": {\n      const day: number = action.day;\n      const platform: number = action.platform;\n      const platformEntries: ReadonlyArray<Entry> = action.platformEntries;\n\n      // Filter out state entries assigned to the merged (day, platform).\n      const newEntries = state.entries.filter(e => {\n        return !(e.day === day && e.platform === platform);\n      });\n\n      // Get the nextEntryId: the merged entries will be reassigned IDs.\n      let nextEntryId: number = state.nextEntryId;\n\n      // For each incoming Entry, copy the object, assign a new ID,\n      // and place it in the newEntries array.\n      for (let i = 0; i < platformEntries.length; i++) {\n        const entry: Entry = Object.assign({}, platformEntries[i]);\n        entry.id = nextEntryId++;\n        newEntries.push(entry);\n      }\n\n      // Generate an entirely new lookup table.\n      const lookup: NumberLookup = {};\n      for (let i = 0; i < newEntries.length; i++) {\n        lookup[newEntries[i].id] = i;\n      }\n\n      // Return a new object with the new components replaced.\n      return {\n        ...state,\n        nextEntryId: nextEntryId,\n        entries: newEntries,\n        lookup: lookup\n      };\n    }\n\n    case \"OVERWRITE_STORE\":\n      return action.store.registration;\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Lifting state only tracks manual overrides.\n//\n// Outside of overrides, the state of the meet is fully-calculated by the LiftingView.\n//\n// For safety, correctness, and ease of understanding, the state of the meet is\n// intentionally *not* stored in the global state. It is continuously recalculated.\n//\n// Please do not attempt to store meet state in the Redux store!\n\nimport {\n  MarkLiftAction,\n  SetLiftingGroupAction,\n  OverrideAttemptAction,\n  OverrideEntryIdAction,\n  OverwriteStoreAction,\n  SetTableInfoAction\n} from \"../types/actionTypes\";\nimport { LiftingState } from \"../types/stateTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nconst initialState: LiftingState = {\n  // Specifies the initial settings for the control widgets on the lifting page.\n  // The intention is that the score table sets these manually.\n  day: 1,\n  platform: 1,\n  flight: \"A\",\n  lift: \"S\",\n\n  // These properties are normally calculated, but exist here as a mechanism\n  // for a one-shot override of the normal logic. After being handled,\n  // they are unset.\n  overrideAttempt: null, // Allows selecting an attempt, even if it's completed.\n  overrideEntryId: null, // Allows selecting a lifter, even if they've already gone.\n\n  // Presentational configuration.\n  columnDivisionWidthPx: 90\n};\n\ntype Action =\n  | MarkLiftAction\n  | SetLiftingGroupAction\n  | OverrideAttemptAction\n  | OverrideEntryIdAction\n  | OverwriteStoreAction\n  | SetTableInfoAction;\n\nexport default (state: LiftingState = initialState, action: Action): LiftingState => {\n  switch (action.type) {\n    case \"MARK_LIFT\": {\n      // Unset any overrides, returning to normal lifting flow.\n      return { ...state, overrideAttempt: null, overrideEntryId: null };\n    }\n\n    case \"SET_LIFTING_GROUP\":\n      return {\n        // Keep all the UI customization stuff.\n        ...state,\n\n        // Change all the real state stuff.\n        day: action.day,\n        platform: action.platform,\n        flight: action.flight,\n        lift: action.lift,\n\n        // If the group changes, unset any overrides.\n        overrideAttempt: null,\n        overrideEntryId: null\n      };\n\n    case \"OVERRIDE_ATTEMPT\":\n      return { ...state, overrideAttempt: action.attempt };\n\n    case \"OVERRIDE_ENTRY_ID\":\n      return { ...state, overrideEntryId: action.entryId };\n\n    case \"OVERWRITE_STORE\":\n      return action.store.lifting;\n\n    case \"SET_TABLE_INFO\": {\n      const changes = action.changes;\n\n      // As a safeguard, ensure that fields unrelated to customization\n      // are not overwritten by this action.\n\n      // Make a new object that's state + changes, with changes taking priority.\n      const combined = Object.assign({}, state);\n      Object.assign(combined, changes);\n\n      // Source from this new combined object, with fields unrelated to customization\n      // deferring to the original state.\n      //\n      // So that means:\n      //  - Fields unrelated to customization will be the same as in 'state'.\n      //  - Customization fields will be from 'combined', which includes all fields\n      //    and allowed the 'changes' object to overwrite any of them.\n      return {\n        ...combined,\n\n        day: state.day,\n        platform: state.platform,\n        flight: state.flight,\n        lift: state.lift,\n\n        overrideAttempt: state.overrideAttempt,\n        overrideEntryId: state.overrideEntryId\n      };\n    }\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { combineReducers } from \"redux\";\n\nimport versionsReducer from \"./versionsReducer\";\nimport languageReducer from \"./languageReducer\";\nimport meetReducer from \"./meetReducer\";\nimport registrationReducer from \"./registrationReducer\";\nimport liftingReducer from \"./liftingReducer\";\n\n// Using combineReducers() guarantees that each part of the state object\n// fully bears the responsibility of managing itself by only sending a\n// subset of the state to the reducer.\n//\n// For example, the meetReducer() receives a new 'state' object\n// equal to 'state.meet' from the root. Because there is no way to access\n// the root state object from a child state object, the meetReducer() is\n// fully-encapsulated, allowing for sane reasoning about effects on global state.\nexport default combineReducers({\n  versions: versionsReducer,\n  language: languageReducer,\n  meet: meetReducer,\n  registration: registrationReducer,\n  lifting: liftingReducer\n});\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { ChangeLanguageAction, OverwriteStoreAction } from \"../types/actionTypes\";\nimport { Language } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\ntype Action = ChangeLanguageAction | OverwriteStoreAction;\n\nexport default (state: Language = \"en\", action: Action): Language => {\n  switch (action.type) {\n    case \"CHANGE_LANGUAGE\":\n      return action.language;\n\n    case \"OVERWRITE_STORE\":\n      return action.store.language;\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The confirmation modal that pops up when the \"New Meet\" button is clicked.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { overwriteStore } from \"../../actions/globalActions\";\nimport rootReducer from \"../../reducers/rootReducer\";\n\nimport { Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\n\ninterface OwnProps {\n  show: boolean;\n  close: () => void;\n}\n\ninterface StateProps {\n  name: string;\n  language: Language;\n}\n\ninterface DispatchProps {\n  overwriteStore: () => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass NewMeetModal extends React.Component<Props> {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.close}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            <FormattedMessage\n              id=\"home.new-meet-popup-title\"\n              defaultMessage=\"OK to clear {meetName}?\"\n              values={{ meetName: this.props.name }}\n            />\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            <FormattedMessage\n              id=\"home.new-meet-popup-message-clear\"\n              defaultMessage=\"Starting a new meet will clear all unsaved data from {meetName}.\"\n              values={{ meetName: this.props.name }}\n            />\n          </p>\n          <p>\n            <FormattedMessage\n              id=\"home.new-meet-popup-message-sure\"\n              defaultMessage=\"Are you sure you want to continue?\"\n            />\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.close} variant=\"light\">\n            {getString(\"common.button-close\", this.props.language)}\n          </Button>\n          <LinkContainer to=\"/meet-setup\">\n            <Button onClick={this.props.overwriteStore} variant=\"primary\">\n              {getString(\"common.button-continue\", this.props.language)}\n            </Button>\n          </LinkContainer>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    name: state.meet.name,\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    overwriteStore: () => {\n      // Calling the combined root reducer with an empty object results in the child reducers\n      // being invoked with no argument, so they return their default states.\n      // We cast here since this is not how the reducer is really intended to work\n      const defaultStore = rootReducer({} as GlobalState, \"OVERWRITE_STORE\" as any);\n      dispatch(overwriteStore(defaultStore));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMeetModal);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Shows a popup with an error message.\n// This exists because Chrome only allows window.alert() to execute once,\n// because Chrome is bad and Google should feel bad.\n//\n// This is intended only for use with buttons that load external resources,\n// like save files and CSV registration importation files.\n//\n// Regular old errors in widgets should be reported by setting their\n// validationState.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\ninterface OwnProps {\n  error: string;\n  title: string;\n  show: boolean;\n  close: () => void;\n}\n\ntype Props = OwnProps;\n\nclass ErrorModal extends React.Component<Props> {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.close}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{this.props.error}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"info\" onClick={this.props.close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default connect(null, null)(ErrorModal);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { saveAs } from \"file-saver\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport LanguageSelector from \"../components/translations/LanguageSelector\";\nimport { overwriteStore } from \"../actions/globalActions\";\n\nimport NewMeetModal from \"../components/home/NewMeetModal\";\nimport ErrorModal from \"../components/ErrorModal\";\n\nimport { getString } from \"../logic/strings\";\n\nimport { stateVersion, releaseVersion, releaseDate } from \"../versions\";\n\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nimport { GlobalState } from \"../types/stateTypes\";\nimport { Dispatch } from \"redux\";\n\n// Temporary CSS, just for prototyping.\nconst centerConsole = { maxWidth: 700, marginRight: \"auto\", marginLeft: \"auto\" };\n\ninterface StateProps {\n  redux: GlobalState;\n}\n\ninterface DispatchProps {\n  overwriteStore: (store: GlobalState) => void;\n}\n\ninterface InternalState {\n  showNewMeetModal: boolean;\n  // Controls the ErrorModal popup. Shown when error !== \"\".\n  error: string;\n}\n\ntype Props = StateProps & DispatchProps;\n\n// Gets links and buttons to have the same vertical spacing.\nconst buttonMargin = { marginBottom: \"8px\" };\n\nclass HomeContainer extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.handleLoadClick = this.handleLoadClick.bind(this);\n    this.handleNewClick = this.handleNewClick.bind(this);\n    this.closeConfirmModal = this.closeConfirmModal.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\n    this.handleSaveClick = this.handleSaveClick.bind(this);\n    this.renderContinueButton = this.renderContinueButton.bind(this);\n\n    this.state = { showNewMeetModal: false, error: \"\" };\n  }\n\n  // The file input is hidden, and we want to use a button to activate it.\n  // This event handler is just a proxy to call the *real* event handler.\n  handleLoadClick = () => {\n    const loadhelper = document.getElementById(\"loadhelper\");\n    if (loadhelper !== null) {\n      loadhelper.click();\n    }\n  };\n\n  // When we click the new meet button\n  // Open the popover modal to confirm the user is willing to delete any current progress\n  handleNewClick = () => {\n    this.setState({ showNewMeetModal: true });\n  };\n\n  // Close the new meet confirmation modal\n  closeConfirmModal = () => {\n    this.setState({ showNewMeetModal: false });\n  };\n\n  closeErrorModal = () => {\n    this.setState({ error: \"\" });\n  };\n\n  // Called when a file is selected.\n  handleLoadFileInput = () => {\n    // Load the element and make sure it's an HTMLInputElement.\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\n      return;\n    }\n\n    const selectedFile = loadHelper.files[0];\n    const language = this.props.redux.language;\n    const rememberThis = this;\n\n    const reader = new FileReader();\n    reader.onload = function(event: any) {\n      let errored = false;\n      try {\n        const obj = JSON.parse(event.target.result);\n\n        // Basic error checking, make sure it's the right format.\n        if (\n          obj.language === undefined ||\n          obj.meet === undefined ||\n          obj.registration === undefined ||\n          obj.lifting === undefined\n        ) {\n          errored = true;\n        } else {\n          rememberThis.props.overwriteStore(obj);\n        }\n      } catch (err) {\n        errored = true;\n      }\n\n      if (errored) {\n        const error = getString(\"error.invalid-openlifter\", language);\n        rememberThis.setState({ error: error });\n      }\n    };\n    reader.readAsText(selectedFile);\n  };\n\n  handleSaveClick = () => {\n    let meetname = this.props.redux.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.redux.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const state = JSON.stringify(this.props.redux);\n    const blob = new Blob([state], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, meetname + \".openlifter\");\n  };\n\n  renderContinueButton = () => {\n    const meetname = this.props.redux.meet.name;\n    if (meetname === \"\") {\n      // Unnamed or unstarted meet, so don't render a continue button\n      return;\n    }\n    return (\n      <LinkContainer to=\"/meet-setup\">\n        <Button variant=\"primary\" block style={buttonMargin}>\n          <FormattedMessage\n            id=\"home.button-continue\"\n            defaultMessage=\"Continue {meetName}\"\n            values={{ meetName: meetname }}\n          />\n        </Button>\n      </LinkContainer>\n    );\n  };\n\n  render() {\n    let newMeetButton = (\n      <Button variant=\"primary\" block onClick={this.handleNewClick} style={buttonMargin}>\n        <FormattedMessage id=\"home.button-new-meet\" defaultMessage=\"New Meet\" />\n      </Button>\n    );\n\n    // If no meet is active, make the button just a LinkContainer.\n    if (!this.props.redux.meet.name) {\n      newMeetButton = <LinkContainer to=\"/meet-setup\">{newMeetButton}</LinkContainer>;\n    }\n\n    const isBeta: boolean = releaseVersion.includes(\"eta\");\n    let betaWarning = null;\n    if (isBeta === true) {\n      betaWarning = (\n        <h3>\n          <p>\n            <FormattedMessage\n              id=\"home.beta-warning\"\n              defaultMessage=\"This is the in-development, next version of OpenLifter. The internal data format is unstable. Do not use this to run competitions!\"\n            />\n          </p>\n        </h3>\n      );\n    }\n\n    const wrongVersion: boolean = this.props.redux.versions.stateVersion !== stateVersion;\n    const dataReleaseVersion = this.props.redux.versions.releaseVersion;\n\n    const language = this.props.redux.language;\n\n    let warning = null;\n    if (wrongVersion === true) {\n      warning = (\n        <h3>\n          <p>\n            <b>{getString(\"common.danger-allcaps\", language)}</b>\n          </p>\n          <p>\n            <FormattedMessage\n              id=\"home.wrong-version-warning\"\n              defaultMessage=\"The loaded meet was made in OpenLifter {oldVersion}. That format is incompatible with OpenLifter {thisVersion}.\"\n              values={{ oldVersion: dataReleaseVersion, thisVersion: releaseVersion }}\n            />\n          </p>\n        </h3>\n      );\n    }\n\n    return (\n      <Card style={centerConsole} className={styles.contentArea}>\n        <NewMeetModal show={this.state.showNewMeetModal} close={this.closeConfirmModal} />\n        <ErrorModal\n          error={this.state.error}\n          title={getString(\"home.error-load-popup-title\", language)}\n          show={this.state.error !== \"\"}\n          close={this.closeErrorModal}\n        />\n\n        <Card.Header>\n          <img alt=\"OpenLifter\" src=\"openlifter.svg\" />\n          {betaWarning}\n        </Card.Header>\n\n        <Card.Body>\n          <Container>\n            <Row>{warning}</Row>\n            <Row style={buttonMargin}>\n              <Col md={8}>\n                {wrongVersion === false ? (\n                  this.renderContinueButton()\n                ) : (\n                  <a href={\"https://www.openlifter.com/releases/\" + dataReleaseVersion}>\n                    <Button variant=\"success\" block>\n                      <FormattedMessage\n                        id=\"home.button-switch-version\"\n                        defaultMessage=\"Switch to OpenLifter {otherVersion}\"\n                        values={{ otherVersion: dataReleaseVersion }}\n                      />\n                    </Button>\n                  </a>\n                )}\n              </Col>\n              <Col md={4}>\n                <LanguageSelector />\n              </Col>\n            </Row>\n\n            <Row>\n              <Col md={8}>\n                <div>\n                  {newMeetButton}\n\n                  <Button variant=\"warning\" block onClick={this.handleLoadClick} style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-load-from-file\" defaultMessage=\"Load from File\" />\n                  </Button>\n                  <Button variant=\"success\" block onClick={this.handleSaveClick} style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-save-tofile\" defaultMessage=\"Save to File\" />\n                  </Button>\n                </div>\n              </Col>\n\n              <Col md={4}>\n                <a\n                  href=\"https://gitlab.com/openpowerlifting/openlifter/issues/new\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-report-issue\" defaultMessage=\"Report an Issue\" />\n                  </Button>\n                </a>\n                <a href=\"https://www.openlifter.com/support\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-support\" defaultMessage=\"Official Support\" />\n                  </Button>\n                </a>\n                <a href=\"https://gitlab.com/openpowerlifting/openlifter\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-source\" defaultMessage=\"Full Source Code\" />\n                  </Button>\n                </a>\n                <LinkContainer to=\"/about\">\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-credits\" defaultMessage=\"Credits and License\" />\n                  </Button>\n                </LinkContainer>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n\n        <Card.Footer>\n          <h4 style={{ textAlign: \"center\" }}>\n            <FormattedMessage\n              id=\"home.version-date\"\n              defaultMessage=\"Version {releaseVersion}, {releaseDate}.\"\n              values={{\n                releaseVersion: releaseVersion,\n                releaseDate: releaseDate\n              }}\n            />\n          </h4>\n        </Card.Footer>\n\n        <input\n          id=\"loadhelper\"\n          type=\"file\"\n          accept=\".openlifter,.openlifter.txt\"\n          style={{ display: \"none\" }}\n          onChange={this.handleLoadFileInput}\n        />\n      </Card>\n    );\n  }\n}\n\n// Because we want to save the state, separate it out specifically\n// into a \"redux\" prop. Otherwise it gets contaminated by other props.\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  redux: {\n    ...state\n  }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    overwriteStore: store => dispatch(overwriteStore(store))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This defines a generic text input that colors itself based upon a validation\n// function passed in OwnProps. On blur, an onSuccess() callback is called\n// if validation passes; otherwise, the text input reverts to the initial state.\n\nimport React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { Validation } from \"../types/dataTypes\";\nimport { FormControlTypeHack, assertString } from \"../types/utils\";\n\ninterface OwnProps {\n  type?: string; // The type of input, such as \"text\" or \"number\". Defaults to \"text\".\n  label?: string; // Form label text, shown above the input.\n  initialValue: string;\n  placeholder?: string;\n  disabled?: boolean;\n  validate: (value?: string) => Validation;\n  onSuccess: (value: string) => void;\n\n  // By default, the bottom margin is removed so that this can be used in tables.\n  // Setting this to true adds the margin back. Defaults to false.\n  keepMargin?: boolean;\n}\n\ntype Props = Readonly<OwnProps>;\n\ninterface InternalState {\n  value: string;\n}\n\nclass BirthDateInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    this.state = {\n      value: props.initialValue\n    };\n  }\n\n  validate = (): Validation => {\n    return this.props.validate(this.state.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.currentTarget.blur();\n    }\n  };\n\n  handleChange = (event: React.FormEvent<FormControlTypeHack>) => {\n    if (assertString(event.currentTarget.value)) {\n      this.setState({ value: event.currentTarget.value });\n    }\n  };\n\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (this.validate() === \"error\") {\n      this.setState({ value: this.props.initialValue });\n      return;\n    }\n\n    if (this.props.initialValue !== this.state.value) {\n      this.props.onSuccess(this.state.value);\n    }\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n    const maybeLabel = this.props.label ? <Form.Label>{this.props.label}</Form.Label> : undefined;\n\n    return (\n      <Form.Group style={this.props.keepMargin === true ? undefined : { marginBottom: 0 }}>\n        {maybeLabel}\n        <Form.Control\n          type={this.props.type ? this.props.type : \"text\"}\n          placeholder={this.props.placeholder}\n          disabled={this.props.disabled === true ? true : undefined}\n          value={this.state.value}\n          onKeyDown={this.handleKeyDown}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          isValid={validation === \"success\"}\n          isInvalid={validation === \"error\"}\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nexport default BirthDateInput;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  SetMeetNameAction,\n  SetFormulaAction,\n  SetFederationAction,\n  SetDivisionsAction,\n  SetMeetDateAction,\n  SetLengthDaysAction,\n  SetPlatformsOnDaysAction,\n  SetInKgAction,\n  SetWeightClassesAction,\n  SetBarAndCollarsWeightKgAction,\n  SetPlateConfigAction,\n  UpdateMeetAction\n} from \"../types/actionTypes\";\nimport { Formula, Lift, Sex } from \"../types/dataTypes\";\nimport { MeetState } from \"../types/stateTypes\";\n\nexport const setMeetName = (name: string): SetMeetNameAction => {\n  return {\n    type: \"SET_MEET_NAME\",\n    name\n  };\n};\n\nexport const setFormula = (formula: Formula): SetFormulaAction => {\n  return {\n    type: \"SET_FORMULA\",\n    formula\n  };\n};\n\nexport const setFederation = (federation: string): SetFederationAction => {\n  return {\n    type: \"SET_FEDERATION\",\n    federation\n  };\n};\n\nexport const setDivisions = (divisions: ReadonlyArray<string>): SetDivisionsAction => {\n  return {\n    type: \"SET_DIVISIONS\",\n    divisions\n  };\n};\n\nexport const setMeetDate = (date: string): SetMeetDateAction => {\n  return {\n    type: \"SET_MEET_DATE\",\n    date\n  };\n};\n\nexport const setLengthDays = (length: number): SetLengthDaysAction => {\n  return {\n    type: \"SET_LENGTH_DAYS\",\n    length\n  };\n};\n\nexport const setPlatformsOnDays = (day: number, count: number): SetPlatformsOnDaysAction => {\n  return {\n    type: \"SET_PLATFORM_COUNT\",\n    day: day,\n    count: count\n  };\n};\n\nexport const setInKg = (inKg: boolean): SetInKgAction => {\n  return {\n    type: \"SET_IN_KG\",\n    inKg\n  };\n};\n\nexport const setWeightClasses = (sex: Sex, classesKg: ReadonlyArray<number>): SetWeightClassesAction => {\n  return {\n    type: \"SET_WEIGHTCLASSES\",\n    sex: sex,\n    classesKg: classesKg\n  };\n};\n\nexport const setBarAndCollarsWeightKg = (lift: Lift, weightKg: number): SetBarAndCollarsWeightKgAction => {\n  return {\n    type: \"SET_BAR_AND_COLLARS_WEIGHT_KG\",\n    lift: lift,\n    weightKg: weightKg\n  };\n};\n\nexport const setPlateConfig = (weightKg: number, pairCount: number, color: string): SetPlateConfigAction => {\n  return {\n    type: \"SET_PLATE_CONFIG\",\n    weightKg,\n    pairCount,\n    color\n  };\n};\n\nexport const updateMeet = (obj: Partial<MeetState>): UpdateMeetAction => {\n  return {\n    type: \"UPDATE_MEET\",\n    changes: obj\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the MeetDate date picker.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale } from \"react-datepicker\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\nimport { setMeetDate } from \"../../actions/meetSetupActions\";\nimport { iso8601ToLocalDate, localDateToIso8601 } from \"../../logic/date\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\n\n// The react-datepicker gets locale information from the \"date-fns\" package.\n// In order for it to understand what our Languages are, we have to register\n// those locales. The react-datepicker provides a helper function to do this.\nimport de from \"date-fns/locale/de\";\nimport eo from \"date-fns/locale/eo\";\nimport es from \"date-fns/locale/es\";\nimport fr from \"date-fns/locale/fr\";\nimport hr from \"date-fns/locale/hr\";\nimport it from \"date-fns/locale/it\";\nimport lt from \"date-fns/locale/lt\";\nimport nl from \"date-fns/locale/nl\";\nimport pt from \"date-fns/locale/pt\";\nimport ru from \"date-fns/locale/ru\";\nimport tr from \"date-fns/locale/tr\";\nimport zh_CN from \"date-fns/locale/zh-CN\";\n\n// Register the date-fns/locales with the DatePicker.\nregisterLocale(\"de\", de);\nregisterLocale(\"eo\", eo);\nregisterLocale(\"es\", es);\nregisterLocale(\"fr\", fr);\nregisterLocale(\"hr\", hr);\nregisterLocale(\"it\", it);\nregisterLocale(\"lt\", lt);\nregisterLocale(\"nl\", nl);\nregisterLocale(\"pt\", pt);\nregisterLocale(\"ru\", ru);\nregisterLocale(\"tr\", tr);\nregisterLocale(\"zh-Hans\", zh_CN);\n\ninterface StateProps {\n  date: string;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setMeetDate: (date: Date) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass MeetDate extends React.Component<Props> {\n  render() {\n    // The DatePicker manipulates a Date object in local time.\n    const initialDate: Date = iso8601ToLocalDate(this.props.date);\n\n    return (\n      <FormGroup>\n        <Form.Label>\n          <FormattedMessage id=\"meet-setup.start-date\" defaultMessage=\"Start Date\" />\n        </Form.Label>\n        <div style={{ textAlign: \"center\" }}>\n          <DatePicker\n            dateFormat=\"yyyy-MM-dd\"\n            selected={initialDate}\n            onChange={this.props.setMeetDate}\n            inline\n            locale={this.props.language}\n          />\n        </div>\n      </FormGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  date: state.meet.date,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setMeetDate: date => {\n      dispatch(setMeetDate(localDateToIso8601(date)));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetDate);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This is a generic number input with a minus and a plus surrounding it.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport { string2number, displayNumber } from \"../../logic/units\";\n\nimport { FormControlTypeHack, assertString } from \"../../types/utils\";\nimport { Language, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  initialValue: number; // Starting value when rendering the widget.\n\n  // Properties related to validation.\n  step: number; // Amount with which +/- buttons should increment or decrement.\n  validate: (n: number) => Validation; // Verifies that the number is valid.\n  onChange: (n: number) => void; // Callback. Only validated numbers are reported.\n\n  // Properties related to display.\n  label?: JSX.Element | string; // A label to display on the element.\n  marginBottom?: string; // Allows overriding margin (Forms by default have margins).\n}\n\ninterface StateProps {\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\ninterface InternalState {\n  value: string;\n}\n\nclass NumberInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    // Handles manual text entry.\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    // Handles the +/- buttons on the side of the input.\n    this.handleDecrement = this.handleDecrement.bind(this);\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleStep = this.handleStep.bind(this);\n\n    // Internal state, for purposes of validation.\n    // To avoid confusion (auto-rounding) when typing, just store a string.\n    this.state = {\n      value: displayNumber(props.initialValue, props.language)\n    };\n  }\n\n  // Used when the user manually types into the input box.\n  handleChange = (event: FormEvent<FormControlTypeHack>): void => {\n    const value = event.currentTarget.value;\n    if (assertString(value)) {\n      this.setState({ value: value });\n    }\n  };\n\n  // Used when the user removes focus from the input box.\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const num: number = string2number(event.currentTarget.value);\n    if (this.props.validate(num) !== \"error\") {\n      this.props.onChange(num);\n    }\n  };\n\n  handleDecrement = (): void => {\n    this.handleStep(this.props.step * -1);\n  };\n\n  handleIncrement = (): void => {\n    this.handleStep(this.props.step);\n  };\n\n  handleStep = (step: number): void => {\n    let n: number = string2number(this.state.value) + step;\n\n    // Make sure that the new value is a multiple of the step.\n    const multiple = Math.abs(step);\n    if (step > 0) {\n      n = Math.floor(n / multiple) * multiple;\n    } else {\n      n = Math.ceil(n / multiple) * multiple;\n    }\n\n    if (this.props.validate(n) !== \"error\") {\n      this.setState({ value: displayNumber(n, this.props.language) });\n      this.props.onChange(n);\n    }\n  };\n\n  render() {\n    const validation: Validation = this.props.validate(string2number(this.state.value));\n\n    return (\n      <Form.Group style={{ marginBottom: `${this.props.marginBottom || undefined}` }}>\n        {this.props.label && <Form.Label>{this.props.label}</Form.Label>}\n        <InputGroup>\n          <InputGroup.Prepend>\n            <Button variant=\"outline-secondary\" style={{ borderRight: \"0px\" }} onMouseDown={this.handleDecrement}>\n              <FontAwesomeIcon icon={faMinus} />\n            </Button>\n          </InputGroup.Prepend>\n          <Form.Control\n            value={this.state.value}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            isValid={validation === \"success\"}\n            isInvalid={validation === \"error\"}\n            className={validation === \"warning\" ? \"is-warning\" : undefined}\n          />\n          <InputGroup.Append>\n            <Button variant=\"outline-secondary\" style={{ borderLeft: \"0px\" }} onMouseDown={this.handleIncrement}>\n              <FontAwesomeIcon icon={faPlus} />\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    language: state.language\n  };\n};\n\nexport default connect(mapStateToProps)(NumberInput);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport NumberInput from \"../common/NumberInput\";\n\nimport { setLengthDays } from \"../../actions/meetSetupActions\";\n\nimport { Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface StateProps {\n  lengthDays: number;\n}\n\ninterface DispatchProps {\n  setLengthDays: (days: number) => any;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  initialValue: number;\n}\n\nclass MeetLength extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      initialValue: this.props.lengthDays\n    };\n  }\n\n  validate = (n: number): Validation => {\n    if (!Number.isInteger(n) || n <= 0 || n > 14) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (n: number): void => {\n    if (this.validate(n)) {\n      this.props.setLengthDays(n);\n    }\n  };\n\n  render() {\n    return (\n      <NumberInput\n        initialValue={this.state.initialValue}\n        step={1}\n        validate={this.validate}\n        onChange={this.handleChange}\n        label={<FormattedMessage id=\"meet-setup.length-days\" defaultMessage=\"Days of Lifting\" />}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lengthDays: state.meet.lengthDays\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setLengthDays: days => dispatch(setLengthDays(days))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetLength);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { setPlatformsOnDays } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Validation } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\nimport NumberInput from \"../common/NumberInput\";\n\ninterface OwnProps {\n  day: number;\n}\n\ninterface StateProps {\n  platformsOnDays: ReadonlyArray<number>;\n}\n\ninterface DispatchProps {\n  setPlatformsOnDays: (day: number, count: number) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  initialValue: number;\n}\n\nclass PlatformCount extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      initialValue: this.props.platformsOnDays[this.props.day - 1]\n    };\n  }\n\n  validate = (n: number): Validation => {\n    if (!Number.isInteger(n) || n <= 0 || n > 20) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (n: number): void => {\n    if (this.validate(n) === \"success\") {\n      this.props.setPlatformsOnDays(this.props.day, n);\n    }\n  };\n\n  render() {\n    return (\n      <NumberInput\n        initialValue={this.state.initialValue}\n        step={1}\n        validate={this.validate}\n        onChange={this.handleChange}\n        label={\n          <FormattedMessage\n            id=\"meet-setup.platforms-on-day\"\n            defaultMessage=\"Platforms on Day {number}\"\n            values={{\n              number: this.props.day\n            }}\n          />\n        }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  platformsOnDays: state.meet.platformsOnDays\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setPlatformsOnDays: (day, count) => dispatch(setPlatformsOnDays(day, count))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlatformCount);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport PlatformCount from \"./PlatformCount\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface StateProps {\n  lengthDays: number;\n}\n\ntype Props = StateProps;\n\nclass PlatformCounts extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.createPlatformInputs = this.createPlatformInputs.bind(this);\n  }\n\n  createPlatformInputs = () => {\n    const inputs = [];\n    const lengthDays = this.props.lengthDays;\n    for (let i = 1; i <= lengthDays; ++i) {\n      inputs.push(<PlatformCount key={i} day={i} />);\n    }\n    return inputs;\n  };\n\n  render() {\n    return <div>{this.createPlatformInputs()}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lengthDays: state.meet.lengthDays\n});\n\nexport default connect(mapStateToProps)(PlatformCounts);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Provides widgets that overwrite rules with federation defaults.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { updateMeet } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\nimport { checkExhausted, FormControlTypeHack } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ninterface StateProps {\n  federation: string;\n  language: Language;\n}\n\ninterface DispatchProps {\n  updateMeet: (changes: Partial<MeetState>) => void;\n}\n\ninterface OwnProps {\n  // Used by the MeetSetup component to cause component updates.\n  onChange: () => void;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ntype AutoFillOption = \"Traditional\" | \"BP\" | \"GPC\" | \"SPF\" | \"UPA\" | \"USAPL\" | \"USPA\" | \"WABDL\" | \"WPC\" | \"WRPF\";\n\ninterface InternalState {\n  selectedOption: AutoFillOption;\n}\n\nconst traditionalDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Youth\",\n    \"T13-15\",\n    \"T16-17\",\n    \"T18-19\",\n    \"J20-23\",\n    \"S35-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\"\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: true\n};\n\nconst bpDefaults: Partial<MeetState> = {\n  divisions: [\n    \"MR-O\",\n    \"MR-Sj\",\n    \"MR-Jr\",\n    \"MR-M1\",\n    \"MR-M2\",\n    \"MR-M3\",\n    \"MR-M4\",\n    \"MR-M5\",\n    \"MR-G\",\n    \"FR-O\",\n    \"FR-Sj\",\n    \"FR-Jr\",\n    \"FR-M1\",\n    \"FR-M2\",\n    \"FR-M3\",\n    \"FR-M4\",\n    \"FR-M5\",\n    \"FR-G\",\n    \"M-O\",\n    \"M-Sj\",\n    \"M-Jr\",\n    \"M-M1\",\n    \"M-M2\",\n    \"M-M3\",\n    \"M-M4\",\n    \"M-M5\",\n    \"M-G\",\n    \"F-O\",\n    \"F-Sj\",\n    \"F-Jr\",\n    \"F-M1\",\n    \"F-M2\",\n    \"F-M3\",\n    \"F-M4\",\n    \"F-M5\",\n    \"F-G\"\n  ],\n  weightClassesKgMen: [53, 59, 66, 74, 83, 93, 105, 120],\n  weightClassesKgWomen: [43, 47, 52, 57, 63, 72, 84],\n  weightClassesKgMx: [53, 59, 66, 74, 83, 93, 105, 120],\n  formula: \"IPF Points\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: false\n};\n\nconst gpcDefaults: Partial<MeetState> = {\n  divisions: [\n    \"F-JE\",\n    \"F-JR\",\n    \"F-M1E\",\n    \"F-M1R\",\n    \"F-M2E\",\n    \"F-M2R\",\n    \"F-M3E\",\n    \"F-M3R\",\n    \"F-M4E\",\n    \"F-M4R\",\n    \"F-M5E\",\n    \"F-M5R\",\n    \"F-M6E\",\n    \"F-M6R\",\n    \"F-M7E\",\n    \"F-M7R\",\n    \"F-M8E\",\n    \"F-M8R\",\n    \"F-M9E\",\n    \"F-M9R\",\n    \"F-OE\",\n    \"F-OR\",\n    \"F-SME\",\n    \"F-SMR\",\n    \"F-T1E\",\n    \"F-T1R\",\n    \"F-T2E\",\n    \"F-T2R\",\n    \"F-T3E\",\n    \"F-T3R\",\n    \"M-JE\",\n    \"M-JR\",\n    \"M-M1E\",\n    \"M-M1R\",\n    \"M-M2E\",\n    \"M-M2R\",\n    \"M-M3E\",\n    \"M-M3R\",\n    \"M-M4E\",\n    \"M-M4R\",\n    \"M-M5E\",\n    \"M-M5R\",\n    \"M-M6E\",\n    \"M-M6R\",\n    \"M-M7E\",\n    \"M-M7R\",\n    \"M-M8E\",\n    \"M-M8R\",\n    \"M-M9E\",\n    \"M-M9R\",\n    \"M-OE\",\n    \"M-OR\",\n    \"M-SME\",\n    \"M-SMR\",\n    \"M-T1E\",\n    \"M-T1R\",\n    \"M-T2E\",\n    \"M-T2R\",\n    \"M-T3E\",\n    \"M-T3R\"\n  ],\n  weightClassesKgMen: [56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 110],\n  weightClassesKgMx: [56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Glossbrenner\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  allow4thAttempts: true\n};\n\nconst spfDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Pre-Teen\",\n    \"T13-15\",\n    \"T16-17\",\n    \"T18-19\",\n    \"J20-23\",\n    \"S33-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"G80+\"\n  ],\n  weightClassesKgMen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110],\n  weightClassesKgMx: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\n  formula: \"Schwartz/Malone\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: true\n};\n\nconst upaDefaults: Partial<MeetState> = {\n  divisions: [\n    \"FG\",\n    \"FG-AD\",\n    \"FGR\",\n    \"FGR-AD\",\n    \"FJ\",\n    \"FJ-AD\",\n    \"FJR\",\n    \"FJR-AD\",\n    \"FJRE\",\n    \"FJRE-AD\",\n    \"FM1\",\n    \"FM1-AD\",\n    \"FM1R\",\n    \"FM1R-AD\",\n    \"FM1RE\",\n    \"FM1RE-AD\",\n    \"FM2\",\n    \"FM2-AD\",\n    \"FM2R\",\n    \"FM2R-AD\",\n    \"FM2RE\",\n    \"FM2RE-AD\",\n    \"FM3\",\n    \"FM3-AD\",\n    \"FM3R\",\n    \"FM3R-AD\",\n    \"FM3RE\",\n    \"FM3RE-AD\",\n    \"FM4\",\n    \"FM4-AD\",\n    \"FM4R\",\n    \"FM4R-AD\",\n    \"FM4RE\",\n    \"FM4RE-AD\",\n    \"FM5\",\n    \"FM5-AD\",\n    \"FM5R\",\n    \"FM5R-AD\",\n    \"FM5RE\",\n    \"FM5RE-AD\",\n    \"FM6\",\n    \"FM6-AD\",\n    \"FM6R\",\n    \"FM6R-AD\",\n    \"FM6RE\",\n    \"FM6RE-AD\",\n    \"FM7\",\n    \"FM7-AD\",\n    \"FM7R\",\n    \"FM7R-AD\",\n    \"FM7RE\",\n    \"FM7RE-AD\",\n    \"FM8\",\n    \"FM8-AD\",\n    \"FM8R\",\n    \"FM8R-AD\",\n    \"FM8RE\",\n    \"FM8RE-AD\",\n    \"FM9\",\n    \"FM9-AD\",\n    \"FM9R\",\n    \"FM9R-AD\",\n    \"FM9RE\",\n    \"FM9RE-AD\",\n    \"FMX\",\n    \"FMX-AD\",\n    \"FMXR\",\n    \"FMXR-AD\",\n    \"FMXRE\",\n    \"FMXRE-AD\",\n    \"FO\",\n    \"FO-AD\",\n    \"FOR\",\n    \"FOR-AD\",\n    \"FORE\",\n    \"FORE-AD\",\n    \"FPFR\",\n    \"FPFR-AD\",\n    \"FS\",\n    \"FS-AD\",\n    \"FSR\",\n    \"FSR-AD\",\n    \"FSRE\",\n    \"FSRE-AD\",\n    \"FT1\",\n    \"FT1-AD\",\n    \"FT1R\",\n    \"FT1R-AD\",\n    \"FT1RE\",\n    \"FT1RE-AD\",\n    \"FT2\",\n    \"FT2-AD\",\n    \"FT2R\",\n    \"FT2R-AD\",\n    \"FT2RE\",\n    \"FT2RE-AD\",\n    \"FT3\",\n    \"FT3-AD\",\n    \"FT3R\",\n    \"FT3R-AD\",\n    \"FT3RE\",\n    \"FT3RE-AD\",\n    \"FTX\",\n    \"FTX-AD\",\n    \"FTXR\",\n    \"FTXR-AD\",\n    \"FTXRE\",\n    \"FTXRE-AD\",\n    \"MG\",\n    \"MG-AD\",\n    \"MGR\",\n    \"MGR-AD\",\n    \"MJ\",\n    \"MJ-AD\",\n    \"MJR\",\n    \"MJR-AD\",\n    \"MJRE\",\n    \"MJRE-AD\",\n    \"MM1\",\n    \"MM1-AD\",\n    \"MM1R\",\n    \"MM1R-AD\",\n    \"MM1RE\",\n    \"MM1RE-AD\",\n    \"MM2\",\n    \"MM2-AD\",\n    \"MM2R\",\n    \"MM2R-AD\",\n    \"MM2RE\",\n    \"MM2RE-AD\",\n    \"MM3\",\n    \"MM3-AD\",\n    \"MM3R\",\n    \"MM3R-AD\",\n    \"MM3RE\",\n    \"MM3RE-AD\",\n    \"MM4\",\n    \"MM4-AD\",\n    \"MM4R\",\n    \"MM4R-AD\",\n    \"MM4RE\",\n    \"MM4RE-AD\",\n    \"MM5\",\n    \"MM5-AD\",\n    \"MM5R\",\n    \"MM5R-AD\",\n    \"MM5RE\",\n    \"MM5RE-AD\",\n    \"MM6\",\n    \"MM6-AD\",\n    \"MM6R\",\n    \"MM6R-AD\",\n    \"MM6RE\",\n    \"MM6RE-AD\",\n    \"MM7\",\n    \"MM7-AD\",\n    \"MM7R\",\n    \"MM7R-AD\",\n    \"MM7RE\",\n    \"MM7RE-AD\",\n    \"MM8\",\n    \"MM8-AD\",\n    \"MM8R\",\n    \"MM8R-AD\",\n    \"MM8RE\",\n    \"MM8RE-AD\",\n    \"MM9\",\n    \"MM9-AD\",\n    \"MM9R\",\n    \"MM9R-AD\",\n    \"MM9RE\",\n    \"MM9RE-AD\",\n    \"MMX\",\n    \"MMX-AD\",\n    \"MMXR\",\n    \"MMXR-AD\",\n    \"MMXRE\",\n    \"MMXRE-AD\",\n    \"MO\",\n    \"MO-AD\",\n    \"MOR\",\n    \"MOR-AD\",\n    \"MORE\",\n    \"MORE-AD\",\n    \"MPFR\",\n    \"MPFR-AD\",\n    \"MS\",\n    \"MS-AD\",\n    \"MSR\",\n    \"MSR-AD\",\n    \"MSRE\",\n    \"MSRE-AD\",\n    \"MT1\",\n    \"MT1-AD\",\n    \"MT1R\",\n    \"MT1R-AD\",\n    \"MT1RE\",\n    \"MT1RE-AD\",\n    \"MT2\",\n    \"MT2-AD\",\n    \"MT2R\",\n    \"MT2R-AD\",\n    \"MT2RE\",\n    \"MT2RE-AD\",\n    \"MT3\",\n    \"MT3-AD\",\n    \"MT3R\",\n    \"MT3R-AD\",\n    \"MT3RE\",\n    \"MT3RE-AD\",\n    \"MTX\",\n    \"MTX-AD\",\n    \"MTXR\",\n    \"MTXR-AD\",\n    \"MTXRE\",\n    \"MTXRE-AD\"\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Schwartz/Malone\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  allow4thAttempts: true\n};\n\nconst usaplDefaults: Partial<MeetState> = {\n  divisions: [\n    \"MR-O\",\n    \"MR-Y\",\n    \"MR-Y1\",\n    \"MR-Y2\",\n    \"MR-Y3\",\n    \"MR-T1\",\n    \"MR-T2\",\n    \"MR-T3\",\n    \"MR-Jr\",\n    \"MR-M1a\",\n    \"MR-M1b\",\n    \"MR-M2a\",\n    \"MR-M2b\",\n    \"MR-M3a\",\n    \"MR-M3b\",\n    \"MR-M4a\",\n    \"MR-M4b\",\n    \"MR-M5a\",\n    \"MR-M5b\",\n    \"MR-M6a\",\n    \"MR-M6b\",\n    \"MR-G\",\n    \"M-O\",\n    \"M-Y\",\n    \"M-Y1\",\n    \"M-Y2\",\n    \"M-Y3\",\n    \"M-T1\",\n    \"M-T2\",\n    \"M-T3\",\n    \"M-Jr\",\n    \"M-M1a\",\n    \"M-M1b\",\n    \"M-M2a\",\n    \"M-M2b\",\n    \"M-M3a\",\n    \"M-M3b\",\n    \"M-M4a\",\n    \"M-M4b\",\n    \"M-M5a\",\n    \"M-M5b\",\n    \"M-M6a\",\n    \"M-M6b\",\n    \"M-G\",\n    \"FR-O\",\n    \"FR-Y\",\n    \"FR-Y1\",\n    \"FR-Y2\",\n    \"FR-Y3\",\n    \"FR-T1\",\n    \"FR-T2\",\n    \"FR-T3\",\n    \"FR-Jr\",\n    \"FR-M1a\",\n    \"FR-M1b\",\n    \"FR-M2a\",\n    \"FR-M2b\",\n    \"FR-M3a\",\n    \"FR-M3b\",\n    \"FR-M4a\",\n    \"FR-M4b\",\n    \"FR-M5a\",\n    \"FR-M5b\",\n    \"FR-M6a\",\n    \"FR-M6b\",\n    \"FR-G\",\n    \"F-O\",\n    \"F-Y\",\n    \"F-Y1\",\n    \"F-Y2\",\n    \"F-Y3\",\n    \"F-T1\",\n    \"F-T2\",\n    \"F-T3\",\n    \"F-Jr\",\n    \"F-M1a\",\n    \"F-M1b\",\n    \"F-M2a\",\n    \"F-M2b\",\n    \"F-M3a\",\n    \"F-M3b\",\n    \"F-M4a\",\n    \"F-M4b\",\n    \"F-M5a\",\n    \"F-M5b\",\n    \"F-M6a\",\n    \"F-M6b\",\n    \"F-G\"\n  ],\n  weightClassesKgMen: [53, 59, 66, 74, 83, 93, 105, 120],\n  weightClassesKgWomen: [43, 47, 52, 57, 63, 72, 84],\n  weightClassesKgMx: [53, 59, 66, 74, 83, 93, 105, 120],\n  formula: \"IPF Points\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: false\n};\n\nconst uspaDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Y4-12\",\n    \"J13-15\",\n    \"J16-17\",\n    \"J18-19\",\n    \"J20-23\",\n    \"S35-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\"\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: true\n};\n\nconst wabdlDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"T12-13\",\n    \"T14-15\",\n    \"T16-17\",\n    \"T18-19\",\n    \"J20-25\",\n    \"S33-39\",\n    \"M40-46\",\n    \"M47-53\",\n    \"M54-60\",\n    \"M61-67\",\n    \"M68-74\",\n    \"M75-79\",\n    \"M80-84\",\n    \"M85-89\",\n    \"M90+\"\n  ],\n  weightClassesKgMen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 117.5, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100],\n  weightClassesKgMx: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 117.5, 125, 140],\n  formula: \"Schwartz/Malone\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: true\n};\n\nconst wpcDefaults: Partial<MeetState> = {\n  divisions: [\n    \"F_GCR\",\n    \"F_GCR_A\",\n    \"F_GEM\",\n    \"F_GEM_A\",\n    \"F_GES\",\n    \"F_GES_A\",\n    \"F_GR\",\n    \"F_GR_A\",\n    \"F_JCR\",\n    \"F_JCR_A\",\n    \"F_JEM\",\n    \"F_JEM_A\",\n    \"F_JES\",\n    \"F_JES_A\",\n    \"F_JR\",\n    \"F_JR_A\",\n    \"F_MCR_1\",\n    \"F_MCR_1_A\",\n    \"F_MCR_2\",\n    \"F_MCR_2_A\",\n    \"F_MCR_3\",\n    \"F_MCR_3_A\",\n    \"F_MCR_4\",\n    \"F_MCR_4_A\",\n    \"F_MCR_5\",\n    \"F_MCR_5_A\",\n    \"F_MCR_6\",\n    \"F_MCR_6_A\",\n    \"F_MCR_7\",\n    \"F_MCR_7_A\",\n    \"F_MCR_8\",\n    \"F_MCR_8_A\",\n    \"F_MCR_9\",\n    \"F_MCR_9_A\",\n    \"F_MCR_X\",\n    \"F_MCR_X_A\",\n    \"F_MEM_1\",\n    \"F_MEM_1_A\",\n    \"F_MEM_2\",\n    \"F_MEM_2_A\",\n    \"F_MEM_3\",\n    \"F_MEM_3_A\",\n    \"F_MEM_4\",\n    \"F_MEM_4_A\",\n    \"F_MEM_5\",\n    \"F_MEM_5_A\",\n    \"F_MEM_6\",\n    \"F_MEM_6_A\",\n    \"F_MEM_7\",\n    \"F_MEM_7_A\",\n    \"F_MEM_8\",\n    \"F_MEM_8_A\",\n    \"F_MEM_9\",\n    \"F_MEM_9_A\",\n    \"F_MEM_X\",\n    \"F_MEM_X_A\",\n    \"F_MES_1\",\n    \"F_MES_1_A\",\n    \"F_MES_2\",\n    \"F_MES_2_A\",\n    \"F_MES_3\",\n    \"F_MES_3_A\",\n    \"F_MES_4\",\n    \"F_MES_4_A\",\n    \"F_MES_5\",\n    \"F_MES_5_A\",\n    \"F_MES_6\",\n    \"F_MES_6_A\",\n    \"F_MES_7\",\n    \"F_MES_7_A\",\n    \"F_MES_8\",\n    \"F_MES_8_A\",\n    \"F_MES_9\",\n    \"F_MES_9_A\",\n    \"F_MES_X\",\n    \"F_MES_X_A\",\n    \"F_MR_1\",\n    \"F_MR_1_A\",\n    \"F_MR_2\",\n    \"F_MR_2_A\",\n    \"F_MR_3\",\n    \"F_MR_3_A\",\n    \"F_MR_4\",\n    \"F_MR_4_A\",\n    \"F_MR_5\",\n    \"F_MR_5_A\",\n    \"F_MR_6\",\n    \"F_MR_6_A\",\n    \"F_MR_7\",\n    \"F_MR_7_A\",\n    \"F_MR_8\",\n    \"F_MR_8_A\",\n    \"F_MR_9\",\n    \"F_MR_9_A\",\n    \"F_MR_X\",\n    \"F_MR_X_A\",\n    \"F_NEM\",\n    \"F_NR\",\n    \"F_OCR\",\n    \"F_OCR_A\",\n    \"F_OEM\",\n    \"F_OEM_A\",\n    \"F_OES\",\n    \"F_OES_A\",\n    \"F_OR\",\n    \"F_OR_A\",\n    \"F_SCR\",\n    \"F_SCR_A\",\n    \"F_SEM\",\n    \"F_SEM_A\",\n    \"F_SES\",\n    \"F_SES_A\",\n    \"F_SOR\",\n    \"F_SOR_A\",\n    \"F_SR\",\n    \"F_SR_A\",\n    \"F_TCR_1\",\n    \"F_TCR_1_A\",\n    \"F_TCR_2\",\n    \"F_TCR_2_A\",\n    \"F_TCR_3\",\n    \"F_TCR_3_A\",\n    \"F_TCR_X\",\n    \"F_TCR_X_A\",\n    \"F_TEM_1\",\n    \"F_TEM_1_A\",\n    \"F_TEM_2\",\n    \"F_TEM_2_A\",\n    \"F_TEM_3\",\n    \"F_TEM_3_A\",\n    \"F_TEM_X\",\n    \"F_TEM_X_A\",\n    \"F_TES_1\",\n    \"F_TES_1_A\",\n    \"F_TES_2\",\n    \"F_TES_2_A\",\n    \"F_TES_3\",\n    \"F_TES_3_A\",\n    \"F_TES_X\",\n    \"F_TES_X_A\",\n    \"F_TR_1\",\n    \"F_TR_1_A\",\n    \"F_TR_2\",\n    \"F_TR_2_A\",\n    \"F_TR_3\",\n    \"F_TR_3_A\",\n    \"F_TR_X\",\n    \"F_TR_X_A\",\n    \"F_YCR\",\n    \"F_YCR_A\",\n    \"F_YEM\",\n    \"F_YEM_A\",\n    \"F_YES\",\n    \"F_YES_A\",\n    \"F_YR\",\n    \"F_YR_A\",\n    \"M_GCR\",\n    \"M_GCR_A\",\n    \"M_GEM\",\n    \"M_GEM_A\",\n    \"M_GES\",\n    \"M_GES_A\",\n    \"M_GR\",\n    \"M_GR_A\",\n    \"M_JCR\",\n    \"M_JCR_A\",\n    \"M_JEM\",\n    \"M_JEM_A\",\n    \"M_JES\",\n    \"M_JES_A\",\n    \"M_JR\",\n    \"M_JR_A\",\n    \"M_MCR_1\",\n    \"M_MCR_1_A\",\n    \"M_MCR_2\",\n    \"M_MCR_2_A\",\n    \"M_MCR_3\",\n    \"M_MCR_3_A\",\n    \"M_MCR_4\",\n    \"M_MCR_4_A\",\n    \"M_MCR_5\",\n    \"M_MCR_5_A\",\n    \"M_MCR_6\",\n    \"M_MCR_6_A\",\n    \"M_MCR_7\",\n    \"M_MCR_7_A\",\n    \"M_MCR_8\",\n    \"M_MCR_8_A\",\n    \"M_MCR_9\",\n    \"M_MCR_9_A\",\n    \"M_MCR_X\",\n    \"M_MCR_X_A\",\n    \"M_MEM_1\",\n    \"M_MEM_1_A\",\n    \"M_MEM_2\",\n    \"M_MEM_2_A\",\n    \"M_MEM_3\",\n    \"M_MEM_3_A\",\n    \"M_MEM_4\",\n    \"M_MEM_4_A\",\n    \"M_MEM_5\",\n    \"M_MEM_5_A\",\n    \"M_MEM_6\",\n    \"M_MEM_6_A\",\n    \"M_MEM_7\",\n    \"M_MEM_7_A\",\n    \"M_MEM_8\",\n    \"M_MEM_8_A\",\n    \"M_MEM_9\",\n    \"M_MEM_9_A\",\n    \"M_MEM_X\",\n    \"M_MEM_X_A\",\n    \"M_MES_1\",\n    \"M_MES_1_A\",\n    \"M_MES_2\",\n    \"M_MES_2_A\",\n    \"M_MES_3\",\n    \"M_MES_3_A\",\n    \"M_MES_4\",\n    \"M_MES_4_A\",\n    \"M_MES_5\",\n    \"M_MES_5_A\",\n    \"M_MES_6\",\n    \"M_MES_6_A\",\n    \"M_MES_7\",\n    \"M_MES_7_A\",\n    \"M_MES_8\",\n    \"M_MES_8_A\",\n    \"M_MES_9\",\n    \"M_MES_9_A\",\n    \"M_MES_X\",\n    \"M_MES_X_A\",\n    \"M_MR_1\",\n    \"M_MR_1_A\",\n    \"M_MR_2\",\n    \"M_MR_2_A\",\n    \"M_MR_3\",\n    \"M_MR_3_A\",\n    \"M_MR_4\",\n    \"M_MR_4_A\",\n    \"M_MR_5\",\n    \"M_MR_5_A\",\n    \"M_MR_6\",\n    \"M_MR_6_A\",\n    \"M_MR_7\",\n    \"M_MR_7_A\",\n    \"M_MR_8\",\n    \"M_MR_8_A\",\n    \"M_MR_9\",\n    \"M_MR_9_A\",\n    \"M_MR_X\",\n    \"M_MR_X_A\",\n    \"M_NEM\",\n    \"M_NEM_A\",\n    \"M_NR\",\n    \"M_NR_A\",\n    \"M_OCR\",\n    \"M_OCR_A\",\n    \"M_OEM\",\n    \"M_OEM_A\",\n    \"M_OES\",\n    \"M_OES_A\",\n    \"M_OR\",\n    \"M_OR_A\",\n    \"M_PFEM\",\n    \"M_PFEM_A\",\n    \"M_PFR_A\",\n    \"M_SCR\",\n    \"M_SCR_A\",\n    \"M_SEM\",\n    \"M_SEM_A\",\n    \"M_SES\",\n    \"M_SES_A\",\n    \"M_SOEM\",\n    \"M_SOEM_A\",\n    \"M_SOR\",\n    \"M_SOR_A\",\n    \"M_SR\",\n    \"M_SR_A\",\n    \"M_TCR_1\",\n    \"M_TCR_1_A\",\n    \"M_TCR_2\",\n    \"M_TCR_2_A\",\n    \"M_TCR_3\",\n    \"M_TCR_3_A\",\n    \"M_TCR_X\",\n    \"M_TCR_X_A\",\n    \"M_TEM_1\",\n    \"M_TEM_1_A\",\n    \"M_TEM_2\",\n    \"M_TEM_2_A\",\n    \"M_TEM_3\",\n    \"M_TEM_3_A\",\n    \"M_TEM_X\",\n    \"M_TEM_X_A\",\n    \"M_TES_1\",\n    \"M_TES_1_A\",\n    \"M_TES_2\",\n    \"M_TES_2_A\",\n    \"M_TES_3\",\n    \"M_TES_3_A\",\n    \"M_TES_X\",\n    \"M_TES_X_A\",\n    \"M_TR_1\",\n    \"M_TR_1_A\",\n    \"M_TR_2\",\n    \"M_TR_2_A\",\n    \"M_TR_3\",\n    \"M_TR_3_A\",\n    \"M_TR_X\",\n    \"M_TR_X_A\",\n    \"M_YCR\",\n    \"M_YCR_A\",\n    \"M_YEM\",\n    \"M_YEM_A\",\n    \"M_YR\",\n    \"M_YR_A\"\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Glossbrenner\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  allow4thAttempts: true\n};\n\nconst wrpfDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Y5-13\",\n    \"T14-16\",\n    \"S17-19\",\n    \"J20-23\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\"\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: true\n};\n\nclass AutoFillRules extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    this.state = {\n      selectedOption: \"Traditional\"\n    };\n  }\n\n  handleSelectChange = (event: FormEvent<FormControlTypeHack>) => {\n    const value = event.currentTarget.value as AutoFillOption;\n    // Only handle any valid values & assist the compiler in giving us a compile error if AutoFillOption has more values added\n    switch (value) {\n      case \"Traditional\":\n      case \"BP\":\n      case \"GPC\":\n      case \"SPF\":\n      case \"UPA\":\n      case \"USPA\":\n      case \"USAPL\":\n      case \"WABDL\":\n      case \"WPC\":\n      case \"WRPF\":\n        this.setState({ selectedOption: value });\n        break;\n\n      default:\n        checkExhausted(value);\n        throw new Error(`Expected a value that corresponds to an AutoFillOption, instead got \"${value}\"`);\n    }\n  };\n\n  handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    switch (this.state.selectedOption) {\n      case \"Traditional\":\n        this.props.updateMeet(traditionalDefaults);\n        this.props.onChange();\n        return;\n      case \"BP\":\n        this.props.updateMeet(bpDefaults);\n        this.props.onChange();\n        return;\n      case \"GPC\":\n        this.props.updateMeet(gpcDefaults);\n        this.props.onChange();\n        return;\n      case \"SPF\":\n        this.props.updateMeet(spfDefaults);\n        this.props.onChange();\n        return;\n      case \"UPA\":\n        this.props.updateMeet(upaDefaults);\n        this.props.onChange();\n        return;\n      case \"USAPL\":\n        this.props.updateMeet(usaplDefaults);\n        this.props.onChange();\n        return;\n      case \"USPA\":\n        this.props.updateMeet(uspaDefaults);\n        this.props.onChange();\n        return;\n      case \"WABDL\":\n        this.props.updateMeet(wabdlDefaults);\n        this.props.onChange();\n        return;\n      case \"WPC\":\n        this.props.updateMeet(wpcDefaults);\n        this.props.onChange();\n        return;\n      case \"WRPF\":\n        this.props.updateMeet(wrpfDefaults);\n        this.props.onChange();\n        return;\n      default:\n        checkExhausted(this.state.selectedOption);\n        return;\n    }\n  };\n\n  render() {\n    const lang = this.props.language;\n\n    const stringTraditional = getString(\"meet-setup.rules-traditional\", lang);\n    const stringBP = getString(\"meet-setup.rules-bp\", lang);\n    const stringGPC = getString(\"meet-setup.rules-gpc\", lang);\n    const stringSPF = getString(\"meet-setup.rules-spf\", lang);\n    const stringUPA = getString(\"meet-setup.rules-upa\", lang);\n    const stringUSAPL = getString(\"meet-setup.rules-usapl\", lang);\n    const stringUSPA = getString(\"meet-setup.rules-uspa\", lang);\n    const stringWABDL = getString(\"meet-setup.rules-wabdl\", lang);\n    const stringWPC = getString(\"meet-setup.rules-wpc\", lang);\n    const stringWRPF = getString(\"meet-setup.rules-wrpf\", lang);\n\n    return (\n      <div>\n        <FormGroup>\n          <Form.Label>\n            <FormattedMessage id=\"meet-setup.label-auto-fill-rules\" defaultMessage=\"Auto-Fill Rules\" />\n          </Form.Label>\n          <div>\n            <FormControl\n              as=\"select\"\n              onChange={this.handleSelectChange}\n              defaultValue={this.state.selectedOption}\n              style={{ width: \"70%\", display: \"inline-block\" }}\n              className=\"custom-select\"\n            >\n              <option key=\"Traditional\" value=\"Traditional\">\n                {stringTraditional}\n              </option>\n              <option key=\"BP\" value=\"BP\">\n                {stringBP}\n              </option>\n              <option key=\"GPC\" value=\"GPC\">\n                {stringGPC}\n              </option>\n              <option key=\"SPF\" value=\"SPF\">\n                {stringSPF}\n              </option>\n              <option key=\"UPA\" value=\"UPA\">\n                {stringUPA}\n              </option>\n              <option key=\"USAPL\" value=\"USAPL\">\n                {stringUSAPL}\n              </option>\n              <option key=\"USPA\" value=\"USPA\">\n                {stringUSPA}\n              </option>\n              <option key=\"WABDL\" value=\"WABDL\">\n                {stringWABDL}\n              </option>\n              <option key=\"WPC\" value=\"WPC\">\n                {stringWPC}\n              </option>\n              <option key=\"WRPF\" value=\"WRPF\">\n                {stringWRPF}\n              </option>\n            </FormControl>\n\n            <Button onClick={this.handleClick} variant=\"primary\" style={{ width: \"25%\", marginLeft: \"5%\" }}>\n              <FormattedMessage id=\"meet-setup.button-autofill\" defaultMessage=\"Auto-Fill\" />\n            </Button>\n          </div>\n        </FormGroup>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  federation: state.meet.federation,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    updateMeet: changes => dispatch(updateMeet(changes))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoFillRules);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport CreatableSelect from \"react-select/creatable\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { setDivisions } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\nimport { ActionMeta, ValueType } from \"react-select\";\n\nconst components = {\n  DropdownIndicator: null\n};\n\ninterface OptionType {\n  label: string;\n  value: string;\n}\n\nconst createOption = (label: string): OptionType => ({\n  label,\n  value: label\n});\n\ninterface StateProps {\n  divisions: ReadonlyArray<string>;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setDivisions: (divisions: ReadonlyArray<string>) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  inputValue: string;\n  value: Array<OptionType>;\n}\n\nclass DivisionSelect extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    const objarray = [];\n    for (let i = 0; i < props.divisions.length; i++) {\n      const division = props.divisions[i];\n      objarray.push({ value: division, label: division });\n    }\n\n    this.state = {\n      inputValue: \"\",\n      value: objarray\n    };\n\n    this.maybeUpdateRedux = this.maybeUpdateRedux.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  // Updates the Redux store if a division was added or removed.\n  // Since updates are synchronous, we can simply check length.\n  maybeUpdateRedux = (objarray: Array<OptionType>): void => {\n    // objarray is a list of {value: \"foo\", label: \"foo\"} objects.\n    if (objarray.length === this.props.divisions.length) {\n      return;\n    }\n\n    // The divisions changed: save to Redux.\n    const divisions = [];\n    for (let i = 0; i < objarray.length; i++) {\n      divisions.push(objarray[i].label);\n    }\n    this.props.setDivisions(divisions);\n  };\n\n  // Handles the case of deleting an existing division.\n  handleChange = (value: ValueType<OptionType> | null, actionMeta: ActionMeta): void => {\n    if (value instanceof Array) {\n      this.setState({ value: value });\n      this.maybeUpdateRedux(value);\n    } else if (value === null) {\n      this.setState({ value: [] });\n      this.maybeUpdateRedux([]);\n    }\n  };\n\n  // Reflects the current typing status in the state.\n  handleInputChange = (inputValue: string): void => {\n    this.setState({ inputValue: inputValue });\n  };\n\n  // Handles the case of creating a new division.\n  handleKeyDown = (event: React.KeyboardEvent<HTMLElement>): void => {\n    const { inputValue, value } = this.state;\n    if (!inputValue) return;\n    if (event.key === \"Enter\" || event.key === \"Tab\") {\n      // Disallow creating redundant divisions.\n      for (let i = 0; i < value.length; i++) {\n        if (value[i].label === inputValue) {\n          // Silently drop the redundant division.\n          this.setState({ inputValue: \"\" });\n          event.preventDefault();\n          return;\n        }\n      }\n\n      const newValue = [...value, createOption(inputValue)];\n      this.setState({\n        inputValue: \"\",\n        value: newValue\n      });\n      this.maybeUpdateRedux(newValue);\n      event.preventDefault();\n    }\n  };\n\n  render() {\n    const { inputValue, value } = this.state;\n    const placeholder = getString(\"meet-setup.divisions-placeholder\", this.props.language);\n    return (\n      <Form.Group>\n        <Form.Label>\n          <FormattedMessage id=\"meet-setup.divisions-label\" defaultMessage=\"Divisions (prefer short codes!)\" />\n        </Form.Label>\n        <CreatableSelect\n          components={components}\n          inputValue={inputValue}\n          isMulti\n          menuIsOpen={false}\n          onChange={this.handleChange}\n          onInputChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={placeholder}\n          value={value}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  divisions: state.meet.divisions,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setDivisions: divisions => dispatch(setDivisions(divisions))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DivisionSelect);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport CreatableSelect from \"react-select/creatable\";\n\nimport { getString } from \"../../logic/strings\";\nimport { string2number, displayWeight } from \"../../logic/units\";\n\nimport { setWeightClasses } from \"../../actions/meetSetupActions\";\n\nimport { Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport { ActionMeta, ValueType } from \"react-select\";\n\nconst components = {\n  DropdownIndicator: null\n};\n\ntype OptionType = {\n  label: string;\n  value: string;\n};\n\nconst createOption = (label: string): OptionType => ({\n  label,\n  value: label.replace(\",\", \".\")\n});\n\ninterface OwnProps {\n  label: string;\n  sex: Sex;\n}\n\ninterface StateProps {\n  classes: ReadonlyArray<number>;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setWeightClasses: (sex: Sex, classesKg: ReadonlyArray<number>) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  inputValue: string;\n  value: Array<OptionType>;\n}\n\nclass WeightClassesSelect extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    const objarray: Array<OptionType> = [];\n    for (let i = 0; i < props.classes.length; i++) {\n      const c = displayWeight(props.classes[i], props.language);\n      objarray.push(createOption(c));\n    }\n\n    this.state = {\n      inputValue: \"\",\n      value: objarray\n    };\n\n    this.maybeUpdateRedux = this.maybeUpdateRedux.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  // Updates the Redux store if a weightclass was added or removed.\n  // Since updates are synchronous, we can simply check length.\n  maybeUpdateRedux = (objarray: Array<OptionType>): void => {\n    if (objarray.length === this.props.classes.length) {\n      return;\n    }\n\n    // The classes changed: save to Redux.\n    const classes = [];\n    for (let i = 0; i < objarray.length; i++) {\n      classes.push(Number(objarray[i].value));\n    }\n    this.props.setWeightClasses(this.props.sex, classes);\n  };\n\n  handleChange = (value: ValueType<OptionType> | null, actionMeta: ActionMeta): void => {\n    if (value instanceof Array) {\n      this.setState({ value: value });\n      this.maybeUpdateRedux(value);\n    } else if (value === null) {\n      this.setState({ value: [] });\n      this.maybeUpdateRedux([]);\n    }\n  };\n\n  // Reflects the current typing status in the state.\n  handleInputChange = (inputValue: string): void => {\n    this.setState({ inputValue: inputValue });\n  };\n\n  // Handles the case of creating a new weightclass.\n  handleKeyDown = (event: React.KeyboardEvent<HTMLElement>): void => {\n    const { inputValue, value } = this.state;\n    if (!inputValue) return;\n    if (event.key === \"Enter\" || event.key === \"Tab\") {\n      const asNumber = string2number(inputValue);\n\n      // Disallow creating non-numeric inputs.\n      if (isNaN(asNumber) || !isFinite(asNumber)) {\n        this.setState({ inputValue: \"\" });\n        event.preventDefault();\n        return;\n      }\n\n      // Disallow negative inputs.\n      // The string check is for negative zero.\n      if (asNumber < 0 || inputValue.includes(\"-\")) {\n        this.setState({ inputValue: \"\" });\n        event.preventDefault();\n        return;\n      }\n\n      // Disallow creating redundant classes.\n      for (let i = 0; i < value.length; i++) {\n        if (string2number(value[i].label) === asNumber) {\n          // Silently drop the redundant weightclass.\n          this.setState({ inputValue: \"\" });\n          event.preventDefault();\n          return;\n        }\n      }\n\n      // Sort the new value into the array.\n      let newValue = [...value, createOption(inputValue)];\n      newValue = newValue.sort((a, b) => Number(a.value) - Number(b.value));\n\n      this.setState({\n        inputValue: \"\",\n        value: newValue\n      });\n      this.maybeUpdateRedux(newValue);\n      event.preventDefault();\n    }\n  };\n\n  render() {\n    const { inputValue, value } = this.state;\n    const placeholder = getString(\"meet-setup.placeholder-classes\", this.props.language);\n\n    return (\n      <Form.Group>\n        <Form.Label>{this.props.label}</Form.Label>\n        <CreatableSelect\n          components={components}\n          inputValue={inputValue}\n          isMulti\n          menuIsOpen={false}\n          onChange={this.handleChange}\n          onInputChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={placeholder}\n          value={value}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst selectClassesBySex = (sex: Sex, state: GlobalState): ReadonlyArray<number> => {\n  switch (sex) {\n    case \"M\":\n      return state.meet.weightClassesKgMen;\n    case \"F\":\n      return state.meet.weightClassesKgWomen;\n    case \"Mx\":\n      return state.meet.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return state.meet.weightClassesKgMen;\n  }\n};\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  return {\n    classes: selectClassesBySex(ownProps.sex, state),\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setWeightClasses: (sex, classesKg) => dispatch(setWeightClasses(sex, classesKg))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightClassesSelect);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { setBarAndCollarsWeightKg } from \"../../actions/meetSetupActions\";\nimport { getString } from \"../../logic/strings\";\nimport { kg2lbs, lbs2kg } from \"../../logic/units\";\n\nimport { Language, Lift, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport { SetBarAndCollarsWeightKgAction } from \"../../types/actionTypes\";\nimport NumberInput from \"../common/NumberInput\";\n\ninterface OwnProps {\n  lift: Lift;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  squatBarAndCollarsWeightKg: number;\n  benchBarAndCollarsWeightKg: number;\n  deadliftBarAndCollarsWeightKg: number;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setBarAndCollarsWeightKg: (lift: Lift, weight: number) => SetBarAndCollarsWeightKgAction;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  initialValue: number;\n}\n\nclass BarAndCollarsWeightKg extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    const weight = this.getInitialBarAndCollarsWeightKg(this.props.lift);\n\n    this.state = {\n      initialValue: this.props.inKg ? weight : kg2lbs(weight)\n    };\n  }\n\n  getInitialBarAndCollarsWeightKg = (lift: Lift): number => {\n    switch (lift) {\n      case \"S\":\n        return this.props.squatBarAndCollarsWeightKg;\n      case \"B\":\n        return this.props.benchBarAndCollarsWeightKg;\n      case \"D\":\n        return this.props.deadliftBarAndCollarsWeightKg;\n      default:\n        checkExhausted(lift);\n        return 0;\n    }\n  };\n\n  validate = (n: number): Validation => {\n    // Don't use isInteger() since decimals are allowed.\n    if (isNaN(n) || !isFinite(n) || n < 5 || n > 1000) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (n: number) => {\n    if (this.validate(n) === \"success\") {\n      const weight = this.props.inKg ? n : lbs2kg(n);\n      this.props.setBarAndCollarsWeightKg(this.props.lift, weight);\n    }\n  };\n\n  getLiftLabel = (lift: Lift, inKg: boolean, language: Language): string => {\n    switch (lift) {\n      case \"S\":\n        if (inKg) {\n          return getString(\"meet-setup.bar-weight-squat-kg\", language);\n        } else {\n          return getString(\"meet-setup.bar-weight-squat-lbs\", language);\n        }\n      case \"B\":\n        if (inKg) {\n          return getString(\"meet-setup.bar-weight-bench-kg\", language);\n        } else {\n          return getString(\"meet-setup.bar-weight-bench-lbs\", language);\n        }\n      case \"D\":\n        if (inKg) {\n          return getString(\"meet-setup.bar-weight-deadlift-kg\", language);\n        } else {\n          return getString(\"meet-setup.bar-weight-deadlift-lbs\", language);\n        }\n      default:\n        checkExhausted(lift);\n        return \"\";\n    }\n  };\n\n  render() {\n    return (\n      <NumberInput\n        initialValue={this.state.initialValue}\n        step={2.5}\n        validate={this.validate}\n        onChange={this.handleChange}\n        label={this.getLiftLabel(this.props.lift, this.props.inKg, this.props.language)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  squatBarAndCollarsWeightKg: state.meet.squatBarAndCollarsWeightKg,\n  benchBarAndCollarsWeightKg: state.meet.benchBarAndCollarsWeightKg,\n  deadliftBarAndCollarsWeightKg: state.meet.deadliftBarAndCollarsWeightKg,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setBarAndCollarsWeightKg: (lift: Lift, weightKg: number) => dispatch(setBarAndCollarsWeightKg(lift, weightKg))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarAndCollarsWeightKg);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a widget for selecting a plate color.\n\nimport React from \"react\";\nimport { ColorResult, TwitterPicker } from \"react-color\";\n\nimport { PlateColors } from \"../../constants/plateColors\";\n\nimport styles from \"./ColorPicker.module.scss\";\nimport * as Popper from \"react-popper\";\n\ninterface OwnProps {\n  color: string;\n  onChange: (color: string) => void;\n}\n\ntype Props = OwnProps;\n\ninterface InternalState {\n  displayColorPicker: boolean;\n  color: string;\n\n  // Handle returned by setTimeout() for the timeout that closes the color\n  // selector popup after the mouse leaves and time has elapsed.\n  timeoutId: any;\n}\n\nclass ColorPicker extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      displayColorPicker: false,\n      color: props.color,\n      timeoutId: null\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick = () => {\n    clearTimeout(this.state.timeoutId);\n    this.setState({ displayColorPicker: !this.state.displayColorPicker, timeoutId: null });\n  };\n\n  handleMouseLeave = () => {\n    // Close the popup after a second has elapsed.\n    // This gives the user a chance to bring the mouse back into the popup.\n    const timeoutId = setTimeout(() => {\n      this.setState({ displayColorPicker: false, timeoutId: null });\n    }, 1000);\n    this.setState({ timeoutId: timeoutId });\n  };\n\n  handleMouseEnter = () => {\n    // Prevent any close-popup timeout from executing.\n    if (this.state.timeoutId !== null) {\n      clearTimeout(this.state.timeoutId);\n      this.setState({ timeoutId: null });\n    }\n  };\n\n  handleChange = (color: ColorResult, event: any) => {\n    // @types/react-color doesn't define an event for onChange but it is published in\n    // their documentation: https://casesandberg.github.io/react-color/#api-onChange\n    // If the event was a MouseEvent|TouchEvent (i.e they clicked a swatch) we assume\n    // that the user wants the panel to close immediately.\n    const displayColorPicker = event.clientX === undefined;\n    const hex = color.hex.toUpperCase();\n    this.setState({ displayColorPicker, color: hex });\n    this.props.onChange(hex);\n  };\n\n  render() {\n    const colors = Object.values(PlateColors);\n    let picker = null;\n    if (this.state.displayColorPicker) {\n      picker = (\n        <Popper.Popper placement=\"bottom-end\">\n          {({ ref, style, placement }) => (\n            <div ref={ref} style={style} className={styles.onTop} data-placement={placement}>\n              <TwitterPicker\n                color={this.state.color}\n                colors={colors}\n                triangle=\"hide\"\n                onChange={this.handleChange as any}\n              />\n            </div>\n          )}\n        </Popper.Popper>\n      );\n    }\n\n    return (\n      <Popper.Manager>\n        <div onMouseLeave={this.handleMouseLeave} onMouseEnter={this.handleMouseEnter}>\n          <Popper.Reference>\n            {({ ref }) => (\n              <div ref={ref} className={styles.swatch} onClick={this.handleClick}>\n                <div className={styles.color} style={{ background: this.state.color }} />\n              </div>\n            )}\n          </Popper.Reference>\n          {picker}\n        </div>\n      </Popper.Manager>\n    );\n  }\n}\n\nexport default ColorPicker;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the selector for determining how many plates are available\n// to loaders on one side, and what color it is, for a single plate weight.\n\nimport React, { FunctionComponent } from \"react\";\n\nimport NumberInput from \"../common/NumberInput\";\nimport ColorPicker from \"./ColorPicker\";\n\nimport { Validation } from \"../../types/dataTypes\";\n\ninterface Props {\n  id: string;\n  weightKg: number;\n  displayWeight: string; // What kind of a plate this is.\n  pairCount: number;\n  color: string;\n  onChange: (weightKg: number, id: string, amount: number, color: string) => void;\n}\n\nconst validate = (n: number): Validation => {\n  if (!Number.isInteger(n) || n < 0 || n > 50) {\n    return \"error\";\n  }\n  return \"success\";\n};\n\nconst PlateInput: FunctionComponent<Props> = props => {\n  return (\n    <tr key={props.id}>\n      <td>{props.displayWeight}</td>\n      <td>\n        <div style={{ maxWidth: \"130px\" }}>\n          <NumberInput\n            initialValue={props.pairCount}\n            step={1}\n            validate={validate}\n            onChange={count => props.onChange(props.weightKg, props.id, count, props.color)}\n            marginBottom=\"0px\"\n          />\n        </div>\n      </td>\n      <td>\n        <ColorPicker\n          color={props.color}\n          onChange={color => props.onChange(props.weightKg, props.id, props.pairCount, color)}\n        />\n      </td>\n    </tr>\n  );\n};\n\nexport default PlateInput;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the selector for determining how many plates are available\n// to loaders on one side.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Table from \"react-bootstrap/Table\";\n\nimport { setPlateConfig } from \"../../actions/meetSetupActions\";\n\nimport { getString } from \"../../logic/strings\";\nimport { displayWeight, kg2lbs } from \"../../logic/units\";\n\nimport { Language, Plate } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { isString } from \"../../types/utils\";\nimport { isNumber } from \"util\";\nimport PlateInput from \"./PlateInput\";\n\ninterface StateProps {\n  inKg: boolean;\n  plates: ReadonlyArray<Plate>;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setPlateConfig: (weight: number, amount: number, color: string) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass Plates extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validateAmountInput = this.validateAmountInput.bind(this);\n    this.updateHandler = this.updateHandler.bind(this);\n  }\n\n  validateAmountInput: (id: string) => \"error\" | null | undefined = id => {\n    const widget: any = document.getElementById(id);\n\n    // This can happen because the FormGroup is created before the widget exists.\n    if (widget === null) return;\n    const value = widget.value;\n\n    if (value === undefined) return \"error\";\n\n    // Ensure that the value is an integer in a reasonable range.\n    const asNum = Number(value);\n    if (Math.floor(asNum) !== asNum) return \"error\";\n    if (asNum < 0 || asNum > 20) return \"error\";\n    if (String(asNum) !== value) return \"error\";\n\n    return null;\n  };\n\n  updateHandler = (weightKg: number, id: string, amount: string | number | string[] | undefined, color: string) => {\n    if (!isString(amount) && !isNumber(amount)) {\n      throw new Error(`Expected either a string or a number, but got ${amount}`);\n    }\n\n    if (this.validateAmountInput(id) === \"error\") {\n      // Although no state is set, this is used to trigger the FormGroup\n      // to re-query the validationState on change.\n      return this.setState({});\n    }\n\n    this.props.setPlateConfig(weightKg, Number(amount), color);\n  };\n\n  renderWeightRow = (weightKg: number, amount: number, color: string) => {\n    // The input event value isn't passed by the event, so we assign a unique ID\n    // and then just search the whole document for it.\n    const id = \"weight\" + String(weightKg);\n    const weight = this.props.inKg ? weightKg : kg2lbs(weightKg);\n\n    return (\n      <PlateInput\n        id={id}\n        key={id}\n        weightKg={weightKg}\n        displayWeight={displayWeight(weight, this.props.language)}\n        pairCount={amount}\n        color={color}\n        onChange={this.updateHandler}\n      />\n    );\n  };\n\n  render() {\n    const plateRows = this.props.plates.map((obj: Plate) =>\n      this.renderWeightRow(obj.weightKg, obj.pairCount, obj.color)\n    );\n    const unitId = this.props.inKg ? \"meet-setup.plates-kg\" : \"meet-setup.plates-lbs\";\n    const stringPlate = getString(unitId, this.props.language);\n\n    return (\n      <div>\n        <Table striped size=\"sm\" hover style={{ margin: \"0px\" }}>\n          <thead>\n            <tr>\n              <th>{stringPlate}</th>\n              <th>\n                <FormattedMessage id=\"meet-setup.plates-num-pairs\" defaultMessage=\"Pairs of Plates\" />\n              </th>\n              <th>\n                <FormattedMessage id=\"meet-setup.plates-color\" defaultMessage=\"Color\" />\n              </th>\n            </tr>\n          </thead>\n          <tbody>{plateRows}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  plates: state.meet.plates,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setPlateConfig: (weightKg, amount, color) => dispatch(setPlateConfig(weightKg, amount, color))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Plates);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n//\n// This is a split Yes/No button\n\nimport React, { FunctionComponent } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\n\ninterface Props {\n  value: boolean;\n  setValue: (bool: boolean) => void;\n  label: JSX.Element | string;\n  yes: string;\n  no: string;\n}\n\nconst YesNoButton: FunctionComponent<Props> = props => {\n  return (\n    <Form.Group>\n      <Form.Label>{props.label}</Form.Label>\n      <ButtonGroup style={{ width: \"100%\" }}>\n        <Button active={!props.value} variant=\"outline-secondary\" onClick={() => props.setValue(false)}>\n          {props.no}\n        </Button>\n        <Button active={props.value} variant=\"outline-secondary\" onClick={() => props.setValue(true)}>\n          {props.yes}\n        </Button>\n      </ButtonGroup>\n    </Form.Group>\n  );\n};\n\nexport default YesNoButton;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Row from \"react-bootstrap/Row\";\n\nimport ValidatedInput from \"../ValidatedInput\";\n\nimport MeetDate from \"./MeetDate\";\nimport MeetLength from \"./MeetLength\";\nimport PlatformCounts from \"./PlatformCounts\";\nimport AutoFillRules from \"./AutoFillRules\";\nimport DivisionSelect from \"./DivisionSelect\";\nimport WeightClassesSelect from \"./WeightClassesSelect\";\nimport BarAndCollarsWeightKg from \"./BarAndCollarsWeightKg\";\nimport Plates from \"./Plates\";\nimport YesNoButton from \"../common/YesNoButton\";\n\nimport { getString } from \"../../logic/strings\";\nimport { updateMeet, setInKg } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { FormControlTypeHack, assertString, assertFormula, assertAgeCoefficients } from \"../../types/utils\";\nimport { Language, Validation } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setMeetName: (name: string) => void;\n  setCountry: (country: string) => void;\n  setState: (state: string) => void;\n  setCity: (city: string) => void;\n  setFederation: (fed: string) => void;\n  setCombineSleevesAndWraps: (bool: boolean) => void;\n  setAllow4thAttempts: (bool: boolean) => void;\n  setInKg: (bool: boolean) => void;\n  setShowAlternateUnits: (bool: boolean) => void;\n  setFormula: (event: FormEvent<FormControlTypeHack>) => void;\n  setAgeCoefficients: (event: FormEvent<FormControlTypeHack>) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  // This is a number used to derive a `key` for many widgets.\n  // Incrementing the ticker can be used to force a re-render.\n  // This is used to re-render things after the \"Auto-Fill\" button is pressed.\n  ticker: number;\n}\n\nclass MeetSetup extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      ticker: 0\n    };\n  }\n\n  validateRequiredText = (value?: string): Validation => {\n    if (!value) return \"warning\";\n    if (value.includes('\"')) return \"error\";\n    return \"success\";\n  };\n\n  render() {\n    // This is used as a key to force unit-dependent components to re-initialize state.\n    const inKg = String(this.props.meet.inKg);\n    const language = this.props.language;\n\n    const stringMeetName = getString(\"meet-setup.meet-name\", language);\n    const stringFederation = getString(\"common.federation\", language);\n    const stringCountry = getString(\"common.country\", language);\n    const stringStateProvince = getString(\"meet-setup.state-province\", language);\n    const stringCityTown = getString(\"meet-setup.city-town\", language);\n\n    const stringKilograms = getString(\"common.kilograms\", language);\n    const stringPounds = getString(\"common.pounds\", language);\n\n    const stringMensClasses = getString(\"meet-setup.label-classes-men\", language);\n    const stringWomensClasses = getString(\"meet-setup.label-classes-women\", language);\n    const stringMxClasses = getString(\"meet-setup.label-classes-mx\", language);\n\n    const stringAH = getString(\"formula.ah\", language);\n    const stringBodyweightMultiple = getString(\"formula.bodyweight-multiple\", language);\n    const stringDots = getString(\"formula.dots\", language);\n    const stringGlossbrenner = getString(\"formula.glossbrenner\", language);\n    const stringIPFPoints = getString(\"formula.ipf-points\", language);\n    const stringNASAPoints = getString(\"formula.nasa-points\", language);\n    // const stringReshel = getString(\"formula.reshel\", language);\n    const stringSchwartzMalone = getString(\"formula.schwartz-malone\", language);\n    const stringTotal = getString(\"formula.total\", language);\n    const stringWilks = getString(\"formula.wilks\", language);\n    const stringNone = getString(\"age-coefficients.none\", language);\n    const stringFosterMcCulloch = getString(\"age-coefficients.foster-mcculloch\", language);\n    const stringNo = getString(\"common.response-no\", language);\n    const stringYes = getString(\"common.response-yes\", language);\n\n    const stringAlsoKilograms = getString(\"meet-setup.label-also-show-kilograms\", language);\n    const stringAlsoPounds = getString(\"meet-setup.label-also-show-pounds\", language);\n\n    return (\n      <Container>\n        <Row>\n          <Col md={4}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"meet-setup.header-sanction-info\" defaultMessage=\"Sanction Information\" />\n              </Card.Header>\n              <Card.Body>\n                <ValidatedInput\n                  label={stringMeetName}\n                  placeholder={stringMeetName}\n                  initialValue={this.props.meet.name}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setMeetName}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringFederation}\n                  placeholder={stringFederation}\n                  initialValue={this.props.meet.federation}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setFederation}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringCountry}\n                  placeholder={stringCountry}\n                  initialValue={this.props.meet.country}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setCountry}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringStateProvince}\n                  placeholder={stringStateProvince}\n                  initialValue={this.props.meet.state}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setState}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringCityTown}\n                  placeholder={stringCityTown}\n                  initialValue={this.props.meet.city}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setCity}\n                  keepMargin={true}\n                />\n                <MeetDate />\n                <MeetLength />\n                <PlatformCounts />\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col md={4}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"meet-setup.header-rules\" defaultMessage=\"Competition Rules\" />\n              </Card.Header>\n              <Card.Body>\n                <AutoFillRules onChange={() => this.setState({ ticker: this.state.ticker + 1 })} />\n                <DivisionSelect key={this.state.ticker + \"-divselect\"} />\n                <WeightClassesSelect sex=\"M\" label={stringMensClasses} key={this.state.ticker + \"-M\"} />\n                <WeightClassesSelect sex=\"F\" label={stringWomensClasses} key={this.state.ticker + \"-F\"} />\n                <WeightClassesSelect sex=\"Mx\" label={stringMxClasses} key={this.state.ticker + \"-Mx\"} />\n\n                <FormGroup key={this.state.ticker + \"-formula\"}>\n                  <Form.Label>\n                    <FormattedMessage id=\"meet-setup.formula\" defaultMessage=\"Best Lifter Formula\" />\n                  </Form.Label>\n                  <FormControl\n                    as=\"select\"\n                    defaultValue={this.props.meet.formula}\n                    onChange={this.props.setFormula}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"AH\">{stringAH}</option>\n                    <option value=\"Bodyweight Multiple\">{stringBodyweightMultiple}</option>\n                    <option value=\"Dots\">{stringDots}</option>\n                    <option value=\"Glossbrenner\">{stringGlossbrenner}</option>\n                    <option value=\"IPF Points\">{stringIPFPoints}</option>\n                    <option value=\"NASA Points\">{stringNASAPoints}</option>\n                    <option value=\"Schwartz/Malone\">{stringSchwartzMalone}</option>\n                    <option value=\"Total\">{stringTotal}</option>\n                    <option value=\"Wilks\">{stringWilks}</option>\n                  </FormControl>\n                </FormGroup>\n\n                <FormGroup key={this.state.ticker + \"-ageCoefficients\"}>\n                  <Form.Label>\n                    <FormattedMessage\n                      id=\"meet-setup.age-coefficients\"\n                      defaultMessage=\"Age Coefficients for Best Juniors/Masters Lifter\"\n                    />\n                  </Form.Label>\n                  <FormControl\n                    as=\"select\"\n                    defaultValue={this.props.meet.ageCoefficients}\n                    onChange={this.props.setAgeCoefficients}\n                    className=\"custom-select\"\n                  >\n                    <option key=\"None\" value=\"None\">\n                      {stringNone}\n                    </option>\n                    <option key=\"FosterMcCulloch\" value=\"FosterMcCulloch\">\n                      {stringFosterMcCulloch}\n                    </option>\n                  </FormControl>\n                </FormGroup>\n\n                <FormGroup key={this.state.ticker + \"-sleeves-wraps\"}>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.combine-sleeves-wraps\"\n                        defaultMessage=\"Should Sleeves and Wraps be combined for placing?\"\n                      />\n                    }\n                    value={this.props.meet.combineSleevesAndWraps}\n                    setValue={this.props.setCombineSleevesAndWraps}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n\n                <FormGroup key={this.state.ticker + \"-4th-attempts\"}>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.allow-4th-attempts\"\n                        defaultMessage=\"Can lifters take 4th attempts for records?\"\n                      />\n                    }\n                    value={this.props.meet.allow4thAttempts}\n                    setValue={this.props.setAllow4thAttempts}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col md={4}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"meet-setup.header-loading\" defaultMessage=\"Weights and Loading\" />\n              </Card.Header>\n              <Card.Body>\n                <FormGroup>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.units\"\n                        defaultMessage=\"In what units are attempts and bodyweights?\"\n                      />\n                    }\n                    value={this.props.meet.inKg}\n                    setValue={this.props.setInKg}\n                    yes={stringKilograms}\n                    no={stringPounds}\n                  />\n                </FormGroup>\n\n                <FormGroup>\n                  <YesNoButton\n                    label={this.props.meet.inKg ? stringAlsoPounds : stringAlsoKilograms}\n                    value={this.props.meet.showAlternateUnits}\n                    setValue={this.props.setShowAlternateUnits}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n\n                <BarAndCollarsWeightKg key={\"S\" + inKg} lift=\"S\" />\n                <BarAndCollarsWeightKg key={\"B\" + inKg} lift=\"B\" />\n                <BarAndCollarsWeightKg key={\"D\" + inKg} lift=\"D\" />\n                <Plates />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  meet: state.meet,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  setMeetName: (name: string) => dispatch(updateMeet({ name: name })),\n  setCountry: (country: string) => dispatch(updateMeet({ country: country })),\n  setState: (state: string) => dispatch(updateMeet({ state: state })),\n  setCity: (city: string) => dispatch(updateMeet({ city: city })),\n  setFederation: (fed: string) => dispatch(updateMeet({ federation: fed })),\n  setCombineSleevesAndWraps: bool => dispatch(updateMeet({ combineSleevesAndWraps: bool })),\n  setAllow4thAttempts: bool => dispatch(updateMeet({ allow4thAttempts: bool })),\n  setInKg: bool => dispatch(setInKg(bool)),\n  setShowAlternateUnits: bool => dispatch(updateMeet({ showAlternateUnits: bool })),\n  setFormula: event =>\n    assertString(event.currentTarget.value) &&\n    assertFormula(event.currentTarget.value) &&\n    dispatch(updateMeet({ formula: event.currentTarget.value })),\n  setAgeCoefficients: event =>\n    assertString(event.currentTarget.value) &&\n    assertAgeCoefficients(event.currentTarget.value) &&\n    dispatch(updateMeet({ ageCoefficients: event.currentTarget.value }))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetSetup);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport MeetSetup from \"../components/meet-setup/MeetSetup\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass MeetSetupContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <MeetSetup />\n      </div>\n    );\n  }\n}\n\nexport default MeetSetupContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the table of LifterRows\n// Generalized to accept a rowRenderer component, so that different pages\n// can render different row level items, while re-using the logic in this component\n// to handle rendering one row per lifter\n// This is the parent component that determines how many rows to render,\n// what data each row should see, etc.\n\nimport React from \"react\";\n\nimport { Entry } from \"../../types/dataTypes\";\n\ninterface OwnProps {\n  entries: ReadonlyArray<Entry>;\n  rowRenderer: any;\n}\n\ntype Props = OwnProps;\n\nclass LifterTable extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.renderRows = this.renderRows.bind(this);\n  }\n\n  renderRows = () => {\n    const LifterRow = this.props.rowRenderer;\n    const { entries } = this.props;\n    return entries.map(entry => <LifterRow key={entry.id} id={entry.id} />);\n  };\n\n  render() {\n    return <div>{this.renderRows()}</div>;\n  }\n}\n\nexport default LifterTable;\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This provides an alternative interface to react-intl's <FormattedMessage/>.\n//\n// FormattedMessage defines a *new* internationalizable message.\n// In contrast, LocalizedString fetches an *existing* message from the same store\n// and reports it as a simple string (with no formatting or parsing).\n//\n// This enables reuse of translations, so long as the IDs are stable.\n\nimport React from \"react\";\nimport { IntlContext } from \"react-intl\";\n\nimport { TranslationId } from \"../../types/dataTypes\";\n\ninterface OwnProps {\n  id: TranslationId; // As listed in 'src/translations/en.json'.\n}\n\ntype Props = OwnProps;\n\nclass LocalizedString extends React.Component<Props> {\n  render() {\n    return (\n      <IntlContext.Consumer>\n        {intl => {\n          return intl.messages[this.props.id];\n        }}\n      </IntlContext.Consumer>\n    );\n  }\n}\n\nexport default LocalizedString;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Validation } from \"../types/dataTypes\";\n\n// Validates a string date in the ISO8601 \"YYYY-MM-DD\" format.\nexport const validateIso8601Date = (s?: string): Validation => {\n  if (typeof s !== \"string\") return \"error\";\n\n  if (s === \"\") return null;\n  if (s.length !== \"YYYY-MM-DD\".length) return \"error\";\n\n  const pieces: Array<string> = s.split(\"-\");\n  if (pieces.length !== 3) return \"error\";\n\n  const [yearStr, monthStr, dayStr] = pieces;\n\n  // Ensure that the strings only contain numbers, because the Number() constructor\n  // will ignore whitespace.\n  const onlyNumbers = /^[0-9]+$/;\n\n  if (!yearStr.match(onlyNumbers)) return \"error\";\n  if (!monthStr.match(onlyNumbers)) return \"error\";\n  if (!dayStr.match(onlyNumbers)) return \"error\";\n\n  const year = Number(yearStr);\n  const month = Number(monthStr);\n  const day = Number(dayStr);\n\n  if (isNaN(year) || isNaN(month) || isNaN(day)) return \"error\";\n  if (year <= 0 || month <= 0 || month > 12 || day <= 0 || day > 31) return \"error\";\n\n  // Disallow dates that are out of the plausible range for powerlifting.\n  if (year < 1880 || year >= new Date().getFullYear() + 2) return \"error\";\n\n  return \"success\";\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Validation } from \"../types/dataTypes\";\n\n// Validates a simple positive integer.\nexport const validatePositiveInteger = (s?: string, inclusiveMax?: number): Validation => {\n  if (typeof s !== \"string\") return \"error\";\n\n  if (s === \"\") return null;\n\n  // Ensure that the string only contains numbers, because the Number() constructor\n  // will ignore whitespace.\n  const onlyNumbers = /^[0-9]+$/;\n  if (!s.match(onlyNumbers)) return \"error\";\n\n  // The number shouldn't start with an unnecessary zero.\n  if (s.startsWith(\"0\")) return \"error\";\n\n  const n = Number(s);\n\n  // Ensure the number is a positive integer.\n  if (isNaN(n)) return \"error\";\n  if (!Number.isInteger(n)) return \"error\";\n  if (n <= 0) return \"error\";\n\n  // Allow an optional inclusive upper bound check.\n  if (typeof inclusiveMax === \"number\") {\n    if (n > inclusiveMax) return \"error\";\n  }\n\n  return \"success\";\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  NewRegistrationAction,\n  DeleteRegistrationAction,\n  UpdateRegistrationAction,\n  MergePlatformAction\n} from \"../types/actionTypes\";\nimport { Entry } from \"../types/dataTypes\";\n\n// Adds a blank (or default-initalized) row to the registrations table.\nexport const newRegistration = (obj: Partial<Entry>): NewRegistrationAction => {\n  return {\n    type: \"NEW_REGISTRATION\",\n    overwriteDefaults: obj\n  };\n};\n\n// Deletes an existing entry from the registrations table.\n//\n// Corresponding data from the registration is *not* deleted, for example\n// from the lifting page, but because the state.registrations.lookups map\n// will no longer find an associated entry given a global unique EntryId,\n// the data will simply stop being displayed.\n//\n// The global ID from the deleted entry is not recycled.\nexport const deleteRegistration = (entryId: number): DeleteRegistrationAction => {\n  return {\n    type: \"DELETE_REGISTRATION\",\n    entryId: entryId\n  };\n};\n\n// Updates an existing entry in the registrations table.\n//\n// Because there are a lot of fields in a single entry, for the sake of\n// simplicity, this is a general method that knows how to update the\n// existing entry object with whatever has changed, as passed\n// through object properties.\nexport const updateRegistration = (entryId: number, obj: Partial<Entry>): UpdateRegistrationAction => {\n  return {\n    type: \"UPDATE_REGISTRATION\",\n    entryId: entryId,\n    changes: obj\n  };\n};\n\n// Deletes all entries assigned to a given (day, platform), and then adds entries\n// assigned to that (day, platform) from a foreign save state.\nexport const mergePlatform = (day: number, platform: number, platformEntries: Array<Entry>): MergePlatformAction => {\n  return {\n    type: \"MERGE_PLATFORM\",\n    day: day,\n    platform: platform,\n    platformEntries: platformEntries\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a row in the LifterTable on the Registration page.\n// This provides a bunch of widgets, each of which correspond to\n// the state of a single entry.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Row from \"react-bootstrap/Row\";\n\nimport Select, { ActionMeta, ValueType } from \"react-select\";\n\nimport { getString, localizeEvent } from \"../../logic/strings\";\nimport { displayNumber, string2number } from \"../../logic/units\";\nimport LocalizedString from \"../translations/LocalizedString\";\nimport ValidatedInput from \"../ValidatedInput\";\n\nimport { validateIso8601Date } from \"../../validation/iso8601Date\";\nimport { validatePositiveInteger } from \"../../validation/positiveInteger\";\n\nimport { deleteRegistration, updateRegistration } from \"../../actions/registrationActions\";\nimport { FormControlTypeHack, checkExhausted, assertString, assertFlight, assertSex } from \"../../types/utils\";\nimport { Entry, Equipment, Language, Validation } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\n\ntype OptionType = {\n  label: string;\n  value: string;\n};\n\ninterface OwnProps {\n  id: number;\n}\n\ninterface StateProps {\n  meet: MeetState;\n  entry: Entry;\n  language: Language;\n}\n\ninterface DispatchProps {\n  deleteRegistration: (entryId: number) => void;\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n}\n\ninterface InternalState {\n  selectedDay: number;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass LifterRow extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    // Store the Day in state to update the Platform options when the Day changes.\n    // Store the Birth Date in state to re-render when a new date is selected\n    this.state = {\n      selectedDay: props.entry.day\n    };\n\n    this.deleteRegistrationClick = this.deleteRegistrationClick.bind(this);\n    this.updateRegistrationDay = this.updateRegistrationDay.bind(this);\n    this.updateRegistrationPlatform = this.updateRegistrationPlatform.bind(this);\n    this.updateRegistrationFlight = this.updateRegistrationFlight.bind(this);\n    this.updateRegistrationName = this.updateRegistrationName.bind(this);\n    this.updateRegistrationSex = this.updateRegistrationSex.bind(this);\n    this.updateRegistrationLot = this.updateRegistrationLot.bind(this);\n    this.updateRegistrationMemberId = this.updateRegistrationMemberId.bind(this);\n    this.updateRegistrationBirthDate = this.updateRegistrationBirthDate.bind(this);\n    this.updateRegistrationAge = this.updateRegistrationAge.bind(this);\n    this.updateRegistrationCountry = this.updateRegistrationCountry.bind(this);\n    this.updateRegistrationState = this.updateRegistrationState.bind(this);\n    this.updateRegistrationDivisions = this.updateRegistrationDivisions.bind(this);\n    this.updateRegistrationEvents = this.updateRegistrationEvents.bind(this);\n    this.updateRegistrationEquipment = this.updateRegistrationEquipment.bind(this);\n    this.updateRegistrationTeam = this.updateRegistrationTeam.bind(this);\n    this.updateRegistrationInstagram = this.updateRegistrationInstagram.bind(this);\n    this.updateRegistrationNotes = this.updateRegistrationNotes.bind(this);\n  }\n\n  deleteRegistrationClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    this.props.deleteRegistration(this.props.id);\n  }\n\n  updateRegistrationDay(event: React.FormEvent<FormControlTypeHack>) {\n    const day = Number(event.currentTarget.value);\n    const entry = this.props.entry;\n\n    // Also check whether the platform is now impossible.\n    let platform = entry.platform;\n    if (platform > this.props.meet.platformsOnDays[day - 1]) {\n      platform = 1; // This matches the default behavior of the select element.\n    }\n\n    if (entry.day !== day) {\n      this.setState({ selectedDay: day });\n      this.props.updateRegistration(this.props.id, { day: day, platform: platform });\n    }\n  }\n\n  updateRegistrationPlatform(event: React.FormEvent<FormControlTypeHack>) {\n    const platform = Number(event.currentTarget.value);\n    if (this.props.entry.platform !== platform) {\n      this.props.updateRegistration(this.props.id, { platform: platform });\n    }\n  }\n\n  updateRegistrationFlight(event: React.FormEvent<FormControlTypeHack>) {\n    const value = event.currentTarget.value;\n    if (this.props.entry.flight !== value && assertString(value) && assertFlight(value)) {\n      this.props.updateRegistration(this.props.id, { flight: value });\n    }\n  }\n\n  updateRegistrationName(event: React.FocusEvent<HTMLInputElement>) {\n    const name = event.currentTarget.value;\n    if (this.props.entry.name !== name && assertString(name)) {\n      this.props.updateRegistration(this.props.id, { name: name });\n    }\n  }\n\n  updateRegistrationSex(event: React.FormEvent<FormControlTypeHack>) {\n    const sex = event.currentTarget.value;\n    if (this.props.entry.sex !== sex && assertString(sex) && assertSex(sex)) {\n      this.props.updateRegistration(this.props.id, { sex: sex });\n    }\n  }\n\n  updateRegistrationLot = (lot: string) => {\n    const asNumber = string2number(lot);\n    if (asNumber >= 0 && asNumber !== this.props.entry.lot) {\n      this.props.updateRegistration(this.props.id, { lot: asNumber });\n    }\n  };\n\n  updateRegistrationMemberId = (event: React.FocusEvent<HTMLInputElement>) => {\n    const memberId = event.target.value;\n    if (this.props.entry.memberId !== memberId && typeof memberId === \"string\") {\n      this.props.updateRegistration(this.props.id, { memberId: memberId });\n    }\n  };\n\n  updateRegistrationBirthDate = (birthDate: string) => {\n    if (this.props.entry.birthDate !== birthDate) {\n      this.props.updateRegistration(this.props.id, { birthDate: birthDate });\n    }\n  };\n\n  updateRegistrationAge = (age: string) => {\n    const num = string2number(age);\n    if (this.props.entry.age !== num) {\n      this.props.updateRegistration(this.props.id, { age: num });\n    }\n  };\n\n  updateRegistrationCountry = (country: string) => {\n    if (this.props.entry.country !== country) {\n      this.props.updateRegistration(this.props.id, { country: country });\n    }\n  };\n\n  updateRegistrationState = (state: string) => {\n    if (this.props.entry.state !== state) {\n      this.props.updateRegistration(this.props.id, { state: state });\n    }\n  };\n\n  updateRegistrationDivisions(value: ValueType<OptionType> | null, actionMeta: ActionMeta) {\n    if (value instanceof Array) {\n      // Since updates are synchronous, we can just compare lengths.\n      if (value.length !== this.props.entry.divisions.length) {\n        const divisions = [];\n        for (let i = 0; i < value.length; i++) {\n          divisions.push(value[i].value);\n        }\n        this.props.updateRegistration(this.props.id, { divisions: divisions });\n      }\n    } else if (value === null) {\n      // Null happens when the list has been cleared fully.\n      if (this.props.entry.divisions.length > 0) {\n        this.props.updateRegistration(this.props.id, { divisions: [] });\n      }\n    }\n  }\n\n  updateRegistrationEvents(value: ValueType<OptionType> | null, actionMeta: ActionMeta) {\n    if (value instanceof Array) {\n      // Since updates are synchronous, we can just compare lengths.\n      if (value.length !== this.props.entry.events.length) {\n        const events = [];\n        for (let i = 0; i < value.length; i++) {\n          events.push(value[i].value);\n        }\n        this.props.updateRegistration(this.props.id, { events: events });\n      }\n    } else if (value === null) {\n      // Null happens when the list has been cleared fully.\n      if (this.props.entry.events.length > 0) {\n        this.props.updateRegistration(this.props.id, { events: [] });\n      }\n    }\n  }\n\n  updateRegistrationEquipment(event: React.FormEvent<FormControlTypeHack>) {\n    const equipment = event.currentTarget.value as Equipment;\n    if (this.props.entry.equipment !== equipment) {\n      // Ensure value is something we expect & assist the compiler in helping us\n      switch (equipment) {\n        case \"Bare\":\n        case \"Sleeves\":\n        case \"Wraps\":\n        case \"Single-ply\":\n        case \"Multi-ply\":\n          this.props.updateRegistration(this.props.id, { equipment: equipment });\n          break;\n        default:\n          checkExhausted(equipment);\n          break;\n      }\n    }\n  }\n\n  updateRegistrationTeam = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (assertString(event.target.value)) {\n      this.props.updateRegistration(this.props.id, { team: event.target.value });\n    }\n  };\n\n  updateRegistrationInstagram = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (assertString(event.target.value)) {\n      this.props.updateRegistration(this.props.id, { instagram: event.target.value });\n    }\n  };\n\n  updateRegistrationNotes = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (assertString(event.target.value)) {\n      this.props.updateRegistration(this.props.id, { notes: event.target.value });\n    }\n  };\n\n  // FIXME: Could be shared with weighins logic.\n  validateAge = (value?: string): Validation => {\n    if (value === \"\") return null;\n\n    const pos: Validation = validatePositiveInteger(value);\n    if (pos === \"success\") {\n      // Complain a little if the age is implausible.\n      const n = Number(value);\n      if (n <= 4 || n > 100) return \"warning\";\n    }\n    return pos;\n  };\n\n  render() {\n    const entry = this.props.entry;\n    const language = this.props.language;\n\n    const dayOptions = [];\n    for (let i = 1; i <= this.props.meet.lengthDays; i++) {\n      dayOptions.push(\n        <option value={i} key={i}>\n          {i}\n        </option>\n      );\n    }\n\n    const platformOptions = [];\n    for (let i = 1; i <= this.props.meet.platformsOnDays[entry.day - 1]; i++) {\n      platformOptions.push(\n        <option value={i} key={i}>\n          {i}\n        </option>\n      );\n    }\n\n    const divisionOptions = [];\n    for (let i = 0; i < this.props.meet.divisions.length; i++) {\n      const division = this.props.meet.divisions[i];\n      divisionOptions.push({ value: division, label: division });\n    }\n\n    const selectedDivisions = [];\n    for (let i = 0; i < entry.divisions.length; i++) {\n      const division = entry.divisions[i];\n      selectedDivisions.push({ value: division, label: division });\n    }\n\n    const selectedEvents = [];\n    for (let i = 0; i < entry.events.length; i++) {\n      const event = entry.events[i];\n      selectedEvents.push({ value: event, label: localizeEvent(event, language) });\n    }\n\n    const gridStyle = { padding: \"0px\", margin: \"0px\" };\n\n    const stringCountry = getString(\"common.country\", language);\n    const stringState = getString(\"registration.state-province\", language);\n    const stringBirthDatePlaceholder = getString(\"registration.birthdate-placeholder\", language);\n    const stringMemberIdPlaceholder = getString(\"registration.member-id-placeholder\", language);\n    const stringSelectPlaceholder = getString(\"common.select-placeholder\", language);\n\n    const eventOptions = [\n      { value: \"S\", label: getString(\"event.s\", language) },\n      { value: \"B\", label: getString(\"event.b\", language) },\n      { value: \"D\", label: getString(\"event.d\", language) },\n      { value: \"BD\", label: getString(\"event.bd\", language) },\n      { value: \"SBD\", label: getString(\"event.sbd\", language) },\n      { value: \"SB\", label: getString(\"event.sb\", language) },\n      { value: \"SD\", label: getString(\"event.sd\", language) }\n    ];\n\n    return (\n      <Card style={{ overflow: \"visible\", marginBottom: \"17px\" }}>\n        <Card.Header style={{ display: \"flex\" }}>\n          <Form.Control type=\"text\" placeholder=\"\" defaultValue={entry.name} onBlur={this.updateRegistrationName} />\n          <Button\n            onClick={this.deleteRegistrationClick}\n            variant=\"danger\"\n            style={{ marginLeft: \"15px\", minWidth: \"100px\" }}\n          >\n            <LocalizedString id=\"registration.button-delete\" />\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <Container style={gridStyle}>\n            <Row>\n              {/* Day */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.day-label\" defaultMessage=\"Day\" />\n                  </Form.Label>\n                  <Form.Control\n                    defaultValue={this.state.selectedDay}\n                    as=\"select\"\n                    onChange={this.updateRegistrationDay}\n                    className=\"custom-select\"\n                  >\n                    {dayOptions}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Platform */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.platform-label\" defaultMessage=\"Platform\" />\n                  </Form.Label>\n                  <Form.Control\n                    defaultValue={entry.platform}\n                    as=\"select\"\n                    onChange={this.updateRegistrationPlatform}\n                    className=\"custom-select\"\n                  >\n                    {platformOptions}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Flight */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.flight-label\" defaultMessage=\"Flight\" />\n                  </Form.Label>\n                  <Form.Control\n                    defaultValue={entry.flight}\n                    as=\"select\"\n                    onChange={this.updateRegistrationFlight}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"A\">{getString(\"flight.a\", language)}</option>\n                    <option value=\"B\">{getString(\"flight.b\", language)}</option>\n                    <option value=\"C\">{getString(\"flight.c\", language)}</option>\n                    <option value=\"D\">{getString(\"flight.d\", language)}</option>\n                    <option value=\"E\">{getString(\"flight.e\", language)}</option>\n                    <option value=\"F\">{getString(\"flight.f\", language)}</option>\n                    <option value=\"G\">{getString(\"flight.g\", language)}</option>\n                    <option value=\"H\">{getString(\"flight.h\", language)}</option>\n                    <option value=\"I\">{getString(\"flight.i\", language)}</option>\n                    <option value=\"J\">{getString(\"flight.j\", language)}</option>\n                    <option value=\"K\">{getString(\"flight.k\", language)}</option>\n                    <option value=\"L\">{getString(\"flight.l\", language)}</option>\n                    <option value=\"M\">{getString(\"flight.m\", language)}</option>\n                    <option value=\"N\">{getString(\"flight.n\", language)}</option>\n                    <option value=\"O\">{getString(\"flight.o\", language)}</option>\n                    <option value=\"P\">{getString(\"flight.p\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Sex */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.sex-label\" defaultMessage=\"Sex\" />\n                  </Form.Label>\n                  <Form.Control\n                    defaultValue={entry.sex}\n                    as=\"select\"\n                    onChange={this.updateRegistrationSex}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"M\">{getString(\"sex.m\", language)}</option>\n                    <option value=\"F\">{getString(\"sex.f\", language)}</option>\n                    <option value=\"Mx\">{getString(\"sex.mx\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Equipment */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.equipment-label\" defaultMessage=\"Equipment\" />\n                  </Form.Label>\n                  <Form.Control\n                    defaultValue={entry.equipment}\n                    as=\"select\"\n                    onChange={this.updateRegistrationEquipment}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"Bare\">{getString(\"equipment.bare\", language)}</option>\n                    <option value=\"Sleeves\">{getString(\"equipment.sleeves\", language)}</option>\n                    <option value=\"Wraps\">{getString(\"equipment.wraps\", language)}</option>\n                    <option value=\"Single-ply\">{getString(\"equipment.single-ply\", language)}</option>\n                    <option value=\"Multi-ply\">{getString(\"equipment.multi-ply\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Divisions */}\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.divisions-label\" defaultMessage=\"Divisions\" />\n                  </Form.Label>\n                  <Select\n                    menuPlacement=\"auto\"\n                    placeholder={stringSelectPlaceholder}\n                    options={divisionOptions}\n                    isClearable={false}\n                    isMulti={true}\n                    onChange={this.updateRegistrationDivisions}\n                    defaultValue={selectedDivisions}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Events */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.events-label\" defaultMessage=\"Events\" />\n                  </Form.Label>\n                  <Select\n                    menuPlacement=\"auto\"\n                    placeholder={stringSelectPlaceholder}\n                    options={eventOptions}\n                    isClearable={false}\n                    isMulti={true}\n                    onChange={this.updateRegistrationEvents}\n                    defaultValue={selectedEvents}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n\n          <Container style={gridStyle}>\n            <Row>\n              {/* Date of Birth */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.birthdate-label\" defaultMessage=\"Date of Birth\" />\n                  </Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.birthDate}\n                    placeholder={stringBirthDatePlaceholder}\n                    validate={validateIso8601Date}\n                    onSuccess={this.updateRegistrationBirthDate}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Age */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>{getString(\"common.age\", language)}</Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.age === 0 ? \"\" : displayNumber(entry.age, language)}\n                    placeholder={getString(\"common.age\", language)}\n                    validate={this.validateAge}\n                    onSuccess={this.updateRegistrationAge}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Member ID */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.member-id-label\" defaultMessage=\"Member ID\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder={stringMemberIdPlaceholder}\n                    defaultValue={entry.memberId}\n                    onBlur={this.updateRegistrationMemberId}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Country */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>{stringCountry}</Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.country}\n                    placeholder={stringCountry}\n                    validate={s => (s === \"\" ? null : \"success\")}\n                    onSuccess={this.updateRegistrationCountry}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* State */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>{stringState}</Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.state}\n                    placeholder={stringState}\n                    validate={s => (s === \"\" ? null : \"success\")}\n                    onSuccess={this.updateRegistrationState}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Lot Number */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.lot-label\" defaultMessage=\"Lot #\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    min=\"0\"\n                    defaultValue={entry.lot === 0 ? \"\" : entry.lot.toString()}\n                    onBlur={(event: { currentTarget: { value: string } }) =>\n                      this.updateRegistrationLot(event.currentTarget.value)\n                    }\n                    onChange={(event: React.FormEvent<FormControlTypeHack> & { currentTarget: { value: string } }) =>\n                      this.updateRegistrationLot(event.currentTarget.value)\n                    }\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Notes */}\n              <Col md={3}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.team-label\" defaultMessage=\"Team\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"\"\n                    defaultValue={entry.team}\n                    onBlur={this.updateRegistrationTeam}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n\n          <Container style={gridStyle}>\n            <Row>\n              {/* Notes */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.instagram-label\" defaultMessage=\"Instagram\" />\n                  </Form.Label>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>@</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={entry.instagram}\n                      onBlur={this.updateRegistrationInstagram}\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Col>\n\n              {/* Notes */}\n              <Col md={10}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.notes-label\" defaultMessage=\"Notes (for your personal use)\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"\"\n                    defaultValue={entry.notes}\n                    onBlur={this.updateRegistrationNotes}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  // Only have props for the entry corresponding to this one row.\n  const lookup = state.registration.lookup;\n  const entry = state.registration.entries[lookup[ownProps.id]];\n\n  return {\n    meet: state.meet,\n    entry: entry,\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    deleteRegistration: (entryId: number) => dispatch(deleteRegistration(entryId)),\n    updateRegistration: (entryId: number, obj: Partial<Entry>) => dispatch(updateRegistration(entryId, obj))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LifterRow);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the button that adds a new entry to the registrations table.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport { newRegistration } from \"../../actions/registrationActions\";\n\nimport { Entry } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\n\ninterface DispatchProps {\n  newRegistration: (obj: Partial<Entry>) => void;\n}\n\ntype Props = DispatchProps;\n\nclass NewButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    this.props.newRegistration({});\n  };\n\n  render() {\n    return (\n      <Button onClick={this.handleClick} variant=\"primary\" size=\"lg\" block>\n        <FormattedMessage id=\"registration.button-new-lifter\" defaultMessage=\"New Lifter\" />\n      </Button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a general CSV manipulation class.\n// This is a JS port of the Python \"oplcsv.py\" library used by the OpenPowerlifting\n// main data project.\n\n// Makes a string suitable for inclusion in a simple CSV file,\n// by deleting all commas and double quotes.\nexport const csvString = (x?: number | string): string => {\n  if (x === undefined) return \"\";\n  let s = String(x);\n\n  // The OpenPowerlifting format uses commas and disallow double-quotes.\n  s = s.replace(/,/g, \" \");\n  s = s.replace(/\"/g, \" \");\n\n  // The number \"0\" is also never written out explicitly; the empty string is preferred.\n  if (s === \"0\") return \"\";\n\n  // Clean up some formatting.\n  s = s.replace(/ {2}/g, \" \").trim();\n  return s;\n};\n\n// Makes a string of a Date object.\n//\n// By default, Excel will reformat our pretty ISO8601 dates (2019-11-30) into\n// a localized, ambiguous variant (11/30/2019). This happens sufficiently often\n// in submitted meet results that it's worth a workaround.\n//\n// Prepending a single-quote character to the date string stops the reformatting.\nexport const csvDate = (iso8601?: string): string => {\n  if (iso8601 === undefined || iso8601 === \"\") return \"\";\n  return csvString(\"'\" + iso8601);\n};\n\n// Returns the in-spreadsheet name of a column. In standard spreadsheet software,\n// rows are numeric (1, 2, 3, ...) and columns are alphabetic (A, B, C, ...).\n// For errors, we'd like to report the column that's wrong.\n//\n// The 'index' input is zero-indexed.\nexport const getSpreadsheetColumnName = (index: number): string => {\n  const alphabet: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  // Column name accumulator.\n  // It's built by taking repeated mods in base 26: therefore new characters\n  // are appended to the left of the accumulator.\n  let acc: string = \"\";\n  let n: number = index;\n\n  while (n >= alphabet.length) {\n    const mod = n % alphabet.length;\n    const remainder = Math.floor(n / alphabet.length);\n\n    acc = alphabet[mod] + acc;\n\n    // The subtraction is because this isn't a pure modulus operator:\n    // by analogy to base-10, \"AA\" is equivalent to \"00\", and we want to render\n    // that.\n    n = remainder - 1;\n  }\n\n  return alphabet[n] + acc;\n};\n\n// A class for managing simple CSV files. Double-quotes and commas are disallowed.\nexport class Csv {\n  fieldnames: Array<string>; // Column names.\n  rows: Array<Array<string>>; // Individual rows.\n\n  constructor() {\n    this.fieldnames = [];\n    this.rows = [];\n  }\n\n  length(): number {\n    return this.rows.length;\n  }\n\n  index(name: string): number {\n    return this.fieldnames.indexOf(name);\n  }\n\n  appendColumn(name: string): void {\n    this.fieldnames.push(name);\n    for (let i = 0; i < this.rows.length; i++) {\n      this.rows[i].push(\"\");\n    }\n  }\n\n  appendColumns(namelist: Array<string>): void {\n    this.fieldnames = this.fieldnames.concat(namelist);\n    for (let i = 0; i < this.rows.length; i++) {\n      for (let j = 0; j < namelist.length; j++) {\n        this.rows[i].push(\"\");\n      }\n    }\n  }\n\n  insertColumn(index: number, name: string): void {\n    this.fieldnames.splice(index, 0, name);\n    for (let i = 0; i < this.rows.length; i++) {\n      this.rows[i].splice(index, 0, \"\");\n    }\n  }\n\n  removeColumnByIndex(index: number): void {\n    this.fieldnames.splice(index, 1);\n    for (let i = 0; i < this.rows.length; i++) {\n      this.rows[i].splice(index, 1);\n    }\n  }\n\n  removeColumnByName(name: string): void {\n    for (let i = 0; i < this.fieldnames.length; i++) {\n      if (this.fieldnames[i] === name) {\n        this.removeColumnByIndex(i);\n        return;\n      }\n    }\n  }\n\n  removeEmptyColumns(): void {\n    for (let i = 0; i < this.fieldnames.length; i++) {\n      let empty = true;\n      for (let j = 0; j < this.rows.length; j++) {\n        if (this.rows[j][i] !== \"\") {\n          empty = false;\n          break;\n        }\n      }\n      if (empty === true) {\n        this.removeColumnByIndex(i);\n        this.removeEmptyColumns();\n        return;\n      }\n    }\n  }\n\n  // Attempts to fill in this CSV object from a string.\n  // On success, returns the `this` Csv object.\n  // On failure, returns an error string with a user-presentable message.\n  fromString(s: string): Csv | string {\n    // The string cannot contain double-quotes: programs use those to allow\n    // in-field commas, which we disallow.\n    if (s.includes('\"')) {\n      let e = 'Double-quotes (\") are disallowed.';\n      e += \" Double-quotes can be automatically inserted by spreadsheet software\";\n      e += \" when a field contains a comma. Make sure to delete all in-field commas.\";\n      return e;\n    }\n\n    // Split by newline. It's OK for \\r to remain: we'll strip each field later.\n    // This always produces an array of length at least 1.\n    //\n    // Trim the string first: it's OK if files end with \"\\n\".\n    const lines = s.trim().split(\"\\n\");\n\n    // The first row contains fieldnames.\n    const fieldnames = lines[0].split(\",\").map(x => x.trim());\n\n    // Any rows after the first contain data.\n    const rows = [];\n    for (let i = 1; i < lines.length; ++i) {\n      const row = lines[i].split(\",\").map(x => x.trim());\n      rows.push(row);\n    }\n\n    // Sanity checking time!\n    // Every column must be named.\n    for (let i = 0; i < fieldnames.length; ++i) {\n      if (fieldnames[i] === \"\") {\n        const colname = getSpreadsheetColumnName(i);\n        return \"Column \" + colname + \" is missing a column name.\";\n      }\n    }\n\n    // Every row must have the same length as the fieldnames row.\n    for (let i = 0; i < rows.length; ++i) {\n      if (rows[i].length !== fieldnames.length) {\n        const rownum = i + 2; // 1-indexed, and the first row is fieldnames.\n        let e = \"Row \" + rownum + \" has \" + rows[i].length + \" columns,\";\n        e += \" but the first row has \" + fieldnames.length + \" columns.\";\n        return e;\n      }\n    }\n\n    this.fieldnames = fieldnames;\n    this.rows = rows;\n    return this;\n  }\n\n  toString(): string {\n    const headers = this.fieldnames.join(\",\");\n    const strRows: Array<string> = [];\n    for (let i = 0; i < this.rows.length; i++) {\n      strRows.push(this.rows[i].join(\",\"));\n    }\n    return headers + \"\\n\" + strRows.join(\"\\n\") + \"\\n\";\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for parsing strings into OpenLifter datatypes.\n// The strings can come from the user and are therefore untrusted.\n\nimport { Equipment, Event, Sex } from \"../types/dataTypes\";\n\n// Strictly parse a string to an integer. Negatives are allowed.\nexport const parseInteger = (s: string): number | undefined => {\n  // Characters will be compared to ASCII charcodes.\n  const ascii_0 = 0x30;\n  const ascii_9 = 0x39;\n  const ascii_minus = 0x2d;\n\n  // Disallow the empty string.\n  if (s.length === 0) {\n    return;\n  }\n\n  // Check the string character-by-character.\n  for (let i = 0; i < s.length; ++i) {\n    const charcode = s.charCodeAt(i);\n\n    // A single negative is allowed at the front.\n    if (i === 0 && charcode === ascii_minus) {\n      continue;\n    } else if (charcode < ascii_0 || charcode > ascii_9) {\n      return;\n    }\n  }\n\n  return parseInt(s, 10);\n};\n\n// Loosely parse a string to a Sex.\nexport const parseSex = (s: string): Sex | undefined => {\n  const lower = s.toLowerCase();\n  if (lower === \"m\") return \"M\";\n  if (lower === \"f\") return \"F\";\n  if (lower === \"mx\") return \"Mx\";\n  return;\n};\n\n// Loosely parse a string to an Equipment.\nexport const parseEquipment = (s: string): Equipment | undefined => {\n  const lower = s.toLowerCase();\n  if (lower === \"bare\") return \"Bare\";\n  if (lower === \"sleeves\") return \"Sleeves\";\n  if (lower === \"wraps\") return \"Wraps\";\n\n  // Be more forgiving on these ones: nobody remembers the dash.\n  if (lower.startsWith(\"single\")) return \"Single-ply\";\n  if (lower.startsWith(\"multi\")) return \"Multi-ply\";\n  return;\n};\n\n// Parse a string to an Event.\n// Valid characters are \"SBD\", which must occur in that order.\nexport const parseEvent = (s: string): Event | undefined => {\n  if (s === \"\") {\n    return;\n  }\n\n  // Allow lowercase variants like \"sbd\".\n  const lower = s.toLowerCase();\n  const has_squat = lower.includes(\"s\");\n  const has_bench = lower.includes(\"b\");\n  const has_deadlift = lower.includes(\"d\");\n\n  let acc = \"\";\n  if (has_squat) acc += \"S\";\n  if (has_bench) acc += \"B\";\n  if (has_deadlift) acc += \"D\";\n\n  // Having reconstructed the string in the right order, check whether it matches.\n  if (acc !== s) {\n    return;\n  }\n\n  return s as Event;\n};\n\n// Strictly parse a YYYY-MM-DD date.\nexport const parseDate = (s: string): string | undefined => {\n  // Allow a prepended single-quote, inserted for purposes of preventing\n  // Excel auto-localization.\n  s = s.replace(\"'\", \"\");\n\n  // \"YYYY-MM-DD\".length === 10.\n  if (s.length !== 10) {\n    return;\n  }\n\n  const pieces = s.split(\"-\");\n  if (pieces.length !== 3) {\n    return;\n  }\n\n  if (pieces[0].length !== 4 || pieces[1].length !== 2 || pieces[2].length !== 2) {\n    return;\n  }\n\n  const year = parseInteger(pieces[0]);\n  const month = parseInteger(pieces[1]);\n  const day = parseInteger(pieces[2]);\n\n  if (typeof year !== \"number\" || year < 1920) return;\n  if (typeof month !== \"number\" || month < 1 || month > 12) return;\n  if (typeof day !== \"number\" || day < 1 || day > 31) return;\n\n  return s;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for importing Registration data from a CSV file.\n// The CSV format is very strict: no double-quotes allowed, commas are always\n// separators, and the format of each field must exactly match our internal format.\n\nimport { csvDate, Csv, getSpreadsheetColumnName } from \"../export/csv\";\nimport { newDefaultEntry } from \"../entry\";\n\nimport { parseInteger, parseDate } from \"../parsers\";\nimport { getString, delocalizeEquipment, delocalizeEvent, delocalizeFlight, delocalizeSex } from \"../strings\";\nimport { displayNumber } from \"../units\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\n// Generates a string representing a downloadable CSV file, for use as an example\n// of the registration format.\n//\n// This is in code so that it can live right next to loadRegistrations()\n// for easier long-term maintenance.\nexport const makeExampleRegistrationsCsv = (language: Language): string => {\n  const csv = new Csv();\n  csv.rows = [[]]; // appendColumns() will resize the dummy row correctly.\n\n  const day = getString(\"import.column-day\", language);\n  const platform = getString(\"import.column-platform\", language);\n  const flight = getString(\"import.column-flight\", language);\n  const name = getString(\"import.column-name\", language);\n  const sex = getString(\"import.column-sex\", language);\n  const equipment = getString(\"import.column-equipment\", language);\n  const division1 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"1\");\n  const division2 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"2\");\n  const division3 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"3\");\n  const event1 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"1\");\n  const event2 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"2\");\n  const event3 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"3\");\n  const birthdate = getString(\"import.column-birthdate\", language);\n  const age = getString(\"import.column-age\", language);\n  const memberid = getString(\"import.column-memberid\", language);\n  const country = getString(\"import.column-country\", language);\n  const state = getString(\"import.column-state\", language);\n  const lot = getString(\"import.column-lot\", language);\n  const team = getString(\"import.column-team\", language);\n  const instagram = getString(\"import.column-instagram\", language);\n  const notes = getString(\"import.column-notes\", language);\n\n  csv.appendColumns([day, platform, flight, name, sex, equipment]);\n  csv.appendColumns([division1, division2, division3, event1, event2, event3]);\n  csv.appendColumns([birthdate, age, memberid, country, state]);\n  csv.appendColumns([lot, team, instagram, notes]);\n\n  csv.rows[0][csv.index(day)] = \"1\";\n  csv.rows[0][csv.index(platform)] = \"1\";\n  csv.rows[0][csv.index(flight)] = getString(\"flight.a\", language);\n  csv.rows[0][csv.index(name)] = getString(\"import.example-name\", language);\n  csv.rows[0][csv.index(sex)] = getString(\"import.example-sex\", language);\n  csv.rows[0][csv.index(equipment)] = getString(\"equipment.sleeves\", language);\n  csv.rows[0][csv.index(division1)] = getString(\"import.example-division1\", language);\n  csv.rows[0][csv.index(division2)] = getString(\"import.example-division2\", language);\n  // Intentionally blank: csv.rows[0][csv.index(division3)]\n  csv.rows[0][csv.index(event1)] = getString(\"event.sbd\", language);\n  csv.rows[0][csv.index(event2)] = getString(\"event.bd\", language);\n  // Intentionally blank: csv.rows[0][csv.index(event3)]\n  csv.rows[0][csv.index(birthdate)] = csvDate(getString(\"import.example-birthdate\", language));\n  // Intentionally blank: csv.rows[0][csv.index(age)]\n  // Intentionally blank: csv.rows[0][csv.index(memberid)]\n  csv.rows[0][csv.index(country)] = getString(\"import.example-country\", language);\n  csv.rows[0][csv.index(state)] = getString(\"import.example-state\", language);\n  // Intentionally blank: csv.rows[0][csv.index(lot)]\n  // Intentionally blank: csv.rows[0][csv.index(team)]\n  csv.rows[0][csv.index(instagram)] = getString(\"import.example-instagram\", language);\n  csv.rows[0][csv.index(notes)] = getString(\"import.example-notes\", language);\n\n  return csv.toString();\n};\n\n// Attempts to load registration information from a CSV object.\n//\n// On success, returns an array of Entry objects.\n//   NOTE CAREFULLY that the global state is not updated by this function.\n//   The caller must integrate the Entry objects, updating EntryID Tracking.\n// On failure, returns an error string with a user-presentable message.\nexport const loadRegistrations = (state: GlobalState, csv: Csv, language: Language): Array<Entry> | string => {\n  const division_template = getString(\"import.column-division-n\", language);\n  const event_template = getString(\"import.column-event-n\", language);\n\n  const col_day = getString(\"import.column-day\", language);\n  const col_platform = getString(\"import.column-platform\", language);\n  const col_flight = getString(\"import.column-flight\", language);\n  const col_name = getString(\"import.column-name\", language);\n  const col_sex = getString(\"import.column-sex\", language);\n  const col_equipment = getString(\"import.column-equipment\", language);\n  const col_division1 = division_template.replace(\"{N}\", \"1\");\n  const col_division2 = division_template.replace(\"{N}\", \"2\");\n  const col_division3 = division_template.replace(\"{N}\", \"3\");\n  const col_division4 = division_template.replace(\"{N}\", \"4\");\n  const col_division5 = division_template.replace(\"{N}\", \"5\");\n  const col_event1 = event_template.replace(\"{N}\", \"1\");\n  const col_event2 = event_template.replace(\"{N}\", \"2\");\n  const col_event3 = event_template.replace(\"{N}\", \"3\");\n  const col_event4 = event_template.replace(\"{N}\", \"4\");\n  const col_event5 = event_template.replace(\"{N}\", \"5\");\n  const col_birthdate = getString(\"import.column-birthdate\", language);\n  const col_age = getString(\"import.column-age\", language);\n  const col_memberid = getString(\"import.column-memberid\", language);\n  const col_country = getString(\"import.column-country\", language);\n  const col_state = getString(\"import.column-state\", language);\n  const col_lot = getString(\"import.column-lot\", language);\n  const col_team = getString(\"import.column-team\", language);\n  const col_instagram = getString(\"import.column-instagram\", language);\n  const col_notes = getString(\"import.column-notes\", language);\n\n  // Every fieldname must be either mandatory or optional.\n  const MANDATORY_FIELDNAMES = [\n    col_day,\n    col_platform,\n    col_flight,\n    col_name,\n    col_sex,\n    col_equipment,\n    col_division1,\n    col_event1\n  ];\n  const OPTIONAL_FIELDNAMES = [\n    col_division2,\n    col_division3,\n    col_division4,\n    col_division5,\n    col_event2,\n    col_event3,\n    col_event4,\n    col_event5,\n    col_birthdate,\n    col_age,\n    col_memberid,\n    col_country,\n    col_state,\n    col_lot,\n    col_team,\n    col_instagram,\n    col_notes\n  ];\n\n  // Check the existent fieldnames for sanity.\n  for (let i = 0; i < csv.fieldnames.length; ++i) {\n    const name: string = csv.fieldnames[i];\n\n    // Every fieldname that appears must be known.\n    if (!MANDATORY_FIELDNAMES.includes(name) && !OPTIONAL_FIELDNAMES.includes(name)) {\n      const colname = getSpreadsheetColumnName(i);\n      const allfields: string = MANDATORY_FIELDNAMES.join(\", \") + \", \" + OPTIONAL_FIELDNAMES.join(\", \");\n\n      const e = getString(\"error.csv-unknown-header\", language);\n      return e\n        .replace(\"{name}\", name)\n        .replace(\"{ABC}\", colname)\n        .replace(\"{validList}\", allfields);\n    }\n\n    // Fieldnames cannot be repeated.\n    for (let j = i + 1; j < csv.fieldnames.length; ++j) {\n      if (csv.fieldnames[j] === csv.fieldnames[i]) {\n        const iname = getSpreadsheetColumnName(i);\n        const jname = getSpreadsheetColumnName(j);\n\n        const e = getString(\"error.csv-duplicate-header\", language);\n        return e\n          .replace(\"{name}\", csv.fieldnames[i])\n          .replace(\"{firstABC}\", iname)\n          .replace(\"{secondABC}\", jname);\n      }\n    }\n  }\n\n  // Check that all of the MANDATORY_FIELDNAMES are included.\n  for (let i = 0; i < MANDATORY_FIELDNAMES.length; ++i) {\n    if (!csv.fieldnames.includes(MANDATORY_FIELDNAMES[i])) {\n      const e = getString(\"error.csv-missing-header\", language);\n      return e.replace(\"{name}\", MANDATORY_FIELDNAMES[i]);\n    }\n  }\n\n  // The \"Platform\" column\" must occur after the \"Day\" column: the parsing\n  // below is stateful, and needs to know how many platforms are on that day\n  // when it reads in the platform value.\n  if (csv.fieldnames.indexOf(col_platform) <= csv.fieldnames.indexOf(col_day)) {\n    const e = getString(\"error.csv-day-platform-order\", language);\n    return e.replace(\"{day}\", col_day).replace(\"{platform}\", col_platform);\n  }\n\n  // The caller needs to update this field on the state later, if successful.\n  let nextEntryId = state.registration.nextEntryId;\n  const entries: Array<Entry> = [];\n\n  const errprefix_template = getString(\"error.csv-field-prefix\", language);\n\n  // The fieldnames are valid! Now we can start building Entries.\n  for (let i = 0; i < csv.rows.length; ++i) {\n    const entry: Entry = newDefaultEntry(nextEntryId++);\n    entries.push(entry);\n\n    // Iterate over each field and integrate it into the Entry object.\n    const row: Array<string> = csv.rows[i];\n    for (let j = 0; j < row.length; ++j) {\n      const fieldname = csv.fieldnames[j];\n      const val = row[j];\n\n      // User-visible row number, for error messages.\n      // The first row is for the fieldnames, and spreadsheet programs are 1-indexed.\n      const rowstr = displayNumber(i + 2, language);\n\n      // Start building the error string early, since it's repeated a lot.\n      const errprefix = errprefix_template\n        .replace(\"{cellType}\", fieldname)\n        .replace(\"{cellValue}\", val)\n        .replace(\"{rowNumber}\", rowstr);\n\n      if (fieldname === col_day) {\n        // Default to 1.\n        if (val === \"\") {\n          entry.day = 1;\n        } else {\n          const integer = parseInteger(val);\n\n          // Must be an integer.\n          if (typeof integer !== \"number\") {\n            return errprefix + getString(\"error.csv-field-suffix-integer\", language);\n          }\n\n          // Can't be less than one: there's always at least one day.\n          if (integer < 1) {\n            return errprefix + getString(\"error.csv-field-suffix-positive\", language);\n          }\n\n          // Can't be greater than the number of days specified in the GlobalState.\n          const numDays = state.meet.lengthDays;\n          if (integer > numDays) {\n            const e = getString(\"error.csv-field-suffix-day-overflow\", language);\n            return errprefix + e.replace(\"{numDays}\", String(numDays));\n          }\n\n          // All checks passed!\n          entry.day = integer;\n        }\n      } else if (fieldname === col_platform) {\n        // Default to 1.\n        if (val === \"\") {\n          entry.platform = 1;\n        } else {\n          const integer = parseInteger(val);\n\n          // Must be an integer.\n          if (typeof integer !== \"number\") {\n            return errprefix + getString(\"error.csv-field-suffix-integer\", language);\n          }\n\n          // Can't be less than one: there's always at least one platform.\n          if (integer < 1) {\n            return errprefix + getString(\"error.csv-field-suffix-positive\", language);\n          }\n\n          // Can't be greater than the number of platforms specified in the GlobalState.\n          // The \"Day\" column is guaranteed to already have been parsed: code above\n          // makes sure the \"Day\" column is before the \"Platform\" column.\n          const day = entry.day;\n          const platforms = state.meet.platformsOnDays[day];\n          if (integer > platforms) {\n            const e = getString(\"error.csv-field-suffix-platform-overflow\", language);\n            return errprefix + e.replace(\"{dayNumber}\", String(day)).replace(\"{numPlatforms}\", String(platforms));\n          }\n\n          // All checks passed!\n          entry.platform = integer;\n        }\n      } else if (fieldname === col_flight) {\n        // Default to A.\n        if (val === \"\") {\n          entry.flight = \"A\";\n        } else {\n          try {\n            entry.flight = delocalizeFlight(val, language);\n          } catch (err) {\n            return errprefix + getString(\"error.csv-field-suffix-flight-invalid\", language);\n          }\n        }\n      } else if (fieldname === col_name) {\n        if (val === \"\") {\n          return errprefix + getString(\"error.csv-field-suffix-name-blank\", language);\n        }\n        entry.name = val;\n      } else if (fieldname === col_sex) {\n        try {\n          entry.sex = delocalizeSex(val, language);\n        } catch (err) {\n          const e = getString(\"error.csv-field-suffix-sex-invalid\", language);\n          const m = getString(\"sex.m\", language);\n          const f = getString(\"sex.f\", language);\n          const mx = getString(\"sex.mx\", language);\n          return (\n            errprefix +\n            e\n              .replace(\"{M}\", m)\n              .replace(\"{F}\", f)\n              .replace(\"{Mx}\", mx)\n          );\n        }\n      } else if (fieldname === col_equipment) {\n        try {\n          entry.equipment = delocalizeEquipment(val, language);\n        } catch (err) {\n          const e = getString(\"error.csv-field-suffix-equipment-invalid\", language);\n          const bare = getString(\"equipment.bare\", language);\n          const sleeves = getString(\"equipment.sleeves\", language);\n          const wraps = getString(\"equipment.wraps\", language);\n          const single = getString(\"equipment.single-ply\", language);\n          const multi = getString(\"equipment.multi-ply\", language);\n          return (\n            errprefix +\n            e\n              .replace(\"{bare}\", bare)\n              .replace(\"{sleeves}\", sleeves)\n              .replace(\"{wraps}\", wraps)\n              .replace(\"{single}\", single)\n              .replace(\"{multi}\", multi)\n          );\n        }\n      } else if (\n        fieldname === col_division1 ||\n        fieldname === col_division2 ||\n        fieldname === col_division3 ||\n        fieldname === col_division4 ||\n        fieldname === col_division5\n      ) {\n        if (val === \"\") {\n          // Only the first Division is mandatory.\n          if (fieldname === col_division1) {\n            return errprefix + getString(\"error.csv-field-suffix-division-blank\", language);\n          }\n        } else {\n          // Check that it appears as a valid division.\n          if (!state.meet.divisions.includes(val)) {\n            return errprefix + getString(\"error.csv-field-suffix-division-invalid\", language);\n          }\n\n          // Check that it wasn't already added.\n          if (entry.divisions.includes(val)) {\n            return errprefix + getString(\"error.csv-field-suffix-division-duplicate\", language);\n          }\n\n          entry.divisions.push(val);\n        }\n      } else if (\n        fieldname === col_event1 ||\n        fieldname === col_event2 ||\n        fieldname === col_event3 ||\n        fieldname === col_event4 ||\n        fieldname === col_event5\n      ) {\n        if (val === \"\") {\n          // Only the first Event is mandatory.\n          if (fieldname === col_event1) {\n            return errprefix + getString(\"error.csv-field-suffix-event-blank\", language);\n          }\n        } else {\n          try {\n            const evt = delocalizeEvent(val, language);\n\n            // Check for duplicates.\n            if (entry.events.includes(evt)) {\n              return errprefix + getString(\"error.csv-field-suffix-event-duplicate\", language);\n            }\n            entry.events.push(evt);\n          } catch (err) {\n            const e = getString(\"error.csv-field-suffix-event-invalid\", language);\n            const sbd = getString(\"event.sbd\", language);\n            const bd = getString(\"event.bd\", language);\n            const sb = getString(\"event.sb\", language);\n            const sd = getString(\"event.sd\", language);\n            const s = getString(\"event.s\", language);\n            const b = getString(\"event.b\", language);\n            const d = getString(\"event.d\", language);\n            return (\n              errprefix +\n              e\n                .replace(\"{SBD}\", sbd)\n                .replace(\"{BD}\", bd)\n                .replace(\"{SB}\", sb)\n                .replace(\"{SD}\", sd)\n                .replace(\"{S}\", s)\n                .replace(\"{B}\", b)\n                .replace(\"{D}\", d)\n            );\n          }\n        }\n      } else if (fieldname === col_birthdate) {\n        // BirthDate is optional.\n        if (val !== \"\") {\n          const bd = parseDate(val);\n          if (typeof bd !== \"string\") {\n            return errprefix + getString(\"error.csv-field-suffix-date-format\", language);\n          }\n\n          entry.birthDate = bd;\n        }\n      } else if (fieldname === col_age) {\n        // Age is optional.\n        if (val !== \"\") {\n          const integer = parseInteger(val);\n          if (typeof integer !== \"number\" || integer < 1) {\n            return errprefix + getString(\"error.csv-field-empty-or-positive\", language);\n          }\n\n          // All checks passed!\n          entry.age = integer;\n        }\n      } else if (fieldname === col_memberid) {\n        entry.memberId = val;\n      } else if (fieldname === col_country) {\n        entry.country = val;\n      } else if (fieldname === col_state) {\n        entry.state = val;\n      } else if (fieldname === col_lot) {\n        // Empty strings are allowed: just doesn't use lots.\n        if (val !== \"\") {\n          const integer = parseInteger(val);\n          if (typeof integer !== \"number\" || integer < 1) {\n            return errprefix + getString(\"error.csv-field-empty-or-positive\", language);\n          }\n\n          // All checks passed!\n          entry.lot = integer;\n        }\n      } else if (fieldname === col_team) {\n        entry.team = val;\n      } else if (fieldname === col_instagram) {\n        entry.instagram = val;\n      } else if (fieldname === col_notes) {\n        entry.notes = val;\n      } else {\n        return 'Missing handler for the \"' + fieldname + '\" column';\n      }\n    }\n  }\n\n  return entries;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Exports registration data to a CSV file.\n\nimport { csvDate, csvString, Csv } from \"./csv\";\nimport { getString, localizeEquipment, localizeEvent, localizeFlight, localizeSex } from \"../strings\";\n\nimport { Language } from \"../../types/dataTypes\";\nimport { RegistrationState } from \"../../types/stateTypes\";\n\nexport const makeRegistrationsCsv = (registration: RegistrationState, language: Language): string => {\n  const csv = new Csv();\n\n  const division_template = getString(\"import.column-division-n\", language);\n  const event_template = getString(\"import.column-event-n\", language);\n\n  const col_day = getString(\"import.column-day\", language);\n  const col_platform = getString(\"import.column-platform\", language);\n  const col_flight = getString(\"import.column-flight\", language);\n  const col_name = getString(\"import.column-name\", language);\n  const col_sex = getString(\"import.column-sex\", language);\n  const col_equipment = getString(\"import.column-equipment\", language);\n  const col_division1 = division_template.replace(\"{N}\", \"1\");\n  const col_event1 = event_template.replace(\"{N}\", \"1\");\n  const col_birthdate = getString(\"import.column-birthdate\", language);\n  const col_age = getString(\"import.column-age\", language);\n  const col_memberid = getString(\"import.column-memberid\", language);\n  const col_country = getString(\"import.column-country\", language);\n  const col_state = getString(\"import.column-state\", language);\n  const col_lot = getString(\"import.column-lot\", language);\n  const col_team = getString(\"import.column-team\", language);\n  const col_instagram = getString(\"import.column-instagram\", language);\n  const col_notes = getString(\"import.column-notes\", language);\n\n  csv.appendColumns([col_day, col_platform, col_flight, col_name, col_sex, col_equipment]);\n  csv.appendColumns([col_division1, col_event1]); // Base cases. Others inserted by need.\n  csv.appendColumns([col_birthdate, col_age, col_memberid, col_country, col_state]);\n  csv.appendColumns([col_lot, col_team, col_instagram, col_notes]);\n\n  for (let i = 0; i < registration.entries.length; ++i) {\n    const entry = registration.entries[i];\n\n    const row: Array<string> = new Array(csv.fieldnames.length).fill(\"\");\n    row[csv.index(col_day)] = csvString(entry.day);\n    row[csv.index(col_platform)] = csvString(entry.platform);\n    row[csv.index(col_flight)] = csvString(localizeFlight(entry.flight, language));\n    row[csv.index(col_name)] = csvString(entry.name);\n    row[csv.index(col_sex)] = csvString(localizeSex(entry.sex, language));\n    row[csv.index(col_equipment)] = csvString(localizeEquipment(entry.equipment, language));\n    row[csv.index(col_birthdate)] = csvDate(entry.birthDate);\n    row[csv.index(col_age)] = csvString(entry.age);\n    row[csv.index(col_memberid)] = csvString(entry.memberId);\n    row[csv.index(col_country)] = csvString(entry.country);\n    row[csv.index(col_state)] = csvString(entry.state);\n    row[csv.index(col_lot)] = csvString(entry.lot);\n    row[csv.index(col_team)] = csvString(entry.team);\n    row[csv.index(col_instagram)] = csvString(entry.instagram);\n    row[csv.index(col_notes)] = csvString(entry.notes);\n\n    // Divisions.\n    for (let j = 0; j < entry.divisions.length; ++j) {\n      const division: string = entry.divisions[j];\n      const column: string = division_template.replace(\"{N}\", String(j + 1));\n\n      // Create the column if necessary. The previously numbered column exists.\n      if (csv.index(column) === -1) {\n        const prevIndex = csv.index(division_template.replace(\"{N}\", String(j)));\n        csv.insertColumn(prevIndex + 1, column); // Make space in other rows.\n        row.splice(prevIndex + 1, 0, \"\"); // Make space in this row.\n      }\n      row[csv.index(column)] = csvString(division);\n    }\n\n    // Events.\n    for (let j = 0; j < entry.events.length; ++j) {\n      const event = entry.events[j];\n      const column: string = event_template.replace(\"{N}\", String(j + 1));\n\n      // Create the column if necessary. The previously numbered column exists.\n      if (csv.index(column) === -1) {\n        const prevIndex = csv.index(event_template.replace(\"{N}\", String(j)));\n        csv.insertColumn(prevIndex + 1, column); // Make space in other rows.\n        row.splice(prevIndex + 1, 0, \"\"); // Make space in this row.\n      }\n      row[csv.index(column)] = csvString(localizeEvent(event, language));\n    }\n\n    csv.rows.push(row);\n  }\n\n  return csv.toString();\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Registration page, contained by the RegistrationContainer.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Card from \"react-bootstrap/Card\";\n\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport LifterTable from \"./LifterTable\";\nimport LifterRow from \"./LifterRow\";\nimport NewButton from \"./NewButton\";\nimport ErrorModal from \"../ErrorModal\";\n\nimport { Csv } from \"../../logic/export/csv\";\nimport { makeExampleRegistrationsCsv, loadRegistrations } from \"../../logic/import/registration-csv\";\nimport { makeRegistrationsCsv } from \"../../logic/export/registrations\";\nimport { getString } from \"../../logic/strings\";\n\nimport { newRegistration, deleteRegistration } from \"../../actions/registrationActions\";\n\nimport { saveAs } from \"file-saver\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Entry } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\n\ninterface StateProps {\n  global: GlobalState;\n}\n\ninterface DispatchProps {\n  newRegistration: (obj: Partial<Entry>) => void;\n  deleteRegistration: (id: number) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  // Controls the ErrorModal popup. Shown when error !== \"\".\n  error: string;\n  // Used for showing spinning indicators when loading files\n  isLoadingFiles: boolean;\n}\n\n// Used to distinguish between the Overwrite and Append modes.\nlet globalImportKind: string = \"Overwrite\";\n\nclass RegistrationView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.handleDownloadCsvTemplateClick = this.handleDownloadCsvTemplateClick.bind(this);\n    this.handleExportCsvClick = this.handleExportCsvClick.bind(this);\n    this.handleOverwriteClick = this.handleOverwriteClick.bind(this);\n    this.handleAppendClick = this.handleAppendClick.bind(this);\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n\n    this.state = { error: \"\", isLoadingFiles: false };\n  }\n\n  handleDownloadCsvTemplateClick = () => {\n    const text = makeExampleRegistrationsCsv(this.props.global.language);\n    const blob = new Blob([text], { type: \"application/text;charset=utf-8\" });\n    const filename = getString(\"import.template-filename\", this.props.global.language) + \".csv\";\n    saveAs(blob, filename);\n  };\n\n  handleExportCsvClick = () => {\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.global.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const language = this.props.global.language;\n    const text = makeRegistrationsCsv(this.props.global.registration, language);\n    const blob = new Blob([text], { type: \"application/text;charset=utf-8\" });\n\n    const basename = getString(\"import.export-filename\", this.props.global.language);\n    const filename = basename.replace(\"{MeetName}\", meetname) + \".csv\";\n    saveAs(blob, filename);\n  };\n\n  handleOverwriteClick = () => {\n    globalImportKind = \"Overwrite\";\n    const loadhelper = document.getElementById(\"loadhelper\");\n    if (loadhelper !== null) {\n      loadhelper.click();\n    }\n  };\n\n  handleAppendClick = () => {\n    globalImportKind = \"Append\";\n    const loadhelper = document.getElementById(\"loadhelper\");\n    if (loadhelper !== null) {\n      loadhelper.click();\n    }\n  };\n\n  handleLoadFileInput = () => {\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\n      return;\n    }\n\n    const selectedFile = loadHelper.files[0];\n    const rememberThis = this;\n\n    const reader = new FileReader();\n\n    reader.onload = function(event) {\n      // If this occurs, we've introduced a bug when initiating the file reader, or the read failed.\n      // Add this check as a guard so the typing is narrowed\n      if (typeof reader.result !== \"string\") {\n        window.alert(\"Unable to load file: an unexpected internal error occured\");\n        return;\n      }\n\n      const csv = new Csv();\n      const maybeError = csv.fromString(reader.result.replace(/;/g, \",\"));\n\n      // Check if an error message occurred.\n      if (typeof maybeError === \"string\") {\n        rememberThis.setState({ error: maybeError });\n        return;\n      }\n\n      // Convert the Csv to an Array<Entry>.\n      const language = rememberThis.props.global.language;\n      const maybeEntries = loadRegistrations(rememberThis.props.global, csv, language);\n      if (typeof maybeEntries === \"string\") {\n        rememberThis.setState({ error: maybeEntries });\n        return;\n      }\n\n      // Successfully parsed and loaded!\n      const entries: Array<Entry> = maybeEntries;\n\n      // If the mode is \"Overwrite\", delete all existing Entries.\n      if (globalImportKind === \"Overwrite\") {\n        const entryIds = rememberThis.props.global.registration.entries.map(e => e.id);\n        for (let i = 0; i < entryIds.length; ++i) {\n          rememberThis.props.deleteRegistration(entryIds[i]);\n        }\n      }\n\n      // Add all the new Entries.\n      for (let i = 0; i < entries.length; ++i) {\n        // Deleting the 'id' field causes newRegistration() to assign a valid one.\n        delete entries[i].id;\n        rememberThis.props.newRegistration(entries[i]);\n      }\n    };\n\n    reader.onloadstart = function(event) {\n      rememberThis.setState({ isLoadingFiles: true });\n    };\n\n    reader.onloadend = function(event) {\n      rememberThis.setState({ isLoadingFiles: false });\n    };\n\n    reader.readAsText(selectedFile);\n  };\n\n  closeErrorModal = () => {\n    this.setState({ error: \"\" });\n  };\n\n  render() {\n    const numEntries = this.props.global.registration.entries.length;\n\n    return (\n      <div>\n        <ErrorModal\n          error={this.state.error}\n          title={getString(\"registration.importation-error\", this.props.global.language)}\n          show={this.state.error !== \"\"}\n          close={this.closeErrorModal}\n        />\n\n        <Card style={{ marginBottom: \"17px\" }}>\n          <Card.Header>\n            <FormattedMessage id=\"registration.auto-import-card-header\" defaultMessage=\"Auto-Import Registrations\" />\n          </Card.Header>\n          <Card.Body>\n            <Button variant=\"info\" onClick={this.handleDownloadCsvTemplateClick}>\n              <FormattedMessage id=\"registration.button-download-template\" defaultMessage=\"Download Template\" />\n            </Button>\n\n            <Button\n              variant=\"success\"\n              disabled={numEntries === 0}\n              onClick={this.handleExportCsvClick}\n              style={{ marginLeft: \"14px\" }}\n            >\n              <FormattedMessage id=\"registration.button-export-to-csv\" defaultMessage=\"Export to CSV\" />\n            </Button>\n\n            <ButtonGroup style={{ marginLeft: \"14px\" }}>\n              <Button variant=\"danger\" onClick={this.handleOverwriteClick}>\n                {this.state.isLoadingFiles && <FontAwesomeIcon style={{ marginRight: \"5px\" }} icon={faSpinner} spin />}\n                <FormattedMessage\n                  id=\"registration.button-overwrite-from-csv\"\n                  defaultMessage=\"Overwrite Registrations from CSV\"\n                />\n              </Button>\n              <Button variant=\"warning\" onClick={this.handleAppendClick}>\n                <FormattedMessage\n                  id=\"registration.button-append-from-csv\"\n                  defaultMessage=\"Append Registrations from CSV\"\n                />\n              </Button>\n            </ButtonGroup>\n          </Card.Body>\n        </Card>\n\n        <LifterTable entries={this.props.global.registration.entries} rowRenderer={LifterRow} />\n        <NewButton />\n\n        <input\n          id=\"loadhelper\"\n          type=\"file\"\n          accept=\".csv\"\n          style={{ display: \"none\" }}\n          onChange={this.handleLoadFileInput}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  global: state\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\n    deleteRegistration: (id: number) => dispatch(deleteRegistration(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Registration page.\n\nimport React from \"react\";\n\nimport RegistrationView from \"../components/registration/RegistrationView\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass RegistrationContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <RegistrationView />\n      </div>\n    );\n  }\n}\n\nexport default RegistrationContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Table from \"react-bootstrap/Table\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  entries: Array<Entry>;\n  rowRenderer: any;\n  inLiftingPage?: boolean;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass LifterTable extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.renderRows = this.renderRows.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n  }\n\n  renderRows = () => {\n    const LifterRow = this.props.rowRenderer;\n    const { entries } = this.props;\n    const inLiftingPage = this.props.inLiftingPage === true;\n\n    return entries.map(entry => <LifterRow key={entry.id} id={entry.id} inLiftingPage={inLiftingPage} />);\n  };\n\n  renderHeader = () => {\n    // Styling for small, single-character selector columns.\n    const shortStyle = { width: \"85px\" };\n\n    const inKg = this.props.inKg;\n\n    const bodyweightId = inKg ? \"weigh-ins.bodyweight-header-kg\" : \"weigh-ins.bodyweight-header-lbs\";\n    const squatId = inKg ? \"weigh-ins.squat-header-kg\" : \"weigh-ins.squat-header-lbs\";\n    const benchId = inKg ? \"weigh-ins.bench-header-kg\" : \"weigh-ins.bench-header-lbs\";\n    const deadliftId = inKg ? \"weigh-ins.deadlift-header-kg\" : \"weigh-ins.deadlift-header-lbs\";\n\n    return (\n      <tr>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.platform-header\" defaultMessage=\"Platform\" />\n        </th>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.platform-flight\" defaultMessage=\"Flight\" />\n        </th>\n        <th>{getString(\"lifting.column-lifter\", this.props.language)}</th>\n\n        <th style={shortStyle}>{getString(\"common.age\", this.props.language)}</th>\n        <th style={shortStyle}>{getString(bodyweightId, this.props.language)}</th>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.squat-rack-header\" defaultMessage=\"Squat Rack\" />\n        </th>\n        <th style={shortStyle}>{getString(squatId, this.props.language)}</th>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.bench-rack-header\" defaultMessage=\"Bench Rack\" />\n        </th>\n        <th style={shortStyle}>{getString(benchId, this.props.language)}</th>\n        <th style={shortStyle}>{getString(deadliftId, this.props.language)}</th>\n      </tr>\n    );\n  };\n\n  render() {\n    return (\n      <Table hover size=\"sm\" style={{ margin: \"0px\" }}>\n        <thead>{this.renderHeader()}</thead>\n        <tbody>{this.renderRows()}</tbody>\n      </Table>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  language: state.language\n});\n\nexport default connect(mapStateToProps)(LifterTable);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  EnterAttemptAction,\n  MarkLiftAction,\n  SetLiftingGroupAction,\n  OverrideAttemptAction,\n  OverrideEntryIdAction,\n  SetTableInfoAction\n} from \"../types/actionTypes\";\nimport { Flight, Lift } from \"../types/dataTypes\";\nimport { LiftingState } from \"../types/stateTypes\";\n\n// Sets a weightKg that doesn't have a good/failed value, for entering in attempts.\nexport const enterAttempt = (\n  entryId: number,\n  lift: Lift,\n  attemptOneIndexed: number,\n  weightKg: number\n): EnterAttemptAction => {\n  return {\n    type: \"ENTER_ATTEMPT\",\n    entryId: entryId,\n    lift: lift,\n    attemptOneIndexed: attemptOneIndexed,\n    weightKg: weightKg\n  };\n};\n\n// Marks a lift \"good\" or \"failed\".\n//\n// entryId is the ID of the affected entry, a Number.\n// lift is \"S\", \"B\", or \"D\".\n// attempt is 1,2,3, etc., up to MAX_ATTEMPTS.\n// success is a bool for whether to mark the lift as a success or as a failure.\nexport const markLift = (entryId: number, lift: Lift, attemptOneIndexed: number, success: boolean): MarkLiftAction => {\n  return {\n    type: \"MARK_LIFT\",\n    entryId: entryId,\n    lift: lift,\n    attemptOneIndexed: attemptOneIndexed,\n    success: success\n  };\n};\n\n// Sets the current group of lifters.\n// This is always manually set by the score table.\nexport const setLiftingGroup = (day: number, platform: number, flight: Flight, lift: Lift): SetLiftingGroupAction => {\n  return {\n    type: \"SET_LIFTING_GROUP\",\n    day: day,\n    platform: platform,\n    flight: flight,\n    lift: lift\n  };\n};\n\n// Overrides the calculated meet progress logic by forcing display of an attempt,\n// even if it has already been marked \"good lift\" or \"no lift\".\nexport const overrideAttempt = (attempt: number): OverrideAttemptAction => {\n  return {\n    type: \"OVERRIDE_ATTEMPT\",\n    attempt: attempt\n  };\n};\n\n// Overrides the calculated meet progress logic by forcing display of a specific lifter,\n// even if they have already had their attempt entered.\nexport const overrideEntryId = (entryId: number): OverrideEntryIdAction => {\n  return {\n    type: \"OVERRIDE_ENTRY_ID\",\n    entryId: entryId\n  };\n};\n\n// Updates arbitrary fields in the LiftingState.\n//\n// The intention is to use action just for table customization: things like\n// column widths, column visibility, and other such options.\n//\n// Having this interface lets us keep the number of actions low: separate\n// actions for each kind of modification is not really useful.\nexport const setTableInfo = (obj: Partial<LiftingState>): SetTableInfoAction => {\n  return {\n    type: \"SET_TABLE_INFO\",\n    changes: obj\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines an input of a single weight, during configuration.\n// Since it's for configuration, it doesn't have an associated success/failure value.\n//\n// For consistency purposes, weights are always stored in kg.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\nimport { updateRegistration } from \"../../actions/registrationActions\";\nimport { enterAttempt } from \"../../actions/liftingActions\";\n\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\nimport { kg2lbs, lbs2kg, string2number, displayWeight } from \"../../logic/units\";\n\nimport { Entry, Language, Lift, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { FormControlTypeHack, assertString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ninterface OwnProps {\n  id: number; // The EntryID.\n\n  // The valid type here should be all keys of Entry where the value is a number\n  // Something like keyof<Partial> where (key,value) => typeof value === Number - if that is possible in typescript?\n  // Otherwise manually specifying all the valid keys of Entry is a fair approach too!\n  field?: \"bodyweightKg\";\n  disabled: boolean;\n\n  // Optional attributes used only for lifts (as opposed to for bodyweights).\n  placeholder?: string;\n  lift?: Lift;\n  attemptOneIndexed?: number;\n  multipleOf?: number;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  weightKg: number;\n  language: Language;\n}\n\ninterface DispatchProps {\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  weightStr: string;\n}\n\nclass WeightInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    let weight = this.props.weightKg;\n    if (!this.props.inKg) {\n      weight = kg2lbs(weight);\n    }\n\n    // Internal state, for purposes of validation.\n    // To avoid confusion (auto-rounding) when typing, just store a String.\n    this.state = {\n      // Prefer displaying an empty string to 0.0.\n      weightStr: weight === 0.0 ? \"\" : displayWeight(weight, props.language)\n    };\n  }\n\n  validate = (): Validation => {\n    const weightNum = string2number(this.state.weightStr);\n    if (isNaN(weightNum) || weightNum < 0) return \"error\";\n    if (this.props.multipleOf !== undefined && weightNum % this.props.multipleOf !== 0.0) {\n      return \"warning\";\n    }\n    if (this.state.weightStr.length > 0) return \"success\";\n    return null;\n  };\n\n  // Update the internal state, used for validation.\n  handleChange = (event: FormEvent<FormControlTypeHack>) => {\n    const weightStr = event.currentTarget.value;\n    if (assertString(weightStr)) {\n      this.setState({ weightStr: weightStr });\n    }\n  };\n\n  // Update the Redux store.\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const weightNum = string2number(event.currentTarget.value);\n\n    if (this.validate() === \"error\") {\n      return;\n    }\n\n    const weightKg = this.props.inKg ? weightNum : lbs2kg(weightNum);\n    if (this.props.weightKg === weightKg) {\n      return;\n    }\n\n    // If \"attempt\" is set, a specific attempt is selected.\n    if (this.props.attemptOneIndexed !== undefined && this.props.lift !== undefined) {\n      const attemptOneIndexed = this.props.attemptOneIndexed;\n      const lift = this.props.lift;\n      this.props.enterAttempt(this.props.id, lift, attemptOneIndexed, weightKg);\n    } else if (this.props.field !== undefined) {\n      // Otherwise, the field is a Number.\n      const newfields: Partial<Entry> = {};\n      newfields[this.props.field] = weightKg;\n      this.props.updateRegistration(this.props.id, newfields);\n    }\n  };\n\n  render() {\n    // FormGroup provides a default padding of 15, but FormGroup is only being\n    // used here to accept a validationState. It's not really a group.\n    const undoDefaultPadding = { marginBottom: \"0\" };\n    const validation: Validation = this.validate();\n\n    return (\n      <FormGroup style={undoDefaultPadding}>\n        <FormControl\n          disabled={this.props.disabled}\n          placeholder={this.props.placeholder}\n          type=\"text\"\n          value={this.state.weightStr}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          isValid={validation === \"success\"}\n          isInvalid={validation === \"error\"}\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\n        />\n      </FormGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  // Only have props for the entry corresponding to this one row.\n  const lookup = state.registration.lookup;\n  const entry = state.registration.entries[lookup[ownProps.id]];\n\n  // If `field` is set, then read the Number from the given field name.\n  let weightKg = 0.0;\n  if (ownProps.field !== undefined) {\n    weightKg = entry[ownProps.field];\n  } else if (ownProps.lift !== undefined && ownProps.attemptOneIndexed !== undefined) {\n    // Otherwise, refer to a specific lift and attempt.\n    const lift = ownProps.lift;\n    const attemptOneIndexed = ownProps.attemptOneIndexed;\n    const field = liftToAttemptFieldName(lift);\n    weightKg = entry[field][attemptOneIndexed - 1];\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    weightKg: weightKg,\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    updateRegistration: (entryId, obj) => dispatch(updateRegistration(entryId, obj)),\n    enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\n      dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightInput);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a row in the LifterTable on the Weigh-ins page.\n// This provides a bunch of widgets, each of which correspond to\n// the state of a single entry.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport ValidatedInput from \"../ValidatedInput\";\nimport WeightInput from \"./WeightInput\";\n\nimport { getAge } from \"../../logic/entry\";\nimport { getString, localizeFlight } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\nimport { validatePositiveInteger } from \"../../validation/positiveInteger\";\n\nimport { updateRegistration } from \"../../actions/registrationActions\";\n\nimport { Entry, Language, Validation } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { FormControlTypeHack, assertFlight, assertString } from \"../../types/utils\";\n\ninterface OwnProps {\n  id: number;\n  inLiftingPage?: boolean;\n}\n\ninterface StateProps {\n  meet: MeetState;\n  entry: Entry;\n  language: Language;\n}\n\ninterface DispatchProps {\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass LifterRow extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.updateRegistrationFlight = this.updateRegistrationFlight.bind(this);\n    this.updateRegistrationSquatRackInfo = this.updateRegistrationSquatRackInfo.bind(this);\n    this.updateRegistrationBenchRackInfo = this.updateRegistrationBenchRackInfo.bind(this);\n    this.updateRegistrationAge = this.updateRegistrationAge.bind(this);\n  }\n\n  updateRegistrationFlight = (event: React.FormEvent<FormControlTypeHack>) => {\n    const flight = event.currentTarget.value;\n    if (this.props.entry.flight !== flight && assertString(flight) && assertFlight(flight)) {\n      this.props.updateRegistration(this.props.id, { flight: flight });\n    }\n  };\n\n  updateRegistrationSquatRackInfo = (value: string) => {\n    if (this.props.entry.squatRackInfo !== value) {\n      this.props.updateRegistration(this.props.id, { squatRackInfo: value });\n    }\n  };\n\n  updateRegistrationBenchRackInfo = (value: string) => {\n    if (this.props.entry.benchRackInfo !== value) {\n      this.props.updateRegistration(this.props.id, { benchRackInfo: value });\n    }\n  };\n\n  updateRegistrationAge = (value: string) => {\n    const age: number = value === \"\" ? 0 : Number(value);\n    if (this.props.entry.age !== age) {\n      this.props.updateRegistration(this.props.id, { age: age });\n    }\n  };\n\n  validateAge = (value?: string): Validation => {\n    if (value === \"\") return null;\n\n    const pos: Validation = validatePositiveInteger(value);\n    if (pos === \"success\") {\n      // Complain a little if the age is implausible.\n      const n = Number(value);\n      if (n <= 4 || n > 100) return \"warning\";\n    }\n    return pos;\n  };\n\n  validateRack = (value?: string): Validation => {\n    if (value === \"\") return null;\n    return \"success\";\n  };\n\n  render() {\n    const language = this.props.language;\n    const entry = this.props.entry;\n\n    // Check whether the event(s) include a given lift.\n    let hasSquat = false;\n    let hasBench = false;\n    let hasDeadlift = false;\n    for (let i = 0; i < entry.events.length; i++) {\n      const event = entry.events[i];\n      if (event.includes(\"S\")) {\n        hasSquat = true;\n      }\n      if (event.includes(\"B\")) {\n        hasBench = true;\n      }\n      if (event.includes(\"D\")) {\n        hasDeadlift = true;\n      }\n    }\n\n    // Check whether the first attempt already occurred.\n    const disableSquatWeight = !hasSquat || entry.squatStatus[0] !== 0;\n    const disableBenchWeight = !hasBench || entry.benchStatus[0] !== 0;\n    const disableDeadliftWeight = !hasDeadlift || entry.deadliftStatus[0] !== 0;\n\n    // Only show the Flight selector if the Weigh-ins page is non-embedded.\n    let flight: string | JSX.Element = localizeFlight(entry.flight, language);\n    if (this.props.inLiftingPage !== true) {\n      // Can be undefined.\n      flight = (\n        <FormControl\n          defaultValue={entry.flight}\n          as=\"select\"\n          onChange={this.updateRegistrationFlight}\n          className=\"custom-select\"\n        >\n          <option value=\"A\">{getString(\"flight.a\", language)}</option>\n          <option value=\"B\">{getString(\"flight.b\", language)}</option>\n          <option value=\"C\">{getString(\"flight.c\", language)}</option>\n          <option value=\"D\">{getString(\"flight.d\", language)}</option>\n          <option value=\"E\">{getString(\"flight.e\", language)}</option>\n          <option value=\"F\">{getString(\"flight.f\", language)}</option>\n          <option value=\"G\">{getString(\"flight.g\", language)}</option>\n          <option value=\"H\">{getString(\"flight.h\", language)}</option>\n          <option value=\"I\">{getString(\"flight.i\", language)}</option>\n          <option value=\"J\">{getString(\"flight.j\", language)}</option>\n          <option value=\"K\">{getString(\"flight.k\", language)}</option>\n          <option value=\"L\">{getString(\"flight.l\", language)}</option>\n          <option value=\"M\">{getString(\"flight.m\", language)}</option>\n          <option value=\"N\">{getString(\"flight.n\", language)}</option>\n          <option value=\"O\">{getString(\"flight.o\", language)}</option>\n          <option value=\"P\">{getString(\"flight.p\", language)}</option>\n        </FormControl>\n      );\n    }\n\n    const age = getAge(entry, this.props.meet.date);\n    const ageStr = age === 0 ? getString(\"common.age\", language) : displayNumber(age, language);\n\n    return (\n      <tr>\n        <td>{entry.platform}</td>\n        <td>{flight}</td>\n        <td>{entry.name}</td>\n\n        <td>\n          <ValidatedInput\n            initialValue={entry.age === 0 ? \"\" : displayNumber(entry.age, language)}\n            placeholder={ageStr}\n            validate={this.validateAge}\n            onSuccess={this.updateRegistrationAge}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            field=\"bodyweightKg\"\n            placeholder={getString(\"weigh-ins.bodyweight-placeholder\", language)}\n            disabled={false}\n          />\n        </td>\n\n        <td>\n          <ValidatedInput\n            initialValue={entry.squatRackInfo}\n            placeholder={hasSquat ? getString(\"weigh-ins.squat-rack-placeholder\", language) : undefined}\n            disabled={!hasSquat}\n            validate={this.validateRack}\n            onSuccess={this.updateRegistrationSquatRackInfo}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            lift=\"S\"\n            multipleOf={2.5}\n            attemptOneIndexed={1}\n            placeholder={hasSquat ? getString(\"weigh-ins.squat-placeholder\", language) : undefined}\n            disabled={disableSquatWeight}\n          />\n        </td>\n\n        <td>\n          <ValidatedInput\n            initialValue={entry.benchRackInfo}\n            placeholder={hasBench ? getString(\"weigh-ins.bench-rack-placeholder\", language) : undefined}\n            disabled={!hasBench}\n            validate={this.validateRack}\n            onSuccess={this.updateRegistrationBenchRackInfo}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            lift=\"B\"\n            multipleOf={2.5}\n            attemptOneIndexed={1}\n            placeholder={hasBench ? getString(\"weigh-ins.bench-placeholder\", language) : undefined}\n            disabled={disableBenchWeight}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            lift=\"D\"\n            multipleOf={2.5}\n            attemptOneIndexed={1}\n            placeholder={hasDeadlift ? getString(\"weigh-ins.deadlift-placeholder\", language) : undefined}\n            disabled={disableDeadliftWeight}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  // Only have props for the entry corresponding to this one row.\n  const lookup = state.registration.lookup;\n  const entry = state.registration.entries[lookup[ownProps.id]];\n\n  return {\n    meet: state.meet,\n    entry: entry,\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    updateRegistration: (entryId: number, obj: Partial<Entry>) => dispatch(updateRegistration(entryId, obj))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LifterRow);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Weigh-ins page, contained by the WeighinsContainer.\n// The Weigh-ins page updates more information in the Registration state.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\n\nimport { getLiftersOnDay } from \"../../logic/entry\";\nimport LifterTable from \"./LifterTable\";\nimport LifterRow from \"./LifterRow\";\n\nimport { Entry } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\n// For use when embedded inside the Lifting page.\ninterface OwnProps {\n  day?: number;\n  platform?: number;\n  inLiftingPage?: boolean; // The weigh-ins page can be embedded.\n}\n\ninterface StateProps {\n  entries: ReadonlyArray<Entry>;\n}\n\ntype Props = Readonly<OwnProps> & Readonly<StateProps>;\n\nclass WeighinsView extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.getNumDaysFromEntries = this.getNumDaysFromEntries.bind(this);\n  }\n\n  // Figure out how many days there are by looking at the entries themselves.\n  //\n  // The meet page information may be unreliable: someone might have created\n  // a second day, added a lifter to it, then removed the second day without\n  // yet updating that lifter.\n  //\n  // This is an attempt to make that error more obvious, so it can be corrected.\n  getNumDaysFromEntries = () => {\n    let max_day = 0;\n    const entries = this.props.entries;\n    for (let i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n      if (entry.day > max_day) {\n        max_day = entry.day;\n      }\n    }\n    return max_day;\n  };\n\n  render() {\n    // Determine whether this is being shown embedded in the Lifting page.\n    const inLiftingPage = this.props.inLiftingPage === true;\n\n    // Make a separate panel for each day.\n    const numDays = this.getNumDaysFromEntries();\n    const dayCards = [];\n    for (let i = 1; i <= numDays; i++) {\n      const lifters = getLiftersOnDay(this.props.entries, i);\n\n      // Skip if the OwnProps excluded this selection.\n      if (lifters.length === 0) {\n        continue;\n      }\n\n      // Present the lifters in sorted order.\n      lifters.sort((a, b) => {\n        if (a.platform !== b.platform) return a.platform - b.platform;\n        if (a.flight !== b.flight) return a.flight < b.flight ? -1 : 1;\n        if (a.name < b.name) return -1;\n        if (a.name > b.name) return 1;\n        return 0;\n      });\n\n      dayCards.push(\n        <Card key={i} style={{ marginBottom: \"17px\" }}>\n          <Card.Header>\n            <FormattedMessage\n              id=\"weigh-ins.day-header\"\n              defaultMessage=\"Day {dayNumber} Weigh-ins\"\n              values={{ dayNumber: i }}\n            />\n          </Card.Header>\n          <Card.Body>\n            <LifterTable entries={lifters} rowRenderer={LifterRow} inLiftingPage={inLiftingPage} />\n          </Card.Body>\n        </Card>\n      );\n    }\n\n    // If there are no days thus far, show a default warning panel.\n    if (dayCards.length === 0) {\n      dayCards.push(\n        <Card key={0}>\n          <Card.Header>\n            <FormattedMessage id=\"weigh-ins.empty-header\" defaultMessage=\"Waiting for Registration\" />\n          </Card.Header>\n          <Card.Body>\n            <FormattedMessage\n              id=\"weigh-ins.empty-body\"\n              defaultMessage=\"Add lifters on the Registration page before weighing them in.\"\n            />\n          </Card.Body>\n        </Card>\n      );\n    }\n\n    return <div>{dayCards}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const { day, platform } = ownProps;\n  let entries = state.registration.entries;\n\n  // Filter if requested by the OwnProps.\n  if (typeof day === \"number\" && typeof platform === \"number\") {\n    entries = entries.filter(e => e.day === day && e.platform === platform);\n  }\n\n  return { entries };\n};\n\nexport default connect(mapStateToProps)(WeighinsView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Weighins page.\n\nimport React from \"react\";\n\nimport WeighinsView from \"../components/weighins/WeighinsView\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass WeighinsContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <WeighinsView />\n      </div>\n    );\n  }\n}\n\nexport default WeighinsContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { kg2lbs, displayWeight } from \"../logic/units\";\n\nimport { PlateColors } from \"../constants/plateColors\";\n\nimport { Plate, LoadedPlate } from \"../types/dataTypes\";\n\n// Convert from kg to lbs with rounding to 2 decimal places.\n// It's OK that this is slow, since it rarely executes.\nconst safeKg2Lbs = (kg: number): number => {\n  return Number(displayWeight(kg2lbs(kg)));\n};\n\n// Returns a list of plate weights in loading order.\n// Any unloadable remainder is reported as a final number with a negative value.\nexport const selectPlates = (\n  loadingKg: number,\n  barAndCollarsWeightKg: number,\n  plates: ReadonlyArray<Plate>,\n  inKg: boolean\n): Array<LoadedPlate> => {\n  // Flow doesn't like it when arguments get redefined.\n  let loadingAny = loadingKg;\n  let barAndCollarsWeightAny = barAndCollarsWeightKg;\n  let platesAny = plates;\n\n  // Convert to pounds, avoiding floating point errors.\n  if (inKg === false) {\n    loadingAny = safeKg2Lbs(loadingKg);\n    barAndCollarsWeightAny = safeKg2Lbs(barAndCollarsWeightKg);\n    platesAny = plates.map(x => ({ ...x, weightKg: safeKg2Lbs(x.weightKg) }));\n  }\n\n  // Sort a copy of the platesAny array by descending weight.\n  const sortedPlates = platesAny.slice().sort((a, b) => {\n    return b.weightKg - a.weightKg;\n  });\n\n  let sideWeightKg = (loadingAny - barAndCollarsWeightAny) / 2;\n  const loading: Array<LoadedPlate> = [];\n\n  // Run through each plate in order, applying as many of that plate as will fit.\n  for (let i = 0; i < sortedPlates.length; i++) {\n    const weightKg = sortedPlates[i].weightKg;\n    const color = sortedPlates[i].color;\n    let pairCount = sortedPlates[i].pairCount;\n    while (pairCount > 0 && weightKg <= sideWeightKg) {\n      pairCount--;\n      sideWeightKg -= weightKg;\n      loading.push({ weightAny: weightKg, isAlreadyLoaded: false, color: color });\n    }\n  }\n\n  // Report any remainder as a negative number.\n  if (sideWeightKg > 0) {\n    loading.push({ weightAny: -sideWeightKg, isAlreadyLoaded: false, color: PlateColors.PLATE_DEFAULT_RED });\n  }\n  return loading;\n};\n\n// Helper function: like Array.findIndex(), but starting from a specific index.\nconst findWeightFrom = (loading: Array<LoadedPlate>, startFrom: number, weight: number): number => {\n  for (let i = startFrom; i < loading.length; i++) {\n    if (loading[i].weightAny === weight) return i;\n  }\n  return -1;\n};\n\n// Sets the 'isAlreadyLoaded' property of each LoadedPlate relative to another loading.\n//\n// Both 'loading' and 'relativeTo' are sorted in non-ascending order of weight.\nexport const makeLoadingRelative = (loading: Array<LoadedPlate>, relativeTo: Array<LoadedPlate>): void => {\n  let finger = 0; // Increasing index into the relativeTo array.\n\n  // For each plate in the loading, look for a matching plate in relativeTo[finger..].\n  // When found, move the finger past that point.\n  for (let i = 0; i < loading.length; i++) {\n    const loadedPlate = loading[i];\n    const index = findWeightFrom(relativeTo, finger, loadedPlate.weightAny);\n    if (index >= 0) {\n      finger = index + 1;\n      loadedPlate.isAlreadyLoaded = true;\n    }\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This is the widget that gives a visual display of the weights on the bar,\n// used by the loading crew.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { displayWeight } from \"../../logic/units\";\nimport { PlateColors } from \"../../constants/plateColors\";\n\nimport { Language, Lift, LoadedPlate } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport styles from \"./BarLoad.module.scss\";\n\ninterface OwnProps {\n  loading: Array<LoadedPlate>;\n  rackInfo: string;\n  inKg: boolean;\n}\n\ninterface StateProps {\n  lift: Lift;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass BarLoad extends React.Component<Props> {\n  weightKgToStyle = (weightKg: number): string => {\n    switch (weightKg) {\n      case 50:\n        return styles.kg50;\n      case 25:\n        return styles.kg25;\n      case 20:\n        return styles.kg20;\n      case 15:\n        return styles.kg15;\n      case 10:\n        return styles.kg10;\n      case 5:\n        return styles.kg5;\n      case 2.5:\n        return styles.kg2p5;\n      case 1.25:\n        return styles.kg1p25;\n      case 1:\n        return styles.kg1;\n      case 0.75:\n        return styles.kg0p75;\n      case 0.5:\n        return styles.kg0p5;\n      case 0.25:\n        return styles.kg0p25;\n      default:\n        return styles.error;\n    }\n  };\n\n  weightLbsToStyle = (weightLbs: number): string => {\n    switch (weightLbs) {\n      case 100:\n        return styles.lbs100;\n      case 55:\n        return styles.lbs55;\n      case 45:\n        return styles.lbs45;\n      case 35:\n        return styles.lbs35;\n      case 25:\n        return styles.lbs25;\n      case 10:\n        return styles.lbs10;\n      case 5:\n        return styles.lbs5;\n      case 2.5:\n        return styles.lbs2p5;\n      case 1.25:\n        return styles.lbs1p25;\n      case 0.5:\n        return styles.lbs0p5;\n      default:\n        return styles.error;\n    }\n  };\n\n  weightAnyToText = (weightAny: number, language: Language): string => {\n    switch (weightAny) {\n      case 1.25:\n        return \"1¼\";\n      case 0.75:\n        return \"¾\";\n      case 0.5:\n        return \"½\";\n      case 0.25:\n        return \"¼\";\n      default:\n        return displayWeight(weightAny, language);\n    }\n  };\n\n  // Turns the selectPlates() array into divs.\n  renderPlates = () => {\n    const plates: Array<LoadedPlate> = this.props.loading;\n    const inKg: boolean = this.props.inKg;\n\n    const divs = [];\n    let i = 0;\n\n    // Iterate on a group of plates of the same weight at a time.\n    while (i < plates.length) {\n      const weightAny = plates[i].weightAny;\n\n      // If the weight is negative, it's an error report.\n      if (weightAny < 0) {\n        divs.push(\n          <div key={\"error\"} className={styles.error}>\n            ?{displayWeight(-1 * weightAny, this.props.language)}\n          </div>\n        );\n        break;\n      }\n\n      // Count how many times this same plate kind appears consecutively.\n      let plateCount = 1;\n      for (let j = i + 1; j < plates.length && plates[j].weightAny === weightAny; j++) {\n        plateCount++;\n      }\n\n      // If that plate is large and occurs a bunch, show a counter.\n      const showCounter = plateCount >= 3;\n\n      // Push each of the plates individually.\n      for (let j = 0; j < plateCount; j++) {\n        const plate = plates[i + j];\n        const counter = String(j + 1);\n\n        // Light backgrounds need dark text.\n        const is_light =\n          plate.color === PlateColors.PLATE_DEFAULT_WHITE || plate.color === PlateColors.PLATE_DEFAULT_YELLOW;\n\n        const style = {\n          backgroundColor: plate.color,\n          opacity: plate.isAlreadyLoaded ? 0.25 : undefined,\n          color: is_light ? \"#232323\" : \"#FFFFFF\",\n          // White plates need a border.\n          border: plate.color === PlateColors.PLATE_DEFAULT_WHITE ? \"1.5px solid #232323\" : undefined\n        };\n        divs.push(\n          <div\n            key={weightAny + \"-\" + counter}\n            className={inKg ? this.weightKgToStyle(weightAny) : this.weightLbsToStyle(weightAny)}\n            style={style}\n          >\n            <div>{this.weightAnyToText(weightAny, this.props.language)}</div>\n            {showCounter ? <div>{counter}</div> : null}\n          </div>\n        );\n      }\n\n      i += plateCount;\n    }\n\n    return divs;\n  };\n\n  render() {\n    // Only show rack info for lifts that use a rack.\n    let rackInfo = null;\n    if (this.props.lift !== \"D\") {\n      rackInfo = (\n        <div key={this.props.rackInfo} className={styles.rackInfo}>\n          <FormattedMessage\n            id=\"lifting.rack-info\"\n            defaultMessage=\"Rack {rackInfo}\"\n            values={{\n              rackInfo: this.props.rackInfo\n            }}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.bar} />\n        {this.renderPlates()}\n        <div className={styles.collar} />\n        <div className={styles.bar} />\n        {rackInfo}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    lift: state.lifting.lift,\n    language: state.language\n  };\n};\n\nexport default connect(mapStateToProps)(BarLoad);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The left card on the lifting page, showing information about the current lifter\n// and helpful information for the loading crew.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { selectPlates, makeLoadingRelative } from \"../../logic/barLoad\";\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\nimport { getString } from \"../../logic/strings\";\nimport { kg2lbs, displayWeightOnePlace } from \"../../logic/units\";\n\nimport BarLoad from \"./BarLoad\";\n\nimport styles from \"./LeftCard.module.scss\";\n\nimport { Entry, Language, LoadedPlate, Plate } from \"../../types/dataTypes\";\nimport { GlobalState, LiftingState, RegistrationState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n  nextEntryId: number | null;\n  nextAttemptOneIndexed: number | null;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  squatBarAndCollarsWeightKg: number;\n  benchBarAndCollarsWeightKg: number;\n  deadliftBarAndCollarsWeightKg: number;\n  plates: ReadonlyArray<Plate>;\n  registration: RegistrationState;\n  lifting: LiftingState;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\ninterface BarLoadOptions {\n  weightKg: number;\n  weightLbs: number;\n  rackInfo: string;\n}\n\nclass LeftCard extends React.Component<Props> {\n  getBarLoadProps = (entryId: number | null, attemptOneIndexed: number | null): BarLoadOptions => {\n    const lift = this.props.lifting.lift;\n    const fieldKg = liftToAttemptFieldName(lift);\n\n    // Defaults, in case of no lifter.\n    if (entryId === null || entryId === undefined || attemptOneIndexed === null || attemptOneIndexed === undefined) {\n      return { weightKg: 0, weightLbs: 0, rackInfo: \"\" };\n    }\n\n    const idx = this.props.registration.lookup[entryId];\n    const entry = this.props.registration.entries[idx];\n\n    const weightKg = entry[fieldKg][attemptOneIndexed - 1];\n    const weightLbs = kg2lbs(weightKg);\n\n    let rackInfo = \"\";\n    if (lift === \"S\") rackInfo = entry.squatRackInfo;\n    if (lift === \"B\") rackInfo = entry.benchRackInfo;\n\n    return { weightKg, weightLbs, rackInfo };\n  };\n\n  getBarAndCollarsWeightKg = (): number => {\n    switch (this.props.lifting.lift) {\n      case \"S\":\n        return this.props.squatBarAndCollarsWeightKg;\n      case \"B\":\n        return this.props.benchBarAndCollarsWeightKg;\n      case \"D\":\n        return this.props.deadliftBarAndCollarsWeightKg;\n      default:\n        return 0;\n    }\n  };\n\n  render() {\n    const current = this.getBarLoadProps(this.props.currentEntryId, this.props.attemptOneIndexed);\n    const next = this.getBarLoadProps(this.props.nextEntryId, this.props.nextAttemptOneIndexed);\n\n    // Show one decimal point, and omit it if possible.\n    const language = this.props.language;\n    const weightKgText = displayWeightOnePlace(current.weightKg, language);\n    const weightLbsText = displayWeightOnePlace(current.weightLbs, language);\n\n    const barAndCollarsWeightKg = this.getBarAndCollarsWeightKg();\n\n    // Calculate both loadings.\n    const currentLoading: Array<LoadedPlate> = selectPlates(\n      current.weightKg,\n      barAndCollarsWeightKg,\n      this.props.plates,\n      this.props.inKg\n    );\n    const nextLoading: Array<LoadedPlate> = selectPlates(\n      next.weightKg,\n      barAndCollarsWeightKg,\n      this.props.plates,\n      this.props.inKg\n    );\n\n    // Set the next loading relative to the current loading.\n    if (next.weightKg >= current.weightKg) {\n      makeLoadingRelative(nextLoading, currentLoading);\n    }\n\n    let nextEntryName = undefined;\n    if (typeof this.props.nextEntryId === \"number\") {\n      const idx = this.props.registration.lookup[this.props.nextEntryId];\n      nextEntryName = this.props.registration.entries[idx].name;\n    }\n\n    const nextBarLoad =\n      next.weightKg === 0 ? (\n        undefined\n      ) : (\n        <div className={styles.loadingBar}>\n          <div className={styles.nextText}>\n            <FormattedMessage\n              id=\"lifting.next-up\"\n              defaultMessage=\"NEXT UP – {lifter}\"\n              values={{\n                lifter: nextEntryName\n              }}\n            />\n          </div>\n          <div className={styles.barArea}>\n            <BarLoad\n              key={String(next.weightKg) + next.rackInfo}\n              loading={nextLoading}\n              rackInfo={next.rackInfo}\n              inKg={this.props.inKg}\n            />\n          </div>\n        </div>\n      );\n\n    let attemptTemplate = \"\";\n    if (this.props.inKg) {\n      if (this.props.showAlternateUnits) {\n        attemptTemplate = getString(\"lifting.current-weight-kg-lbs\", language);\n      } else {\n        attemptTemplate = getString(\"lifting.current-weight-kg\", language);\n      }\n    } else {\n      if (this.props.showAlternateUnits) {\n        attemptTemplate = getString(\"lifting.current-weight-lbs-kg\", language);\n      } else {\n        attemptTemplate = getString(\"lifting.current-weight-lbs\", language);\n      }\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.activeCard}>\n          <div className={styles.loadingBar}>\n            <div className={styles.attemptText}>\n              {attemptTemplate.replace(\"{kg}\", weightKgText).replace(\"{lbs}\", weightLbsText)}\n            </div>\n            <div className={styles.barArea}>\n              <BarLoad\n                key={String(current.weightKg) + current.rackInfo}\n                loading={currentLoading}\n                rackInfo={current.rackInfo}\n                inKg={this.props.inKg}\n              />\n            </div>\n          </div>\n        </div>\n        {nextBarLoad}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    squatBarAndCollarsWeightKg: state.meet.squatBarAndCollarsWeightKg,\n    benchBarAndCollarsWeightKg: state.meet.benchBarAndCollarsWeightKg,\n    deadliftBarAndCollarsWeightKg: state.meet.deadliftBarAndCollarsWeightKg,\n    plates: state.meet.plates,\n    registration: state.registration,\n    lifting: state.lifting,\n    language: state.language\n  };\n};\n\nexport default connect(mapStateToProps)(LeftCard);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// An editable component for attempt manipulation in the LiftingContent.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { liftToAttemptFieldName, liftToStatusFieldName } from \"../../logic/entry\";\nimport { enterAttempt } from \"../../actions/liftingActions\";\nimport { kg2lbs, lbs2kg, string2number, displayWeight } from \"../../logic/units\";\n\nimport { Entry, Language, Lift, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingTable.module.scss\";\nimport { FormControlTypeHack } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ninterface StateProps {\n  inKg: boolean;\n  language: Language;\n}\n\ninterface OwnProps {\n  entry: Entry;\n  lift: Lift;\n  attemptOneIndexed: number;\n  id: string;\n}\n\ninterface DispatchProps {\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n}\n\ntype Props = StateProps & OwnProps & DispatchProps;\n\ninterface InternalState {\n  lastGoodValue: string;\n  value: string;\n}\n\nclass AttemptInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    const fieldKg = liftToAttemptFieldName(this.props.lift);\n    const weightKg: number = this.props.entry[fieldKg][this.props.attemptOneIndexed - 1];\n\n    let weightStr = \"\";\n    if (weightKg !== 0) {\n      weightStr = displayWeight(this.props.inKg ? weightKg : kg2lbs(weightKg), this.props.language);\n    }\n\n    this.state = {\n      lastGoodValue: weightStr,\n      value: weightStr\n    };\n  }\n\n  validate = (): Validation => {\n    let { value } = this.state;\n    if (value === \"\") return null;\n\n    // Allow use of commas as decimal separator.\n    value = value.replace(\",\", \".\");\n\n    // Handle all errors before all warnings.\n    // Check that the input is a number.\n    const asNumber = Number(value);\n    if (isNaN(asNumber)) return \"error\";\n    if (!isFinite(asNumber)) return \"error\";\n    if (asNumber < 0) return \"error\";\n\n    // The bar weight must be monotonically increasing between attempts.\n    if (this.props.attemptOneIndexed > 1) {\n      const asKg = this.props.inKg ? asNumber : lbs2kg(asNumber);\n\n      const entry = this.props.entry;\n      const fieldKg = liftToAttemptFieldName(this.props.lift);\n      const fieldStatus = liftToStatusFieldName(this.props.lift);\n\n      const prevAttemptOneIndexed = this.props.attemptOneIndexed - 1;\n      const prevKg = entry[fieldKg][prevAttemptOneIndexed - 1];\n      const prevStatus = entry[fieldStatus][prevAttemptOneIndexed - 1];\n\n      // The previous weight cannot be greater than the current weight.\n      if (prevKg > asKg) return \"error\";\n\n      // The current weight cannot repeat a successful attempt.\n      if (prevKg === asKg && prevStatus === 1) return \"error\";\n\n      // However, they can be equal if the previous attempt was failed.\n      if (prevKg === asKg && prevStatus !== -1) return \"warning\";\n    }\n\n    if (asNumber % 2.5 !== 0) return \"warning\";\n    return null;\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.currentTarget.blur();\n    }\n  };\n\n  handleChange = (event: FormEvent<FormControlTypeHack>) => {\n    const value = event.currentTarget.value;\n    if (typeof value === \"string\") {\n      let fixups = value.replace(\" \", \"\");\n\n      // Dvorak \"e\" corresponds to QWERTY \".\", but also is used in exponential\n      // notation, which is a fairly impactful typo.\n      fixups = value.replace(\"e\", \".\");\n\n      this.setState({ value: fixups });\n    }\n  };\n\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (this.validate() === \"error\") {\n      this.setState({ value: this.state.lastGoodValue });\n      return;\n    }\n\n    const entryId = this.props.entry.id;\n    const lift = this.props.lift;\n    const attemptOneIndexed = this.props.attemptOneIndexed;\n    const asNumber = string2number(this.state.value);\n    const weightKg = this.props.inKg ? asNumber : lbs2kg(asNumber);\n\n    this.props.enterAttempt(entryId, lift, attemptOneIndexed, weightKg);\n    this.setState({ lastGoodValue: this.state.value });\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n\n    return (\n      <Form.Group style={{ marginBottom: 0 }}>\n        <Form.Control\n          id={this.props.id}\n          type=\"text\"\n          placeholder=\"\"\n          value={this.state.value}\n          onKeyDown={this.handleKeyDown}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          // Nothing for Valid == we don't want borders.\n          isInvalid={validation === \"error\"}\n          // Special rules in the _openlifter.scss override warning styles.\n          // Makes the borders look normal but shows a yellow background.\n          className={(validation === \"warning\" ? \"is-warning \" : \"\") + styles.attemptInput + \" attempt-input\"}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\n    dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AttemptInput);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of AH points, used by ParaPL.\n// Taken from https://gitlab.com/openpowerlifting/opl-data/blob/master/modules/coefficients/src/ah.rs\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\n// Calculates the AH coefficient for men.\n//\n// The full formula is defined in Excel:\n//  =ROUND($AM$1/(POWER(LOG(I13),$AM$2))*M13,2)\n//\n// Where:\n//  I13: Bodyweight\n//  M13: Lift Attempt\n//  AM1: 3.2695\n//  AM2: 1.95\nfunction ahMen(bodyweightKg: number): number {\n  const AM1: number = 3.2695;\n  const AM2: number = 1.95;\n\n  const adjusted = Math.min(Math.max(bodyweightKg, 32.0), 157.0);\n\n  return AM1 / Math.pow(Math.log10(adjusted), AM2);\n}\n\n// Calculates the AH coefficient for women.\n//\n// The full formula is defined in Excel:\n//  =ROUND($AG$1/(POWER(LOG(I13),$AG$10))*M13,2)\n//\n// Where:\n//  I13: Bodyweight\n//  M13: Lift Attempt\n//  AG1: 2.7566\n//  AG10: 1.8\nfunction ahWomen(bodyweightKg: number): number {\n  const AG1: number = 2.7566;\n  const AG10: number = 1.8;\n\n  const adjusted = Math.min(Math.max(bodyweightKg, 28.0), 112.0);\n\n  return AG1 / Math.pow(Math.log10(adjusted), AG10);\n}\n\n// Calculates AH (Haleczko) points, used in ParaPL bench-only meets.\nexport const ah = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return ahMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return ahWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Dots points.\n//\n// Dots were introduced by the German IPF Affiliate BVDK after the IPF switched to\n// IPF Points, which do not allow comparing between sexes. The BVDK hosts team\n// competitions that allow lifters of all sexes to compete on a singular team.\n//\n// Since Wilks points have been ostracized from the IPF, and IPF Points are\n// unsuitable, German lifters therefore came up with their own formula.\n//\n// The author of the Dots formula is Tim Konertz <tim.konertz@outlook.com>.\n//\n// Tim says that Dots is an acronym for \"Dynamic Objective Team Scoring,\"\n// but that they chose the acronym before figuring out the expansion.\n//\n// Implementation taken from the main OpenPowerlifting repo, also AGPLv3+.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nfunction dotsPoly(a: number, b: number, c: number, d: number, e: number, x: number): number {\n  const x2 = x * x;\n  const x3 = x2 * x;\n  const x4 = x3 * x;\n  return 500.0 / (a * x4 + b * x3 + c * x2 + d * x + e);\n}\n\nexport function dotsMen(bodyweightKg: number): number {\n  const A = -0.000001093;\n  const B = 0.0007391293;\n  const C = -0.1918759221;\n  const D = 24.0900756;\n  const E = -307.75076;\n\n  const adjusted = Math.max(Math.min(bodyweightKg, 210.0), 40.0);\n  return dotsPoly(A, B, C, D, E, adjusted);\n}\n\nexport function dotsWomen(bodyweightKg: number): number {\n  const A = -0.0000010706;\n  const B = 0.0005158568;\n  const C = -0.1126655495;\n  const D = 13.6175032;\n  const E = -57.96288;\n\n  const adjusted = Math.max(Math.min(bodyweightKg, 150.0), 40.0);\n  return dotsPoly(A, B, C, D, E, adjusted);\n}\n\nexport const dots = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  if (bodyweightKg === 0 || totalKg === 0) {\n    return 0.0;\n  }\n\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return dotsMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return dotsWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines Foster-McCulloch age coefficients.\n//\n// These are taken from the OpenPowerlifting coefficients module,\n// translated from the original Rust code.\n\nconst AGE_COEFFICIENTS = [\n  // Coefficients in the range of 0-4 are clearly nonsense.\n  0.0, // 0\n  0.0, // 1\n  0.0, // 2\n  0.0, // 3\n  0.0, // 4\n  // These coefficients don't actually exist, and are just low-balled best guesses.\n  // Kids really shouldn't be competing in this sport...\n  // Ranges from age 5 to 13.\n  1.73, // 5\n  1.67, // 6\n  1.61, // 7\n  1.55, // 8\n  1.49, // 9\n  1.43, // 10\n  1.38, // 11\n  1.33, // 12\n  1.28, // 13\n  // Foster coefficients:\n  // http://www.usapl-sd.com/Formulas/Foster.htm\n  // Ranges from age 14 to 22.\n  1.23, // 14\n  1.18, // 15\n  1.13, // 16\n  1.08, // 17\n  1.06, // 18\n  1.04, // 19\n  1.03, // 20\n  1.02, // 21\n  1.01, // 22\n  // Lifters in the range 23-40 receive no handicap.\n  1.0, // 23\n  1.0, // 24\n  1.0, // 25\n  1.0, // 26\n  1.0, // 27\n  1.0, // 28\n  1.0, // 29\n  1.0, // 30\n  1.0, // 31\n  1.0, // 32\n  1.0, // 33\n  1.0, // 34\n  1.0, // 35\n  1.0, // 36\n  1.0, // 37\n  1.0, // 38\n  1.0, // 39\n  1.0, // 40\n  // McCulloch coefficients:\n  //  http://www.usapl-sd.com/Formulas/Mcculloch.htm (contains some errors).\n  // Errors were corrected using the Masters coefficients from:\n  //  http://worldpowerliftingcongress.com/wp-content/uploads/2015/02/Glossbrenner.htm\n  // Ranges from age 41 to 80.\n  1.01, // 41\n  1.02, // 42\n  1.031, // 43\n  1.043, // 44\n  1.055, // 45\n  1.068, // 46\n  1.082, // 47\n  1.097, // 48\n  1.113, // 49\n  1.13, // 50\n  1.147, // 51\n  1.165, // 52\n  1.184, // 53\n  1.204, // 54\n  1.225, // 55\n  1.246, // 56\n  1.268, // 57\n  1.291, // 58\n  1.315, // 59\n  1.34, // 60\n  1.366, // 61\n  1.393, // 62\n  1.421, // 63\n  1.45, // 64\n  1.48, // 65\n  1.511, // 66\n  1.543, // 67\n  1.576, // 68\n  1.61, // 69\n  1.645, // 70\n  1.681, // 71\n  1.718, // 72\n  1.756, // 73\n  1.795, // 74\n  1.835, // 75\n  1.876, // 76\n  1.918, // 77\n  1.961, // 78\n  2.005, // 79\n  2.05, // 80\n  // These coefficients taken from:\n  // http://www.usapltwinportsrawopen.com/resources/USAPL+Age+Coefficients.pdf\n  // Ranges from age 81 to 90.\n  2.096, // 81\n  2.143, // 82\n  2.19, // 83\n  2.238, // 84\n  2.287, // 85\n  2.337, // 86\n  2.388, // 87\n  2.44, // 88\n  2.494, // 89\n  2.549, // 90\n  // Coefficients above 90 were just guessed at, and are unstandardized.\n  2.605, // 91\n  2.662, // 92\n  2.72, // 93\n  2.779, // 94\n  2.839, // 95\n  2.9, // 96\n  2.962, // 97\n  3.025, // 98\n  3.089, // 99\n  3.154 // 100\n];\n\n// Maps the given age into the table above.\nexport const fosterMcCulloch = (age: number): number => {\n  if (!Number.isInteger(age) || age <= 0) {\n    return 1.0;\n  }\n\n  // Greater-than is correct here: (age) is used to index into table, not (age-1).\n  if (age > AGE_COEFFICIENTS.length) {\n    return 1.0;\n  }\n\n  return AGE_COEFFICIENTS[age];\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Schwartz-Malone points.\n// Taken from https://gitlab.com/openpowerlifting/opl-data.\n\nimport { Sex } from \"../../types/dataTypes\";\n\n// Calculates the Schwartz coefficient, used for men.\n//\n// The Schwartz formula replaced the Hoffinan formula.\n// Schwartz was proposed around February 1971.\n//\n// The exact formula was found in the magazine Powerlifting USA,\n// Vol.6, No.2, August 1982, on page 61. That text is reproduced below:\n//\n// Computerized Schwartz Formula...Dr. Lyle Schwartz has often been\n// asked for a means by which the formula he has given Powerlifting can be\n// programmed into a computer or a hand held calculator with sufficient\n// memory. To obtain the Schwartz Formula (SF) for bodyweights (BW) bet-\n// ween 40 and 126 kg, the expression is: SF = 0.631926 exp(+01) -\n// 0.262349 exp(+00) (BW) + 0.511550 exp(-02) (BW)^2 - 0.519738\n// exp(-04) (BW)^3 + 0.267626 exp(-06) (BW)^4 - 0.540132 exp(-09)\n// (BW)^5 - 0.728875 exp(-13) (BW)^6. For higher bodyweights, the follow-\n// ing simple formulae are used: for BW 126-136, SF = 0.5210-0.0012\n// (BW - 125), for BW 136-146, SF = 0.5090-0011 (BW - 135), for BW\n// 146-156, SF = 0.4980-0.0010 (BW - 145), and for BW 156-166, SF =\n// 0.4880-0.0090 (BW - 156)\n//\n// Schwartz is quoted as saying about the formula's development,\n//\n// \"Since powerlifting was still a young sport in the early 1970s\n// there was uneven development in the three lifts on the part of most\n// self-trained athletes. I compensated for such unevenness by creating\n// artificial 'best' totals by adding together the current records in the\n// individual lifts. A 'best' total would have been achieved by that ideal\n// lifter who could match the best performances to date in all three\n// powerlifts. Then I fitted these data to an artificial curve and picked\n// off numbers from the curve.\"\nexport const schwartz_coefficient = (bodyweightKg: number): number => {\n  const adjusted = Math.min(Math.max(bodyweightKg, 40.0), 166.0);\n\n  if (adjusted <= 126.0) {\n    const x0 = 0.631926 * 10.0;\n    const x1 = 0.262349 * adjusted;\n    const x2 = 0.51155 * Math.pow(10.0, -2) * Math.pow(adjusted, 2);\n    const x3 = 0.519738 * Math.pow(10.0, -4) * Math.pow(adjusted, 3);\n    const x4 = 0.267626 * Math.pow(10.0, -6) * Math.pow(adjusted, 4);\n    const x5 = 0.540132 * Math.pow(10.0, -9) * Math.pow(adjusted, 5);\n    const x6 = 0.728875 * Math.pow(10.0, -13) * Math.pow(adjusted, 6);\n    return x0 - x1 + x2 - x3 + x4 - x5 - x6;\n  } else if (adjusted <= 136.0) {\n    return 0.521 - 0.0012 * (adjusted - 125.0);\n  } else if (adjusted <= 146.0) {\n    return 0.509 - 0.0011 * (adjusted - 135.0);\n  } else if (adjusted <= 156.0) {\n    return 0.498 - 0.001 * (adjusted - 145.0);\n  } else {\n    // The final formula as published for this piece does not match\n    // the coefficient tables.\n    //\n    // From the tables, the step is exactly 0.0004 per pound, which\n    // has been converted to kg below.\n    //\n    // For reference, the published original is:\n    //   0.4880 - 0.0090 * (adjusted - 156.0)\n    return 0.4879 - 0.00088185 * (adjusted - 155.0);\n  }\n};\n\n// Calculates the Malone coefficient, used for women.\nexport const malone_coefficient = (bodyweightKg: number): number => {\n  // Values calculated by fitting to coefficient tables.\n  const A = 106.011586323613;\n  const B = -1.293027130579051;\n  const C = 0.322935585328304;\n\n  // Lower bound chosen at point where Malone = max(Wilks).\n  const adjusted = Math.max(bodyweightKg, 29.24);\n\n  return A * Math.pow(adjusted, B) + C;\n};\n\n// Calculates Schwartz-Malone points.\n//\n// Schwartz-Malone is an older system that was superseded by Wilks.\nexport const schwartzmalone = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n      return schwartz_coefficient(bodyweightKg) * totalKg;\n    case \"F\":\n      return malone_coefficient(bodyweightKg) * totalKg;\n    default:\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Wilks points.\n// Taken from https://gitlab.com/openpowerlifting/ipf-points-calculator.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nfunction wilksPoly(a: number, b: number, c: number, d: number, e: number, f: number, x: number): number {\n  const x2 = x * x;\n  const x3 = x2 * x;\n  const x4 = x3 * x;\n  const x5 = x4 * x;\n  return 500.0 / (a + b * x + c * x2 + d * x3 + e * x4 + f * x5);\n}\n\nexport function wilksMen(bodyweightKg: number): number {\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 201.9);\n  return wilksPoly(-216.0475144, 16.2606339, -0.002388645, -0.00113732, 7.01863e-6, -1.291e-8, normalized);\n}\n\nexport function wilksWomen(bodyweightKg: number): number {\n  const normalized = Math.min(Math.max(bodyweightKg, 26.51), 154.53);\n  return wilksPoly(\n    594.31747775582,\n    -27.23842536447,\n    0.82112226871,\n    -0.00930733913,\n    0.00004731582,\n    -0.00000009054,\n    normalized\n  );\n}\n\nexport const wilks = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return wilksMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return wilksWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Glossbrenner points.\n// Taken from https://gitlab.com/openpowerlifting/opl-data.\n\nimport { schwartz_coefficient, malone_coefficient } from \"./schwartzmalone\";\nimport { wilksMen, wilksWomen } from \"./wilks\";\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nconst glossbrenner_coefficient_men = (bodyweightKg: number): number => {\n  // Glossbrenner is defined piecewise.\n  if (bodyweightKg < 153.05) {\n    return (schwartz_coefficient(bodyweightKg) + wilksMen(bodyweightKg)) / 2.0;\n  } else {\n    // Linear coefficients found by fitting to a table.\n    const A = -0.000821668402557;\n    const B = 0.676940740094416;\n    return (schwartz_coefficient(bodyweightKg) + A * bodyweightKg + B) / 2.0;\n  }\n};\n\nconst glossbrenner_coefficient_women = (bodyweightKg: number): number => {\n  // Glossbrenner is defined piecewise.\n  if (bodyweightKg < 106.3) {\n    return (malone_coefficient(bodyweightKg) + wilksWomen(bodyweightKg)) / 2.0;\n  } else {\n    // Linear coefficients found by fitting to a table.\n    const A = -0.000313738002024;\n    const B = 0.852664892884785;\n    return (malone_coefficient(bodyweightKg) + A * bodyweightKg + B) / 2.0;\n  }\n};\n\n// Calculates Glossbrenner points.\n//\n// Glossbrenner is the average of two older systems, Schwartz-Malone and Wilks,\n// with a piecewise linear section.\n//\n// This points system is most often used by GPC affiliates.\nexport const glossbrenner = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return glossbrenner_coefficient_men(bodyweightKg) * totalKg;\n    case \"F\":\n      return glossbrenner_coefficient_women(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of IPF Points.\n// Taken from https://gitlab.com/openpowerlifting/ipf-points-calculator.\n\nimport { Sex, Event, Equipment } from \"../../types/dataTypes\";\n\ntype Coefficients = Array<number>;\ntype ByEvent = {\n  SBD: Coefficients;\n  S: Coefficients;\n  B: Coefficients;\n  D: Coefficients;\n};\ntype ByEquipment = {\n  Sleeves: ByEvent;\n  \"Single-ply\": ByEvent;\n};\ntype BySex = {\n  M: ByEquipment;\n  F: ByEquipment;\n};\n\nconst PARAMETERS: BySex = {\n  M: {\n    Sleeves: {\n      SBD: [310.67, 857.785, 53.216, 147.0835],\n      S: [123.1, 363.085, 25.1667, 75.4311],\n      B: [86.4745, 259.155, 17.57845, 53.122],\n      D: [103.5355, 244.765, 15.3714, 31.5022]\n    },\n    \"Single-ply\": {\n      SBD: [387.265, 1121.28, 80.6324, 222.4896],\n      S: [150.485, 446.445, 36.5155, 103.7061],\n      B: [133.94, 441.465, 35.3938, 113.0057],\n      D: [110.135, 263.66, 14.996, 23.011]\n    }\n  },\n  F: {\n    Sleeves: {\n      SBD: [125.1435, 228.03, 34.5246, 86.8301],\n      S: [50.479, 105.632, 19.1846, 56.2215],\n      B: [25.0485, 43.848, 6.7172, 13.952],\n      D: [47.136, 67.349, 9.1555, 13.67]\n    },\n    \"Single-ply\": {\n      SBD: [176.58, 373.315, 48.4534, 110.0103],\n      S: [74.6855, 171.585, 21.9475, 52.2948],\n      B: [49.106, 124.209, 23.199, 67.4926],\n      D: [51.002, 69.8265, 8.5802, 5.7258]\n    }\n  }\n};\n\nexport const ipfpoints = (\n  totalKg: number,\n  bodyweightKg: number,\n  sex: Sex,\n  equipment: Equipment,\n  event: Event\n): number => {\n  if (totalKg === 0) return 0;\n  if (bodyweightKg < 40) return 0;\n\n  // Restrict inputs to only the defined subset.\n  let normalizedEquipment = equipment;\n  if (equipment === \"Bare\" || equipment === \"Wraps\") {\n    normalizedEquipment = \"Sleeves\";\n  } else if (equipment === \"Multi-ply\") {\n    normalizedEquipment = \"Single-ply\";\n  }\n  if (normalizedEquipment !== \"Sleeves\" && normalizedEquipment !== \"Single-ply\") {\n    return 0;\n  }\n\n  // Consider Mx athletes as M, since that's the harsher formula.\n  let normalizedSex = sex;\n  if (sex === \"Mx\") normalizedSex = \"M\";\n\n  if (event !== \"SBD\" && event !== \"S\" && event !== \"B\" && event !== \"D\") return 0;\n  if (normalizedSex !== \"M\" && normalizedSex !== \"F\") return 0;\n\n  const params = PARAMETERS[normalizedSex][normalizedEquipment][event];\n  const bw_log = Math.log(bodyweightKg);\n\n  const mean = params[0] * bw_log - params[1];\n  const dev = params[2] * bw_log - params[3];\n\n  const points = 500 + (100 * (totalKg - mean)) / dev;\n  if (isNaN(points) || points < 0) {\n    return 0;\n  }\n  return points;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Reshel points.\n//\n// Reshel is published as a table, with rounded x-values and rounded y-values.\n// No formula is given. We attempted to fit a function to the curve.\n//\n// The formula here is accurate to about 0.01, and is most inaccurate between\n// 70-80kg for men. Elsewhere it fits very closely.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nexport function reshelMen(bodyweightKg: number): number {\n  // Coefficients determined by GNUPlot. They need improvement.\n  const a: number = 23740.8329088123;\n  const b: number = -9.75618720662844;\n  const c: number = 0.787990994925928;\n  const d: number = -2.68445158813578;\n\n  const normalized = Math.min(Math.max(bodyweightKg, 50.0), 174.75);\n  return a * Math.pow(normalized + b, d) + c;\n}\n\nexport function reshelWomen(bodyweightKg: number): number {\n  // Coefficients determined by GNUPlot. They need improvement.\n  const a: number = 239.894659799145;\n  const b: number = -20.5105859285582;\n  const c: number = 1.16052601684125;\n  const d: number = -1.61417872668708;\n\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 118.75);\n  return a * Math.pow(normalized + b, d) + c;\n}\n\nexport const reshel = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return reshelMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return reshelWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Wraps all the points functions into a common interface.\n\nimport { ah } from \"./ah\";\nimport { bodyweight_multiple } from \"./bodyweight-multiple\";\nimport { dots } from \"./dots\";\nimport { fosterMcCulloch } from \"./foster-mcculloch\";\nimport { glossbrenner } from \"./glossbrenner\";\nimport { ipfpoints } from \"./ipf\";\nimport { nasapoints } from \"./nasa\";\nimport { reshel } from \"./reshel\";\nimport { schwartzmalone } from \"./schwartzmalone\";\nimport { wilks } from \"./wilks\";\n\nimport { getAge } from \"../entry\";\nimport { kg2lbs } from \"../units\";\n\nimport { AgeCoefficients, Entry, Event, Equipment, Formula, Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nexport const getPoints = (formula: Formula, entry: Entry, event: Event, totalKg: number, inKg: boolean): number => {\n  // Some of the data are singular properties of the entry.\n  const sex: Sex = entry.sex;\n  const equipment: Equipment = entry.equipment;\n  const bodyweightKg: number = entry.bodyweightKg;\n\n  switch (formula) {\n    case \"AH\":\n      return ah(sex, bodyweightKg, totalKg);\n    case \"Bodyweight Multiple\":\n      return bodyweight_multiple(bodyweightKg, totalKg);\n    case \"Dots\":\n      return dots(sex, bodyweightKg, totalKg);\n    case \"Glossbrenner\":\n      return glossbrenner(sex, bodyweightKg, totalKg);\n    case \"IPF Points\":\n      return ipfpoints(totalKg, bodyweightKg, sex, equipment, event);\n    case \"NASA Points\":\n      return nasapoints(bodyweightKg, totalKg);\n    case \"Reshel\":\n      return reshel(sex, bodyweightKg, totalKg);\n    case \"Schwartz/Malone\":\n      return schwartzmalone(sex, bodyweightKg, totalKg);\n    case \"Total\":\n      return inKg ? totalKg : kg2lbs(totalKg);\n    case \"Wilks\":\n      return wilks(sex, bodyweightKg, totalKg);\n    default:\n      checkExhausted(formula);\n      return 0;\n  }\n};\n\nexport const getAgeAdjustedPoints = (\n  ageCoefficients: AgeCoefficients,\n  meetDate: string,\n  formula: Formula,\n  entry: Entry,\n  event: Event,\n  totalKg: number,\n  inKg: boolean\n): number => {\n  const points = getPoints(formula, entry, event, totalKg, inKg);\n\n  switch (ageCoefficients) {\n    case \"None\":\n      return points;\n    case \"FosterMcCulloch\":\n      return fosterMcCulloch(getAge(entry, meetDate)) * points;\n    default:\n      checkExhausted(ageCoefficients);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of points as a multiple of bodyweight.\n//\n// Although this logic is very simple, there is some finesse to avoid\n// division by zero that is easier to write once and import than repeat.\n\nexport const bodyweight_multiple = (bodyweightKg: number, totalKg: number): number => {\n  if (bodyweightKg <= 0 || totalKg <= 0) {\n    return 0;\n  }\n  return totalKg / bodyweightKg;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of NASA Points.\n// They are defined in a coefficient table: http://nasa-sports.com/coefficient-system/\n// It turns out that they are a simple line.\n\nexport const nasapoints = (bodyweightKg: number, totalKg: number): number => {\n  // The function was determined using fitting in GNUPlot:\n  //\n  // Final set of parameters            Asymptotic Standard Error\n  // =======================            ==========================\n  // m               = 0.00620912       +/- 1.265e-06    (0.02037%)\n  // b               = 0.565697         +/- 0.0001322    (0.02337%)\n  const m = 0.00620912;\n  const b = 0.565697;\n\n  if (bodyweightKg < 30) return 0; // Arbitrary lower bound.\n  return (totalKg / bodyweightKg) * (m * bodyweightKg + b);\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { liftToAttemptFieldName, liftToStatusFieldName, MAX_ATTEMPTS } from \"./entry\";\n\nimport { LiftingOrder, Entry, FieldKg, FieldStatus } from \"../types/dataTypes\";\nimport { LiftingState } from \"../types/stateTypes\";\n\n// Helper function: for a given entry, see what attempt number would be next.\n//\n// Returns a number >= 1 if the entry is still lifting, representing the next attempt.\n// Returns zero if the entry does not have any pending attempts.\nconst getNextAttemptNumberForEntry = (entry: Entry, fieldKg: FieldKg, fieldStatus: FieldStatus): number => {\n  const weightsKg = entry[fieldKg];\n  const statuses = entry[fieldStatus];\n\n  // Lifters only set the next attempt, so loop backwards,\n  // looking for the first attempt that meets the criteria.\n  for (let i = MAX_ATTEMPTS - 1; i >= 0; i--) {\n    if (weightsKg[i] !== 0 && statuses[i] === 0) {\n      return i + 1;\n    }\n  }\n  return 0;\n};\n\n// Helper function: for a given entry, see the maximum attempt number made.\n//\n// Returns a number >= 1 representing the highest-numbered attempt attempted.\n// Returns zero if the entry has not attempted any attempts.\nconst getMaxAttemptNumberForEntry = (entry: Entry, fieldKg: FieldKg, fieldStatus: FieldStatus): number => {\n  const weightsKg = entry[fieldKg];\n  const statuses = entry[fieldStatus];\n\n  for (let i = MAX_ATTEMPTS - 1; i >= 0; i--) {\n    if (weightsKg[i] !== 0 && statuses[i] !== 0) {\n      return i + 1;\n    }\n  }\n  return 0;\n};\n\n// Determine the current active attempt for the current lift.\n//\n// An attempt is active if either:\n// 1. It has been overridden by the Attempt selector.\n// 2. There exists an attempt of that number with no success/failure value,\n//    and there is no lower attempt number with that property.\n//\n// Returns a number in the (inclusive) range of [1, MAX_ATTEMPTS].\n// If there is not enough data to make a decision, returns 1.\nconst getActiveAttemptNumber = (entriesInFlight: Array<Entry>, lifting: LiftingState): number => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n  const fieldStatus = liftToStatusFieldName(lift);\n\n  // Allow manual override.\n  if (lifting.overrideAttempt !== null) {\n    return Number(lifting.overrideAttempt);\n  }\n\n  // Iterate in reverse, looking for the earliest attempt that hasn't been lifted.\n  let earliestAttemptOneIndexed = MAX_ATTEMPTS + 1;\n  for (let i = 0; i < entriesInFlight.length; i++) {\n    const entry = entriesInFlight[i];\n    const next = getNextAttemptNumberForEntry(entry, fieldKg, fieldStatus);\n    // Zero return value means \"no pending attempts for this entry.\"\n    if (next > 0 && next < earliestAttemptOneIndexed) {\n      earliestAttemptOneIndexed = next;\n    }\n  }\n\n  // The lowest pending attempt number is the current one.\n  if (earliestAttemptOneIndexed < MAX_ATTEMPTS + 1) {\n    return earliestAttemptOneIndexed;\n  }\n\n  // In the case of no pending lifts, try to helpfully infer the next attempt.\n  let latestAttemptOneIndexed = 0;\n  for (let i = 0; i < entriesInFlight.length; i++) {\n    const entry = entriesInFlight[i];\n    const max = getMaxAttemptNumberForEntry(entry, fieldKg, fieldStatus);\n    // Zero return value means \"no attempted attempts for this entry.\"\n    if (max > latestAttemptOneIndexed) {\n      latestAttemptOneIndexed = max;\n    }\n  }\n\n  // If >0, we know there are no pending attempts, and we know that everyone\n  // has taken all of the Nth attempt. So we should display the (N+1)th attempt.\n  if (latestAttemptOneIndexed > 0) {\n    // Don't auto-advance from 3rd to 4th attempts.\n    // However, if we're already on 4th attempts, stay there.\n    if (latestAttemptOneIndexed + 1 >= 4) {\n      return latestAttemptOneIndexed;\n    }\n\n    // Roll-over to the next attempt (with no pending entries).\n    return latestAttemptOneIndexed + 1;\n  }\n\n  // Otherwise, just default to the first attempt.\n  return 1;\n};\n\n// Helper function for recursive comparison.\nexport const compareEntriesByAttempt = (a: Entry, b: Entry, fieldKg: FieldKg, attemptOneIndexed: number): number => {\n  const aKg = a[fieldKg][attemptOneIndexed - 1];\n  const bKg = b[fieldKg][attemptOneIndexed - 1];\n\n  // If non-equal, sort by weight, ascending.\n  if (aKg !== bKg) return aKg - bKg;\n\n  // If the federation uses lot numbers, break ties using lot.\n  if (a.lot !== 0 && b.lot !== 0) return a.lot - b.lot;\n\n  // If this is not the first attempt, preserve the order from the last attempt.\n  if (attemptOneIndexed > 1) {\n    return compareEntriesByAttempt(a, b, fieldKg, attemptOneIndexed - 1);\n  }\n\n  // Try to break ties using bodyweight, with the lighter lifter going first.\n  if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\n\n  // If we've run out of properties by which to compare them, resort to Name.\n  if (a.name < b.name) return -1;\n  if (a.name > b.name) return 1;\n  return 0;\n};\n\n// Helper function: performs an in-place sort on an array of entries.\n// Assumes that zero entries are not mixed in with non-zero entries.\nexport const orderEntriesByAttempt = (\n  entries: Array<Entry>,\n  fieldKg: FieldKg,\n  attemptOneIndexed: number\n): Array<Entry> => {\n  return entries.sort((a, b) => {\n    return compareEntriesByAttempt(a, b, fieldKg, attemptOneIndexed);\n  });\n};\n\n// Returns a copy of the entries in lifting order for the current attempt.\nconst orderEntriesForAttempt = (\n  entriesInFlight: Array<Entry>,\n  lifting: LiftingState,\n  attemptOneIndexed: number\n): Array<Entry> => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n\n  const attemptZeroIndexed = attemptOneIndexed - 1;\n  const existsNextAttempt = attemptOneIndexed + 1 <= MAX_ATTEMPTS;\n  const existsPrevAttempt = attemptOneIndexed > 1;\n\n  // Divide the entries into disjoint groups:\n  const byNextAttempt: Array<Entry> = []; // Entries sorted by their next attempt.\n  const byThisAttempt: Array<Entry> = []; // Entries sorted by this attempt.\n  const byPrevAttempt: Array<Entry> = []; // Entries sorted by previous attempt.\n  const notLifting: Array<Entry> = []; // Entries that don't have this or next attempts in.\n\n  for (let i = 0; i < entriesInFlight.length; i++) {\n    const entry = entriesInFlight[i];\n\n    if (existsNextAttempt && entry[fieldKg][attemptZeroIndexed + 1] !== 0) {\n      byNextAttempt.push(entry);\n    } else if (entry[fieldKg][attemptZeroIndexed] !== 0) {\n      byThisAttempt.push(entry);\n    } else if (existsPrevAttempt && entry[fieldKg][attemptZeroIndexed - 1] !== 0) {\n      byPrevAttempt.push(entry);\n    } else {\n      notLifting.push(entry);\n    }\n  }\n\n  // Perform sorting on the relative groups.\n  if (existsNextAttempt) {\n    orderEntriesByAttempt(byNextAttempt, fieldKg, attemptOneIndexed + 1);\n  }\n  orderEntriesByAttempt(byThisAttempt, fieldKg, attemptOneIndexed);\n  if (existsPrevAttempt) {\n    orderEntriesByAttempt(byPrevAttempt, fieldKg, attemptOneIndexed - 1);\n  }\n  orderEntriesByAttempt(notLifting, fieldKg, attemptOneIndexed);\n\n  // Arrange these three groups consecutively.\n  return Array.prototype.concat(byNextAttempt, byThisAttempt, byPrevAttempt, notLifting);\n};\n\n// Returns either the current entry ID or null if no active entry.\n//\n// In the ordered entries, the earliest lifter that hasn't gone yet is going.\n// This can be manually overridden by UI controls.\nconst getCurrentEntryId = (\n  lifting: LiftingState,\n  orderedEntries: Array<Entry>,\n  attemptOneIndexed: number\n): number | null => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n  const fieldStatus = liftToStatusFieldName(lift);\n\n  if (lifting.overrideEntryId !== null) {\n    return Number(lifting.overrideEntryId);\n  }\n\n  for (let i = 0; i < orderedEntries.length; i++) {\n    const entry = orderedEntries[i];\n    const idx = attemptOneIndexed - 1;\n    if (entry[fieldKg][idx] !== 0 && entry[fieldStatus][idx] === 0) {\n      return entry.id;\n    }\n  }\n  return null;\n};\n\ntype NextEntryInfo = {\n  entryId: number;\n  attemptOneIndexed: number;\n};\n\n// Returns either an Object of {entryId, attemptOneIndexed}, or null.\nconst getNextEntryInfo = (\n  lifting: LiftingState,\n  currentEntryId: number | null,\n  orderedEntries: Array<Entry>,\n  attemptOneIndexed: number\n): NextEntryInfo | null => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n  const fieldStatus = liftToStatusFieldName(lift);\n\n  if (currentEntryId === null) {\n    return null;\n  }\n\n  // Find the index of the currentEntryId in the orderedEntries.\n  const currentEntryIndex = orderedEntries.findIndex(e => e.id === currentEntryId);\n  if (currentEntryIndex === -1) {\n    return null;\n  }\n\n  // Walk forward, looking for additional valid attempts.\n  for (let i = currentEntryIndex + 1; i < orderedEntries.length; i++) {\n    const hasAttempt = orderedEntries[i][fieldKg][attemptOneIndexed - 1] !== 0;\n    const notTaken = orderedEntries[i][fieldStatus][attemptOneIndexed - 1] === 0;\n\n    if (hasAttempt && notTaken) {\n      return {\n        entryId: orderedEntries[i].id,\n        attemptOneIndexed: attemptOneIndexed\n      };\n    }\n  }\n\n  // If none were found walking forward, check the next attempt by wrapping around.\n  if (attemptOneIndexed + 1 > MAX_ATTEMPTS) {\n    return null;\n  }\n  const nextAttemptOneIndexed = attemptOneIndexed + 1;\n\n  for (let i = 0; i < currentEntryIndex; i++) {\n    const hasAttempt = orderedEntries[i][fieldKg][nextAttemptOneIndexed - 1] !== 0;\n    const notTaken = orderedEntries[i][fieldStatus][nextAttemptOneIndexed - 1] === 0;\n\n    if (hasAttempt && notTaken) {\n      return {\n        entryId: orderedEntries[i].id,\n        attemptOneIndexed: nextAttemptOneIndexed\n      };\n    }\n  }\n\n  return null;\n};\n\n// Main application logic. Resolves the LiftingState to a LiftingOrder.\nexport const getLiftingOrder = (entriesInFlight: Array<Entry>, lifting: LiftingState): LiftingOrder => {\n  const attemptOneIndexed = getActiveAttemptNumber(entriesInFlight, lifting);\n  const orderedEntries = orderEntriesForAttempt(entriesInFlight, lifting, attemptOneIndexed);\n  const currentEntryId = getCurrentEntryId(lifting, orderedEntries, attemptOneIndexed);\n  const nextEntryInfo = getNextEntryInfo(lifting, currentEntryId, orderedEntries, attemptOneIndexed);\n\n  return {\n    orderedEntries: orderedEntries,\n    attemptOneIndexed: attemptOneIndexed,\n    currentEntryId: currentEntryId,\n    nextAttemptOneIndexed: nextEntryInfo ? nextEntryInfo.attemptOneIndexed : null,\n    nextEntryId: nextEntryInfo ? nextEntryInfo.entryId : null\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the logic for calculating the division Place of a lifter, shared between\n// the Lifting page, the Rankings page, and data export code.\n//\n// The algorithm used is particularly bad -- the foremost goal was to make an interface\n// that allowed for maximum code reuse between the Rankings and Lifting pages,\n// which have slightly different needs.\n\nimport { getProjectedEventTotalKg, getFinalEventTotalKg, liftToAttemptFieldName } from \"./entry\";\nimport { compareEntriesByAttempt } from \"./liftingOrder\";\nimport { getWeightClassStr } from \"../reducers/meetReducer\";\n\nimport { Sex, Event, Equipment, Entry, Lift } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nexport type Place = number | \"DQ\";\n\n// Determines how the total is calculated.\ntype ResultsType = \"Projected\" | \"Final\";\n\n// Specifies a competition category under which entries can be ranked together.\nexport type Category = {\n  sex: Sex;\n  event: Event;\n  equipment: Equipment;\n  division: string;\n  weightClassStr: string;\n};\n\n// Wraps up all the entries in a category with the category's descriptors.\nexport type CategoryResults = {\n  category: Category;\n  orderedEntries: Array<Entry>;\n};\n\n// Generates a unique String out of a Category, for purposes of using as a Map key.\nconst categoryToKey = (category: Category): string => {\n  return JSON.stringify(category);\n};\nconst keyToCategory = (key: string): Category => {\n  return JSON.parse(key);\n};\n\n// Helper function for sortByPlaceInCategory().\n//\n// Determines the last successful Lift (for example, \"B\") for the Entry in\n// the given Event category.\n//\n// Lifters have already been checked to have a non-zero total.\nconst getLastSuccessfulLift = (event: Event, entry: Entry): Lift => {\n  // Iterate backwards over the Event types.\n  for (let i = event.length - 1; i >= 0; --i) {\n    const lift = event[i];\n    switch (lift) {\n      case \"S\":\n        if (entry.squatStatus.includes(1)) {\n          return \"S\";\n        }\n        break;\n      case \"B\":\n        if (entry.benchStatus.includes(1)) {\n          return \"B\";\n        }\n        break;\n      case \"D\":\n        if (entry.deadliftStatus.includes(1)) {\n          return \"D\";\n        }\n        break;\n      default:\n        return \"S\";\n    }\n  }\n  return \"S\";\n};\n\n// Helper function for sortByPlaceInCategory().\n//\n// Determines the last successful attempt (only counting the first three) for\n// the Entry for the given Lift.\n//\n// The caller already knows that a successful attempt was made, since it\n// passed getLastSuccessfulLift().\nconst getLastSuccessfulAttempt = (lift: Lift, entry: Entry): number => {\n  let statuses = null;\n  switch (lift) {\n    case \"S\":\n      statuses = entry.squatStatus;\n      break;\n    case \"B\":\n      statuses = entry.benchStatus;\n      break;\n    case \"D\":\n      statuses = entry.deadliftStatus;\n      break;\n    default:\n      checkExhausted(lift);\n      return 0;\n  }\n\n  // Consider only the first three attempts, in reverse.\n  for (let i = 2; i >= 0; --i) {\n    if (statuses[i] === 1) return i;\n  }\n  return 0;\n};\n\n// Returns a copy of the entries array sorted by Place.\n// All entries are assumed to be part of the same category.\nconst sortByPlaceInCategory = (entries: ReadonlyArray<Entry>, category: Category, type: ResultsType): Array<Entry> => {\n  const event = category.event;\n\n  // Clone the entries array to avoid modifying the original.\n  const clonedEntries = entries.slice();\n\n  // Sort in the given category, first place having the lowest index.\n  clonedEntries.sort((a, b) => {\n    let aTotal = 0;\n\n    // First sort by Total, higher sorting lower.\n    if (type === \"Projected\") {\n      aTotal = getProjectedEventTotalKg(a, event);\n      const bTotal = getProjectedEventTotalKg(b, event);\n      if (aTotal !== bTotal) return bTotal - aTotal;\n    } else if (type === \"Final\") {\n      aTotal = getFinalEventTotalKg(a, event);\n      const bTotal = getFinalEventTotalKg(b, event);\n      if (aTotal !== bTotal) return bTotal - aTotal;\n    }\n\n    // If totals are equal, sort by Bodyweight, lower sorting lower.\n    if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\n\n    // If totals are zero, neither lifter took a successful attempt,\n    // so just sort arbitrarily by name.\n    if (aTotal === 0) {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n      return 0;\n    }\n\n    // If totals are equal and bodyweights are equal, the winner is the\n    // lifter who reached the total first. Because our implementation is\n    // stateless and doesn't remember lifting order, this gets complicated.\n    //\n    // For purposes of simplicity, this is broken into cases.\n    //\n    // At this point, the logic requires that each lifter have taken at least\n    // one successful attempt -- this is validated by checking the total\n    // against zero above.\n    //\n    // Case 1: If the lifters' last successful lifts were for different Lifts,\n    //         then the lifter with the earlier lift in SBD order wins.\n    const aLastSuccessfulLift = getLastSuccessfulLift(event, a);\n    const bLastSuccessfulLift = getLastSuccessfulLift(event, b);\n    const aLastSuccessfulLiftIndex = [\"S\", \"B\", \"D\"].indexOf(aLastSuccessfulLift);\n    const bLastSuccessfulLiftIndex = [\"S\", \"B\", \"D\"].indexOf(bLastSuccessfulLift);\n    if (aLastSuccessfulLiftIndex !== bLastSuccessfulLiftIndex) {\n      return aLastSuccessfulLiftIndex - bLastSuccessfulLiftIndex;\n    }\n\n    // Case 2: If the lifters reached the total on the same lift but on different\n    //         attempts, the lifter with the earlier attempt wins.\n    const lift: Lift = aLastSuccessfulLift;\n    const aLastSuccessfulAttempt: number = getLastSuccessfulAttempt(lift, a);\n    const bLastSuccessfulAttempt: number = getLastSuccessfulAttempt(lift, b);\n    if (aLastSuccessfulAttempt !== bLastSuccessfulAttempt) {\n      return aLastSuccessfulAttempt - bLastSuccessfulAttempt;\n    }\n\n    // Case 3: If the lifters reached the total on the same lift and on the same\n    //         attempt, defer to the lifting order to determine who lifted first.\n    const attempt = aLastSuccessfulAttempt;\n    return compareEntriesByAttempt(a, b, liftToAttemptFieldName(lift), attempt);\n  });\n\n  return clonedEntries;\n};\n\n// Determines the sort order by Event.\nconst getEventSortOrder = (ev: Event): number => {\n  return [\"SBD\", \"BD\", \"SB\", \"SD\", \"S\", \"B\", \"D\"].indexOf(ev);\n};\n\n// Determines the sort order by Equipment.\nconst getEquipmentSortOrder = (eq: Equipment): number => {\n  return [\"Bare\", \"Sleeves\", \"Wraps\", \"Single-ply\", \"Multi-ply\"].indexOf(eq);\n};\n\n// Determines the sort order by Sex.\nconst getSexSortOrder = (sex: Sex): number => {\n  switch (sex) {\n    case \"F\":\n      return 0;\n    case \"M\":\n      return 1;\n    case \"Mx\":\n      return 2;\n    default:\n      checkExhausted(sex);\n      return 3;\n  }\n};\n\n// Determines the sort (and therefore presentation) order for the Category Results.\n// The input array is sorted in-place; nothing is returned.\nexport const sortCategoryResults = (results: Array<CategoryResults>): void => {\n  results.sort((a, b) => {\n    const catA = a.category;\n    const catB = b.category;\n\n    // First, sort by Sex.\n    const aSex = getSexSortOrder(catA.sex);\n    const bSex = getSexSortOrder(catB.sex);\n    if (aSex !== bSex) return aSex - bSex;\n\n    // Next, sort by Event.\n    const aEvent = getEventSortOrder(catA.event);\n    const bEvent = getEventSortOrder(catB.event);\n    if (aEvent !== bEvent) return aEvent - bEvent;\n\n    // Next, sort by Equipment.\n    const aEquipment = getEquipmentSortOrder(catA.equipment);\n    const bEquipment = getEquipmentSortOrder(catB.equipment);\n    if (aEquipment !== bEquipment) return aEquipment - bEquipment;\n\n    // Next, sort by Division as string.\n    if (catA.division < catB.division) return -1;\n    if (catA.division > catB.division) return 1;\n\n    // Finally, sort by WeightClass.\n    // Any SHW class should be placed at the end.\n    const aIsSHW: boolean = catA.weightClassStr.includes(\"+\");\n    const bIsSHW: boolean = catB.weightClassStr.includes(\"+\");\n    if (aIsSHW && !bIsSHW) return 1;\n    if (!aIsSHW && bIsSHW) return -1;\n    // parseInt() ignores the \"+\" at the end of SHW class strings.\n    const aWeightClass = catA.weightClassStr === \"\" ? 0 : parseInt(catA.weightClassStr);\n    const bWeightClass = catB.weightClassStr === \"\" ? 0 : parseInt(catB.weightClassStr);\n    return aWeightClass - bWeightClass;\n  });\n};\n\nconst mapSexToClasses = (\n  sex: Sex,\n  men: ReadonlyArray<number>,\n  women: ReadonlyArray<number>,\n  mx: ReadonlyArray<number>\n): ReadonlyArray<number> => {\n  switch (sex) {\n    case \"M\":\n      return men;\n    case \"F\":\n      return women;\n    case \"Mx\":\n      return mx;\n    default:\n      checkExhausted(sex);\n      return men;\n  }\n};\n\n// Generates objects representing every present category of competition,\n// with each entry given a Place designation.\n//\n// The returned objects are sorted in intended order of presentation.\nconst getAllResults = (\n  entries: ReadonlyArray<Entry>,\n  weightClassesKgMen: ReadonlyArray<number>,\n  weightClassesKgWomen: ReadonlyArray<number>,\n  weightClassesKgMx: ReadonlyArray<number>,\n  combineSleevesAndWraps: boolean,\n  type: ResultsType\n): Array<CategoryResults> => {\n  // Generate a map from category to the entries within that category.\n  // The map is populated by iterating over each entry and having the entry\n  // append itself to per-category lists.\n  const categoryMap = new Map();\n  for (let i = 0; i < entries.length; i++) {\n    const e = entries[i];\n\n    // Remember consistent properties.\n    const sex = e.sex;\n    const classesForSex = mapSexToClasses(sex, weightClassesKgMen, weightClassesKgWomen, weightClassesKgMx);\n    const weightClassStr = getWeightClassStr(classesForSex, e.bodyweightKg);\n\n    // If the results combine Sleeves and Wraps, promote Sleeves to Wraps.\n    let equipment = e.equipment;\n    if (combineSleevesAndWraps && equipment === \"Sleeves\") {\n      equipment = \"Wraps\";\n    }\n\n    // Iterate over every combination of division and event, adding to the map.\n    for (let dividx = 0; dividx < e.divisions.length; dividx++) {\n      const division = e.divisions[dividx];\n\n      for (let evidx = 0; evidx < e.events.length; evidx++) {\n        const event = e.events[evidx];\n        const category = { sex, event, equipment, division, weightClassStr };\n        const key = categoryToKey(category);\n\n        const catEntries = categoryMap.get(key);\n        catEntries === undefined ? categoryMap.set(key, [e]) : catEntries.push(e);\n      }\n    }\n  }\n\n  // Iterate over each category and assign a Place to the entries therein.\n  const results = [];\n  for (const [key, catEntries] of categoryMap) {\n    const category = keyToCategory(key);\n    const orderedEntries = sortByPlaceInCategory(catEntries, category, type);\n    results.push({ category, orderedEntries });\n  }\n\n  sortCategoryResults(results);\n  return results;\n};\n\nexport const getProjectedResults = (\n  entries: ReadonlyArray<Entry>,\n  weightClassesKgMen: ReadonlyArray<number>,\n  weightClassesKgWomen: ReadonlyArray<number>,\n  weightClassesKgMx: ReadonlyArray<number>,\n  combineSleevesAndWraps: boolean\n): Array<CategoryResults> => {\n  return getAllResults(\n    entries,\n    weightClassesKgMen,\n    weightClassesKgWomen,\n    weightClassesKgMx,\n    combineSleevesAndWraps,\n    \"Projected\"\n  );\n};\n\nexport const getFinalResults = (\n  entries: ReadonlyArray<Entry>,\n  weightClassesKgMen: ReadonlyArray<number>,\n  weightClassesKgWomen: ReadonlyArray<number>,\n  weightClassesKgMx: ReadonlyArray<number>,\n  combineSleevesAndWraps: boolean\n): Array<CategoryResults> => {\n  return getAllResults(\n    entries,\n    weightClassesKgMen,\n    weightClassesKgWomen,\n    weightClassesKgMx,\n    combineSleevesAndWraps,\n    \"Final\"\n  );\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The main component of the Lifting page, contained by the LiftingView.\n\nimport React, { CSSProperties } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport AttemptInput from \"./AttemptInput\";\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { getWeightClassStr, getWeightClassLbsStr } from \"../../reducers/meetReducer\";\nimport { getPoints } from \"../../logic/coefficients/coefficients\";\nimport { getProjectedTotalKg, getFinalTotalKg, liftToAttemptFieldName, liftToStatusFieldName } from \"../../logic/entry\";\n\nimport { getProjectedResults, getFinalResults } from \"../../logic/divisionPlace\";\nimport { kg2lbs, displayWeight, displayPoints, displayPlaceOrdinal } from \"../../logic/units\";\n\nimport { CategoryResults } from \"../../logic/divisionPlace\";\nimport { Entry, Equipment, Language, Lift, Sex } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState, LiftingState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingTable.module.scss\";\nimport { checkExhausted } from \"../../types/utils\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n}\n\ninterface StateProps {\n  meet: MeetState;\n  lifting: LiftingState;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\n// List of possible columns that can be rendered.\n// The main render() function decides what columns to render,\n// and communicates its selection with each row's renderer.\ntype ColumnType =\n  | \"Lifter\"\n  | \"Bodyweight\"\n  | \"WeightClass\"\n  | \"Division\"\n  | \"Lot\"\n  | \"Equipment\"\n  | \"Age\"\n  | \"S1\"\n  | \"S2\"\n  | \"S3\"\n  | \"S4\" // eslint-disable-line\n  | \"B1\"\n  | \"B2\"\n  | \"B3\"\n  | \"B4\" // eslint-disable-line\n  | \"D1\"\n  | \"D2\"\n  | \"D3\"\n  | \"D4\" // eslint-disable-line\n  | \"BestSquat\"\n  | \"BestBench\" // eslint-disable-line\n  | \"Spacer1\"\n  | \"Spacer2\"\n  | \"ProjectedTotal\"\n  | \"ProjectedPoints\"\n  | \"FinalTotal\"\n  | \"FinalPoints\"\n  | \"Place\";\n\n// This is a global for remembering the last AttemptInput that was rendered.\n// After the \"No Lift\" or \"Good Lift\" buttons are clicked, the last-rendered\n// AttemptInput is given focus by an event handler.\n//\n// This works because the LiftingTable is always re-rendered when one of\n// those buttons is clicked, and because there's only one LiftingTable.\nexport let globalFocusAttemptInputId: string | null = null;\n\n// The logic for globalFocusAttemptInputId is looking for the AttemptInput\n// that's all the way on the right, and as far down the table as possible.\nlet globalHighestAttemptInputAttempt: number = 0;\n\nclass LiftingTable extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.renderRows = this.renderRows.bind(this);\n    this.renderBest3AttemptField = this.renderBest3AttemptField.bind(this);\n    this.renderAttemptField = this.renderAttemptField.bind(this);\n    this.renderCell = this.renderCell.bind(this);\n  }\n\n  renderBest3AttemptField = (entry: Entry, lift: Lift, columnType: ColumnType) => {\n    const fieldKg = liftToAttemptFieldName(lift);\n    const fieldStatus = liftToStatusFieldName(lift);\n\n    // Look for either the best lift or the lightest no-lift.\n    let best3 = 0.0;\n    let lightestFailed = 0.0;\n\n    for (let i = 0; i < 3; i++) {\n      const kg = entry[fieldKg][i];\n\n      if (entry[fieldStatus][i] === 1) {\n        best3 = Math.max(best3, kg);\n      } else if (entry[fieldStatus][i] === -1) {\n        lightestFailed = lightestFailed === 0 ? kg : Math.min(lightestFailed, kg);\n      }\n    }\n\n    // Render cells using attempt coloring.\n    if (best3 !== 0) {\n      const asNumber = this.props.meet.inKg ? best3 : kg2lbs(best3);\n      return (\n        <td key={columnType} className={styles.goodlift}>\n          {displayWeight(asNumber, this.props.language)}\n        </td>\n      );\n    }\n    if (lightestFailed !== 0) {\n      const asNumber = this.props.meet.inKg ? lightestFailed : kg2lbs(lightestFailed);\n      return (\n        <td key={columnType} className={styles.nolift}>\n          {displayWeight(asNumber, this.props.language)}\n        </td>\n      );\n    }\n\n    // Show an empty cell by default.\n    return <td key={columnType} />;\n  };\n\n  renderAttemptField = (entry: Entry, lift: Lift, attemptOneIndexed: number, columnType: ColumnType) => {\n    const fieldKg = liftToAttemptFieldName(lift);\n    const fieldStatus = liftToStatusFieldName(lift);\n\n    const kg = entry[fieldKg][attemptOneIndexed - 1];\n    const status = entry[fieldStatus][attemptOneIndexed - 1];\n    const wStr = displayWeight(this.props.meet.inKg ? kg : kg2lbs(kg), this.props.language);\n    const displayStr = kg === 0 ? \"\" : wStr;\n\n    // Get a unique ID for each AttemptInput.\n    // This is used in combination with the globalFocusAttemptInputId to give\n    // focus to the last-rendered AttemptInput after a button is clicked.\n    const id = \"AttemptInput-\" + entry.id + \"-\" + lift + attemptOneIndexed;\n\n    // If the lifter was manually selected, always show an AttemptInput.\n    // This allows manual correction of weights when a misload occurs,\n    // even though the lift has already been marked good lift / no lift.\n    if (this.props.lifting.overrideEntryId === entry.id && attemptOneIndexed === this.props.attemptOneIndexed) {\n      // Is this a better match for giving focus?\n      if (attemptOneIndexed >= globalHighestAttemptInputAttempt) {\n        globalHighestAttemptInputAttempt = attemptOneIndexed;\n        globalFocusAttemptInputId = id;\n      }\n\n      return (\n        <td key={columnType} className={styles.attemptInputCell}>\n          <AttemptInput id={id} entry={entry} lift={lift} attemptOneIndexed={attemptOneIndexed} />\n        </td>\n      );\n    }\n\n    // If the attempt was already made, render a colored text field.\n    // The weight cannot be changed after the fact.\n    if (status !== 0) {\n      const className = status === 1 ? styles.goodlift : styles.nolift;\n      const maybeNegative = status === 1 ? \"\" : \"-\";\n      return (\n        <td key={columnType} className={className}>\n          {maybeNegative}\n          {displayStr}\n        </td>\n      );\n    }\n\n    // If the attempt isn't for the current lift, just show the number.\n    if (lift !== this.props.lifting.lift) {\n      return <td key={columnType}>{displayStr}</td>;\n    }\n\n    // Was any previous attempt taken?\n    let anyPreviousAttemptTaken = false;\n    for (let i = 1; i < attemptOneIndexed; i++) {\n      if (entry[fieldStatus][i - 1] !== 0) {\n        anyPreviousAttemptTaken = true;\n        break;\n      }\n    }\n\n    // Show a text input box if either:\n    // 1. This column is for the current attempt, and the lifter has a previous attempt.\n    // 2. This column is for the next attempt, and the lifter took the current attempt.\n    // 3. For whatever reason, someone managed to specify a weight.\n    const currentAndHasPrevious = attemptOneIndexed === this.props.attemptOneIndexed && anyPreviousAttemptTaken;\n    const nextAndTookLast =\n      attemptOneIndexed === this.props.attemptOneIndexed + 1 &&\n      entry[fieldStatus][this.props.attemptOneIndexed - 1] !== 0;\n\n    if (kg !== 0 || currentAndHasPrevious || nextAndTookLast) {\n      // Is this a better match for giving focus?\n      if (attemptOneIndexed >= globalHighestAttemptInputAttempt) {\n        globalHighestAttemptInputAttempt = attemptOneIndexed;\n        globalFocusAttemptInputId = id;\n      }\n\n      return (\n        <td key={columnType} className={styles.attemptInputCell}>\n          <AttemptInput id={id} entry={entry} lift={lift} attemptOneIndexed={attemptOneIndexed} />\n        </td>\n      );\n    }\n\n    // Default handler.\n    return <td key={columnType}>{displayStr}</td>;\n  };\n\n  mapSexToClasses = (sex: Sex, meetState: MeetState): ReadonlyArray<number> => {\n    switch (sex) {\n      case \"M\":\n        return meetState.weightClassesKgMen;\n      case \"F\":\n        return meetState.weightClassesKgWomen;\n      case \"Mx\":\n        return meetState.weightClassesKgMx;\n      default:\n        checkExhausted(sex);\n        return meetState.weightClassesKgMen;\n    }\n  };\n\n  renderCell = (entry: Entry, columnType: ColumnType, categoryResults: Array<CategoryResults>): JSX.Element => {\n    switch (columnType) {\n      case \"Lifter\": {\n        let cell: string | JSX.Element = entry.name;\n\n        // Bold the name of the current lifter.\n        if (this.props.currentEntryId === entry.id) {\n          cell = <b>{entry.name}</b>;\n        }\n\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {cell}\n          </td>\n        );\n      }\n      case \"Bodyweight\": {\n        const bw = entry.bodyweightKg;\n        const bwStr = displayWeight(this.props.meet.inKg ? bw : kg2lbs(bw), this.props.language);\n        return <td key={columnType}>{bw === 0 ? null : bwStr}</td>;\n      }\n      case \"WeightClass\": {\n        const bw = entry.bodyweightKg;\n        const classesForSex = this.mapSexToClasses(entry.sex, this.props.meet);\n        const weightClass = this.props.meet.inKg\n          ? getWeightClassStr(classesForSex, bw, this.props.language)\n          : getWeightClassLbsStr(classesForSex, bw);\n        return <td key={columnType}>{bw === 0 ? null : weightClass}</td>;\n      }\n      case \"Division\": {\n        // Just show the first division in the list, if any.\n        // Changing this requires coordination with the \"Place\" column code.\n        const firstDiv = entry.divisions.length > 0 ? entry.divisions[0] : null;\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {firstDiv}\n          </td>\n        );\n      }\n      case \"Lot\": {\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {entry.lot === 0 ? \"\" : entry.lot}\n          </td>\n        );\n      }\n      case \"Equipment\": {\n        // Use shorter names to actually fit in the table.\n        let equipment: string | Equipment = entry.equipment;\n        if (equipment === \"Single-ply\") equipment = \"Single\";\n        if (equipment === \"Multi-ply\") equipment = \"Multi\";\n        return <td key={columnType}>{equipment}</td>;\n      }\n      case \"Age\":\n        return <td key={columnType}>{entry.age}</td>;\n      case \"S1\":\n        return this.renderAttemptField(entry, \"S\", 1, columnType);\n      case \"S2\":\n        return this.renderAttemptField(entry, \"S\", 2, columnType);\n      case \"S3\":\n        return this.renderAttemptField(entry, \"S\", 3, columnType);\n      case \"S4\":\n        return this.renderAttemptField(entry, \"S\", 4, columnType);\n      case \"B1\":\n        return this.renderAttemptField(entry, \"B\", 1, columnType);\n      case \"B2\":\n        return this.renderAttemptField(entry, \"B\", 2, columnType);\n      case \"B3\":\n        return this.renderAttemptField(entry, \"B\", 3, columnType);\n      case \"B4\":\n        return this.renderAttemptField(entry, \"B\", 4, columnType);\n      case \"D1\":\n        return this.renderAttemptField(entry, \"D\", 1, columnType);\n      case \"D2\":\n        return this.renderAttemptField(entry, \"D\", 2, columnType);\n      case \"D3\":\n        return this.renderAttemptField(entry, \"D\", 3, columnType);\n      case \"D4\":\n        return this.renderAttemptField(entry, \"D\", 4, columnType);\n      case \"BestSquat\":\n        return this.renderBest3AttemptField(entry, \"S\", columnType);\n      case \"BestBench\":\n        return this.renderBest3AttemptField(entry, \"B\", columnType);\n      case \"Spacer1\": // fallthrough\n      case \"Spacer2\":\n        return <td key={columnType} className={styles.spacerCell} />;\n      case \"ProjectedTotal\": {\n        const totalKg = getProjectedTotalKg(entry);\n        const asNumber = this.props.meet.inKg ? totalKg : kg2lbs(totalKg);\n        return <td key={columnType}>{totalKg === 0 ? null : displayWeight(asNumber, this.props.language)}</td>;\n      }\n      case \"ProjectedPoints\": {\n        const totalKg: number = getProjectedTotalKg(entry);\n        const event = entry.events.length > 0 ? entry.events[0] : \"SBD\";\n        const points: number = getPoints(this.props.meet.formula, entry, event, totalKg, this.props.meet.inKg);\n\n        // Normally this column is hidden for \"Total\", but it's handled just in case.\n        if (this.props.meet.formula === \"Total\") {\n          return <td key={columnType}>{points !== 0 ? displayWeight(points, this.props.language) : null}</td>;\n        }\n        return <td key={columnType}>{points !== 0 ? displayPoints(points, this.props.language) : null}</td>;\n      }\n      case \"FinalTotal\": {\n        const totalKg = getFinalTotalKg(entry);\n        const asNumber = this.props.meet.inKg ? totalKg : kg2lbs(totalKg);\n        return <td key={columnType}>{totalKg === 0 ? null : displayWeight(asNumber, this.props.language)}</td>;\n      }\n      case \"FinalPoints\": {\n        const totalKg: number = getFinalTotalKg(entry);\n        const event = entry.events.length > 0 ? entry.events[0] : \"SBD\";\n        const points: number = getPoints(this.props.meet.formula, entry, event, totalKg, this.props.meet.inKg);\n\n        // Normally this column is hidden for \"Total\", but it's handled just in case.\n        if (this.props.meet.formula === \"Total\") {\n          return <td key={columnType}>{points !== 0 ? displayWeight(points, this.props.language) : null}</td>;\n        }\n        return <td key={columnType}>{points !== 0 ? displayPoints(points, this.props.language) : null}</td>;\n      }\n      case \"Place\": {\n        // If the lifter has no total, then don't report a place.\n        if (getFinalTotalKg(entry) === 0) return <td key={columnType} />;\n\n        // Just show the Place from the first division in the list.\n        // This is the same division as shown in the \"Division\" column.\n        if (entry.divisions.length === 0) return <td key={columnType} />;\n        const firstDiv = entry.divisions[0];\n\n        // Look at all the categories, and find the first one including this division\n        // and entry. Because the categories are in sorted order, SBD takes priority\n        // over B by default.\n        for (let i = 0; i < categoryResults.length; i++) {\n          const result = categoryResults[i];\n          if (result.category.division !== firstDiv) {\n            continue;\n          }\n\n          const catEntries = result.orderedEntries;\n          for (let j = 0; j < catEntries.length; j++) {\n            const catEntry = catEntries[j];\n\n            if (catEntry.id === entry.id) {\n              const ordinal = displayPlaceOrdinal(j + 1, entry, this.props.language);\n              return <td key={columnType}>{ordinal}</td>;\n            }\n          }\n        }\n\n        return <td key={columnType} />; // Shouldn't happen.\n      }\n      default:\n        checkExhausted(columnType);\n        return <td key={columnType} />;\n    }\n  };\n\n  renderRows = (columns: Array<ColumnType>, categoryResults: Array<CategoryResults>) => {\n    const orderedEntries = this.props.orderedEntries;\n    const currentEntryId = this.props.currentEntryId;\n\n    const rows = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const entry = orderedEntries[i];\n\n      // Iterate over each columnType, handling each.\n      const cells = [];\n      for (let col = 0; col < columns.length; col++) {\n        const columnType = columns[col];\n        cells.push(this.renderCell(entry, columnType, categoryResults));\n      }\n\n      const isCurrent = entry.id === currentEntryId;\n      const rowClassName = isCurrent ? styles.current : \"\";\n      rows.push(\n        <tr key={entry.id} className={rowClassName}>\n          {cells}\n        </tr>\n      );\n    }\n    return rows;\n  };\n\n  getColumnHeaderLabel = (columnType: ColumnType) => {\n    switch (columnType) {\n      case \"Lifter\":\n        return <LocalizedString id=\"lifting.column-lifter\" />;\n      case \"Bodyweight\":\n        return <LocalizedString id=\"lifting.column-bodyweight\" />;\n      case \"WeightClass\":\n        return <LocalizedString id=\"lifting.column-weightclass\" />;\n      case \"Division\":\n        return <LocalizedString id=\"lifting.column-division\" />;\n      case \"Lot\":\n        return <LocalizedString id=\"lifting.column-lot\" />;\n      case \"Equipment\":\n        return <LocalizedString id=\"lifting.column-equipment\" />;\n      case \"Age\":\n        return <LocalizedString id=\"lifting.column-age\" />;\n      case \"S1\":\n        return <LocalizedString id=\"lifting.column-s1\" />;\n      case \"S2\":\n        return <LocalizedString id=\"lifting.column-s2\" />;\n      case \"S3\":\n        return <LocalizedString id=\"lifting.column-s3\" />;\n      case \"S4\":\n        return <LocalizedString id=\"lifting.column-s4\" />;\n      case \"B1\":\n        return <LocalizedString id=\"lifting.column-b1\" />;\n      case \"B2\":\n        return <LocalizedString id=\"lifting.column-b2\" />;\n      case \"B3\":\n        return <LocalizedString id=\"lifting.column-b3\" />;\n      case \"B4\":\n        return <LocalizedString id=\"lifting.column-b4\" />;\n      case \"D1\":\n        return <LocalizedString id=\"lifting.column-d1\" />;\n      case \"D2\":\n        return <LocalizedString id=\"lifting.column-d2\" />;\n      case \"D3\":\n        return <LocalizedString id=\"lifting.column-d3\" />;\n      case \"D4\":\n        return <LocalizedString id=\"lifting.column-d4\" />;\n      case \"BestSquat\":\n        return <LocalizedString id=\"lifting.column-bestsquat\" />;\n      case \"BestBench\":\n        return <LocalizedString id=\"lifting.column-bestbench\" />;\n      case \"Spacer1\": // fallthrough\n      case \"Spacer2\":\n        return \"\";\n      case \"ProjectedTotal\":\n        return <LocalizedString id=\"lifting.column-projectedtotal\" />;\n      case \"ProjectedPoints\":\n        return <LocalizedString id=\"lifting.column-projectedpoints\" />;\n      case \"FinalTotal\":\n        return <LocalizedString id=\"lifting.column-projectedtotal\" />;\n      case \"FinalPoints\":\n        return <LocalizedString id=\"lifting.column-finalpoints\" />;\n      case \"Place\":\n        return <LocalizedString id=\"lifting.column-place\" />;\n      default:\n        checkExhausted(columnType);\n        return \"\";\n    }\n  };\n\n  render() {\n    // Reset this: hunting for a new AttemptIndex.\n    globalHighestAttemptInputAttempt = 0;\n\n    // Select the columns for display.\n    const columns: Array<ColumnType> = [\"Lifter\"];\n    // If the score table set the division column with to zero, hide it.\n    if (this.props.lifting.columnDivisionWidthPx !== 0) {\n      columns.push(\"Division\");\n    }\n    columns.push(\"Bodyweight\", \"WeightClass\");\n\n    // The \"Lot\" column is only shown if lot numbers are used.\n    for (let i = 0; i < this.props.orderedEntries.length; ++i) {\n      if (this.props.orderedEntries[i].lot !== 0) {\n        columns.push(\"Lot\");\n        break;\n      }\n    }\n\n    // Select lift columns based off the current lift.\n    if (this.props.lifting.lift === \"S\") {\n      columns.push(\"Spacer1\");\n      columns.push(\"S1\", \"S2\", \"S3\");\n      if (this.props.attemptOneIndexed === 4) {\n        columns.push(\"S4\");\n      }\n      columns.push(\"Spacer2\");\n      columns.push(\"B1\", \"D1\");\n    } else if (this.props.lifting.lift === \"B\") {\n      columns.push(\"BestSquat\", \"Spacer1\", \"B1\", \"B2\", \"B3\");\n      if (this.props.attemptOneIndexed === 4) {\n        columns.push(\"B4\");\n      }\n      columns.push(\"Spacer2\", \"D1\");\n    } else if (this.props.lifting.lift === \"D\") {\n      columns.push(\"BestSquat\", \"BestBench\", \"Spacer1\", \"D1\", \"D2\", \"D3\");\n      if (this.props.attemptOneIndexed === 4) {\n        columns.push(\"D4\");\n      }\n      columns.push(\"Spacer2\");\n    }\n\n    // Use projected totals for everything before 2nd attempt deadlifts.\n    const useProjected = this.props.lifting.lift !== \"D\" || this.props.attemptOneIndexed < 2;\n    columns.push(useProjected ? \"ProjectedTotal\" : \"FinalTotal\");\n    if (this.props.meet.formula !== \"Total\") {\n      columns.push(useProjected ? \"ProjectedPoints\" : \"FinalPoints\");\n    }\n    columns.push(\"Place\");\n\n    // Build headers.\n    const headers = [];\n    const highlightColumn = this.props.lifting.lift + String(this.props.attemptOneIndexed);\n    for (let i = 0; i < columns.length; i++) {\n      const column = columns[i];\n      let className = styles.smallCell;\n      let style: CSSProperties | undefined;\n\n      if (column === \"Lifter\") {\n        className = styles.nameCell;\n      } else if (column === \"Division\") {\n        className = styles.divisionCell;\n        if (this.props.lifting.columnDivisionWidthPx) {\n          style = { width: this.props.lifting.columnDivisionWidthPx + \"px\" };\n        }\n      } else if (column === \"Spacer1\" || column === \"Spacer2\") {\n        className = styles.spacerCell;\n      } else if (column === highlightColumn) {\n        className = styles.activeColumn;\n      }\n\n      headers.push(\n        <th key={column} className={className} style={style}>\n          {this.getColumnHeaderLabel(column)}\n        </th>\n      );\n    }\n\n    // Calculate the Division placings for each of the lifters.\n    const categoryResults = useProjected\n      ? getProjectedResults(\n          this.props.orderedEntries,\n          this.props.meet.weightClassesKgMen,\n          this.props.meet.weightClassesKgWomen,\n          this.props.meet.weightClassesKgMx,\n          this.props.meet.combineSleevesAndWraps\n        )\n      : getFinalResults(\n          this.props.orderedEntries,\n          this.props.meet.weightClassesKgMen,\n          this.props.meet.weightClassesKgWomen,\n          this.props.meet.weightClassesKgMx,\n          this.props.meet.combineSleevesAndWraps\n        );\n\n    return (\n      <table className={styles.liftingtable}>\n        <thead>\n          <tr>{headers}</tr>\n        </thead>\n        <tbody>{this.renderRows(columns, categoryResults)}</tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    meet: state.meet,\n    lifting: state.lifting,\n    language: state.language\n  };\n};\n\nexport default connect(mapStateToProps)(LiftingTable);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The footer of the Lifting page, contained by the LiftingView.\n// This is the parent element of the controls that affect present lifting state.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { globalFocusAttemptInputId } from \"./LiftingTable\";\n\nimport { getString, localizeFlight } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\n\nimport { markLift, overrideAttempt, overrideEntryId, setLiftingGroup } from \"../../actions/liftingActions\";\n\nimport { Entry, Flight, Language, Lift } from \"../../types/dataTypes\";\nimport { GlobalState, LiftingState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingFooter.module.scss\";\nimport { Dispatch } from \"redux\";\nimport { FormControlTypeHack, assertFlight, assertString, assertLift } from \"../../types/utils\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: ReadonlyArray<Readonly<Entry>>;\n  currentEntryId: number | null;\n  flightsOnPlatform: ReadonlyArray<Flight>;\n  toggleReplaceTableWithWeighins: () => void;\n}\n\ninterface StateProps {\n  lifting: LiftingState;\n  lengthDays: number;\n  platformsOnDays: ReadonlyArray<number>;\n  allow4thAttempts: boolean;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setLiftingGroup: (day: number, platform: number, flight: Flight, lift: Lift) => void;\n  overrideAttempt: (attempt: number) => void;\n  overrideEntryId: (entryId: number) => void;\n  markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass LiftingFooter extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleDayChange = this.handleDayChange.bind(this);\n    this.handlePlatformChange = this.handlePlatformChange.bind(this);\n    this.handleFlightChange = this.handleFlightChange.bind(this);\n    this.handleLiftChange = this.handleLiftChange.bind(this);\n\n    this.handleOnMouseEnter = this.handleOnMouseEnter.bind(this);\n    this.handleGoodLift = this.handleGoodLift.bind(this);\n    this.handleNoLift = this.handleNoLift.bind(this);\n\n    this.handleAttemptChange = this.handleAttemptChange.bind(this);\n    this.handleLifterChange = this.handleLifterChange.bind(this);\n\n    this.setFocusAttemptInputTimeout = this.setFocusAttemptInputTimeout.bind(this);\n\n    this.makeLifterOptions = this.makeLifterOptions.bind(this);\n  }\n\n  handleDayChange = (event: FormEvent<FormControlTypeHack>) => {\n    const day = Number(event.currentTarget.value);\n    const flight = this.props.lifting.flight;\n    const lift = this.props.lifting.lift;\n\n    // If the new day has fewer platforms, reset the platform selector also.\n    let platform = this.props.lifting.platform;\n    if (platform > this.props.platformsOnDays[day - 1]) {\n      platform = 1;\n    }\n\n    this.props.setLiftingGroup(day, platform, flight, lift);\n  };\n\n  handlePlatformChange = (event: FormEvent<FormControlTypeHack>) => {\n    const day = this.props.lifting.day;\n    const platform = Number(event.currentTarget.value);\n    const flight = this.props.lifting.flight;\n    const lift = this.props.lifting.lift;\n    this.props.setLiftingGroup(day, platform, flight, lift);\n  };\n\n  handleFlightChange = (event: FormEvent<FormControlTypeHack>) => {\n    const day = this.props.lifting.day;\n    const platform = this.props.lifting.platform;\n    const flight = event.currentTarget.value;\n    const lift = this.props.lifting.lift;\n    if (assertString(flight) && assertFlight(flight)) {\n      this.props.setLiftingGroup(day, platform, flight, lift);\n    }\n  };\n\n  handleLiftChange = (event: FormEvent<FormControlTypeHack>) => {\n    const day = this.props.lifting.day;\n    const platform = this.props.lifting.platform;\n    const flight = \"A\"; // Always reset to Flight A.\n    const lift = event.currentTarget.value;\n    if (assertString(lift) && assertLift(lift)) {\n      this.props.setLiftingGroup(day, platform, flight, lift);\n    }\n  };\n\n  handleAttemptChange = (event: FormEvent<FormControlTypeHack>) => {\n    const attempt = Number(event.currentTarget.value);\n    this.props.overrideAttempt(attempt);\n  };\n\n  handleLifterChange = (event: FormEvent<FormControlTypeHack>) => {\n    const entryId = Number(event.currentTarget.value);\n    this.props.overrideEntryId(entryId);\n  };\n\n  // After a \"No Lift\" or \"Good Lift\" button is clicked, try to change focus\n  // to the AttemptInput that the score table is likely to want to type into.\n  setFocusAttemptInputTimeout = () => {\n    if (globalFocusAttemptInputId === null) {\n      return;\n    }\n\n    // Auto-focusing is significantly less useful on 3rd attempts and beyond.\n    if (this.props.attemptOneIndexed >= 3) {\n      return;\n    }\n\n    setTimeout(function() {\n      if (globalFocusAttemptInputId === null) {\n        return;\n      }\n\n      const elem = document.getElementById(globalFocusAttemptInputId);\n      if (elem) {\n        elem.focus();\n      }\n    }, 100);\n  };\n\n  // This resolves Issue #224. The Good Lift and No Lift buttons are connected\n  // to onMouseDown handlers to greatly improve responsive feel. However, that\n  // means that an onBlur event is not fired for any AttemptInput that is\n  // currently being edited. We need to ensure that it's fired, just as if we\n  // were using a normal onClick handler.\n  //\n  // To ensure that any current AttemptInput is blurred, an onMouseEnter handler\n  // is added that always blurs the currently-focused element. Because there are\n  // several hundred milliseconds between onMouseEnter and onMouseDown due to\n  // human reaction timing, the onBlur event will fully-execute before onMouseDown.\n  handleOnMouseEnter = () => {\n    const activeElement = document.activeElement;\n    if (activeElement instanceof HTMLElement) {\n      activeElement.blur();\n    }\n  };\n\n  handleGoodLift = () => {\n    // If there's no active entry, there's nothing to set.\n    if (this.props.currentEntryId === null) {\n      return;\n    }\n\n    const entryId = Number(this.props.currentEntryId);\n    const lift = this.props.lifting.lift;\n    const attempt = this.props.attemptOneIndexed;\n    this.props.markLift(entryId, lift, attempt, true);\n    this.setFocusAttemptInputTimeout();\n  };\n\n  handleNoLift = () => {\n    // If there's no active entry, there's nothing to set.\n    if (this.props.currentEntryId === null) {\n      return;\n    }\n\n    const entryId = Number(this.props.currentEntryId);\n    const lift = this.props.lifting.lift;\n    const attempt = this.props.attemptOneIndexed;\n    this.props.markLift(entryId, lift, attempt, false);\n    this.setFocusAttemptInputTimeout();\n  };\n\n  // Check whether \"document.fullscreenElement\" exists, including prefixes.\n  hasFullscreenElement = (): boolean => {\n    const doc: any = document;\n    if (doc.fullscreenElement) return true;\n    if (doc.webkitFullscreenElement) return true;\n    if (doc.mozFullscreenElement) return true;\n    if (doc.msFullscreenElement) return true;\n    return false;\n  };\n\n  // Calls exitFullscreen(), but with prefixes.\n  exitFullscreen = () => {\n    const doc: any = document;\n    if (typeof doc.exitFullscreen === \"function\") doc.exitFullscreen();\n    else if (typeof doc.webkitExitFullscreen === \"function\") doc.webkitExitFullscreen();\n    else if (typeof doc.mozExitFullscreen === \"function\") doc.mozExitFullscreen();\n    else if (typeof doc.msExitFullscreen === \"function\") doc.msExitFullscreen();\n  };\n\n  // Calls requestFullscreen(), but with prefixes.\n  requestFullscreen = (e: any) => {\n    if (typeof e.requestFullscreen === \"function\") e.requestFullscreen();\n    else if (typeof e.webkitRequestFullscreen === \"function\") e.webkitRequestFullscreen();\n    else if (typeof e.mozRequestFullscreen === \"function\") e.mozRequestFullscreen();\n    else if (typeof e.msRequestFullscreen === \"function\") e.msRequestFullscreen();\n  };\n\n  // Called when the \"Toggle Fullscreen\" button is clicked.\n  handleFullscreen = () => {\n    // Document must be typecast to \"any\" because the fullscreen properties\n    // used here aren't defined in the Flow Document type definition.\n    if (this.hasFullscreenElement() === true) {\n      this.exitFullscreen();\n    } else {\n      const liftingView = document.getElementById(\"liftingView\");\n      if (liftingView !== null) {\n        this.requestFullscreen(liftingView);\n      }\n    }\n  };\n\n  makeLifterOptions = () => {\n    const orderedEntries = this.props.orderedEntries;\n\n    if (orderedEntries.length === 0) {\n      return (\n        <option value={0} key={0}>\n          {getString(\"lifting.footer-no-lifters\", this.props.language)}\n        </option>\n      );\n    }\n\n    const lifterOptions = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const entry = orderedEntries[i];\n      lifterOptions.push(\n        <option value={entry.id} key={entry.id}>\n          {entry.name}\n        </option>\n      );\n    }\n    return lifterOptions;\n  };\n\n  render() {\n    const language = this.props.language;\n    const numPlatforms = this.props.platformsOnDays[this.props.lifting.day - 1];\n\n    const dayOptions = [];\n    const dayTemplate = getString(\"lifting.footer-day-template\", language);\n    for (let i = 1; i <= this.props.lengthDays; i++) {\n      dayOptions.push(\n        <option value={i} key={i}>\n          {dayTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    const platformOptions = [];\n    const platformTemplate = getString(\"lifting.footer-platform-template\", language);\n    for (let i = 1; i <= numPlatforms; i++) {\n      platformOptions.push(\n        <option value={i} key={i}>\n          {platformTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    const liftOptions = [\n      <option key={\"S\"} value={\"S\"}>\n        {getString(\"lifting.footer-squat\", language)}\n      </option>,\n      <option key={\"B\"} value={\"B\"}>\n        {getString(\"lifting.footer-bench\", language)}\n      </option>,\n      <option key={\"D\"} value={\"D\"}>\n        {getString(\"lifting.footer-deadlift\", language)}\n      </option>\n    ];\n\n    const flightOptions = [];\n    const flightTemplate = getString(\"lifting.footer-flight-template\", language);\n    for (let i = 0; i < this.props.flightsOnPlatform.length; i++) {\n      const flight = this.props.flightsOnPlatform[i];\n      const key = this.props.lifting.day + \"-\" + this.props.lifting.platform + \"-\" + i;\n      flightOptions.push(\n        <option value={flight} key={key}>\n          {flightTemplate.replace(\"{flight}\", localizeFlight(flight, language))}\n        </option>\n      );\n    }\n    if (flightOptions.length === 0) {\n      flightOptions.push(<option key=\"none\">{getString(\"lifting.footer-no-flights\", language)}</option>);\n    }\n\n    const attemptOptions = [];\n    const attemptTemplate = getString(\"lifting.footer-attempt-template\", language);\n    for (let i = 1; i <= 3; i++) {\n      attemptOptions.push(\n        <option key={i} value={i}>\n          {attemptTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n    if (this.props.allow4thAttempts === true) {\n      attemptOptions.push(\n        <option key={4} value={4}>\n          {attemptTemplate.replace(\"{N}\", displayNumber(4, language))}\n        </option>\n      );\n    }\n\n    const currentEntryId = this.props.currentEntryId === null ? undefined : this.props.currentEntryId.toString();\n\n    return (\n      <div className={styles.footer}>\n        <div className={styles.leftControls}>\n          <Form.Control\n            as=\"select\"\n            defaultValue={this.props.lifting.day.toString()}\n            onChange={this.handleDayChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {dayOptions}\n          </Form.Control>\n          <Form.Control\n            as=\"select\"\n            defaultValue={this.props.lifting.platform.toString()}\n            onChange={this.handlePlatformChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {platformOptions}\n          </Form.Control>\n          <Form.Control\n            as=\"select\"\n            defaultValue={this.props.lifting.lift}\n            onChange={this.handleLiftChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {liftOptions}\n          </Form.Control>\n          <Form.Control\n            key={\"flight-\" + this.props.lifting.flight}\n            as=\"select\"\n            defaultValue={this.props.lifting.flight}\n            onChange={this.handleFlightChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {flightOptions}\n          </Form.Control>\n          <Form.Control\n            value={this.props.attemptOneIndexed.toString()}\n            as=\"select\"\n            onChange={this.handleAttemptChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {attemptOptions}\n          </Form.Control>\n          <Form.Control\n            value={currentEntryId}\n            as=\"select\"\n            onChange={this.handleLifterChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {this.makeLifterOptions()}\n          </Form.Control>\n        </div>\n\n        <div className={styles.rightControls}>\n          <ButtonGroup>\n            <Button variant=\"outline-primary\" onClick={this.props.toggleReplaceTableWithWeighins}>\n              <FormattedMessage id=\"lifting.button-toggle-weigh-ins\" defaultMessage=\"Toggle Weigh-ins\" />\n            </Button>\n            <Button variant=\"outline-secondary\" onClick={this.handleFullscreen} className={styles.fullscreen}>\n              <FormattedMessage id=\"lifting.button-toggle-fullscreen\" defaultMessage=\"Toggle Fullscreen\" />\n            </Button>\n          </ButtonGroup>\n          <button\n            type=\"button\"\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseDown={this.handleNoLift}\n            className={styles.noLift}\n          >\n            <FormattedMessage id=\"lifting.button-no-lift\" defaultMessage=\"No Lift\" />\n          </button>\n          <button\n            type=\"button\"\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseDown={this.handleGoodLift}\n            className={styles.goodLift}\n          >\n            <FormattedMessage id=\"lifting.button-good-lift\" defaultMessage=\"Good Lift\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState) => {\n  return {\n    lengthDays: state.meet.lengthDays,\n    platformsOnDays: state.meet.platformsOnDays,\n    allow4thAttempts: state.meet.allow4thAttempts,\n    lifting: state.lifting,\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setLiftingGroup: (day: number, platform: number, flight: Flight, lift: Lift) =>\n      dispatch(setLiftingGroup(day, platform, flight, lift)),\n    overrideAttempt: (attempt: number) => dispatch(overrideAttempt(attempt)),\n    overrideEntryId: (entryId: number) => dispatch(overrideEntryId(entryId)),\n    markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) =>\n      dispatch(markLift(entryId, lift, attempt, success))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LiftingFooter);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The top bar of the Lifting page, containing huge text about the current lifter.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\nimport { localizeEquipment } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState, RegistrationState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingHeader.module.scss\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n}\n\ninterface StateProps {\n  registration: RegistrationState;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass LiftingHeader extends React.Component<Props> {\n  render() {\n    // Defaults, in case of no lifter.\n    let lifterName = <LocalizedString id=\"lifting.flight-complete\" />;\n    let info = \"\";\n\n    // In the case of a lifter, set fields.\n    if (this.props.currentEntryId !== null && this.props.currentEntryId !== undefined) {\n      const idx = this.props.registration.lookup[this.props.currentEntryId];\n      const entry = this.props.registration.entries[idx];\n      lifterName = <span>{entry.name}</span>;\n\n      const infoBuilder: Array<string> = [];\n\n      if (typeof entry.instagram === \"string\" && entry.instagram !== \"\") {\n        infoBuilder.push(\"@\" + entry.instagram);\n      } else {\n        infoBuilder.push(\"\"); // Causes a separator dot to display.\n      }\n      if (entry.age > 0) {\n        infoBuilder.push(displayNumber(entry.age, this.props.language));\n      }\n      infoBuilder.push(localizeEquipment(entry.equipment, this.props.language));\n      if (entry.divisions.length > 0) {\n        infoBuilder.push(entry.divisions.join(\", \"));\n      }\n\n      info = infoBuilder.join(\" · \");\n    }\n\n    return (\n      <div className={styles.header}>\n        <div className={styles.lifterName}>{lifterName}</div>\n        <div className={styles.info}>{info}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    registration: state.registration,\n    language: state.language\n  };\n};\n\nexport default connect(mapStateToProps)(LiftingHeader);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This defines a widget for manually adjusting the width of a column\n// in the LiftingTable. The width information is stored in the LiftingState.\n//\n// The value is stored in the LiftingState in pixels, but is presented\n// here as (pixels / 9) to make it look nicer. 9 is used because most columns\n// are set to 72px, which is divisible by 9.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { setTableInfo } from \"../../actions/liftingActions\";\n\nimport { Validation } from \"../../types/dataTypes\";\nimport { GlobalState, LiftingState } from \"../../types/stateTypes\";\nimport { FormControlTypeHack, isString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport { isNumber } from \"util\";\n\ntype WidthFields = \"columnDivisionWidthPx\";\n\ninterface OwnProps {\n  label: string; // The label to display.\n  fieldName: WidthFields; // Field on the LiftingState to change.\n}\n\ninterface StateProps {\n  lifting: LiftingState;\n}\n\ninterface DispatchProps {\n  setTableInfo: (changes: Partial<LiftingState>) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  value: number | string;\n}\n\n// To show smaller numbers, the actual pixel count is divided by this.\nconst MULTIPLE: number = 9;\n\nclass ColumnWidth extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      value: Math.ceil(this.props.lifting[this.props.fieldName] / MULTIPLE)\n    };\n  }\n\n  validate = (): Validation => {\n    const { value } = this.state;\n    const asNumber = Number(value);\n\n    if (isNaN(asNumber) || asNumber < 0 || asNumber > 1000) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (event: React.FormEvent<FormControlTypeHack>) => {\n    const value = event.currentTarget.value;\n    if (!isNumber(value) && !isString(value)) {\n      throw new Error(`Expected either a number or a string, but got \"${value}\"`);\n    }\n\n    this.setState({ value: value }, () => {\n      // As callback, save successful value into Redux store.\n      if (this.validate() !== \"error\") {\n        // TODO: figure out how to type this nicely. For now, use any\n        const changes: any = {};\n        changes[this.props.fieldName] = Math.floor(Number(value) * MULTIPLE);\n        this.props.setTableInfo(changes);\n      }\n    });\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n\n    return (\n      <Form.Group>\n        <Form.Label>{this.props.label}</Form.Label>\n        <Form.Control\n          type=\"number\"\n          pattern=\"[0-9]+\"\n          min=\"0\"\n          step=\"1\"\n          value={this.state.value.toString()}\n          onChange={this.handleChange}\n          isValid={validation === \"success\"}\n          isInvalid={validation === \"error\"}\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lifting: state.lifting\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setTableInfo: (changes: Partial<LiftingState>) => dispatch(setTableInfo(changes))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColumnWidth);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Lifting page, contained by the LiftingContainer.\n//\n// The LiftingTable, LiftingFooter, etc. all share calculated state.\n// This class performs the state calculations and communicates that to its\n// sub-components via props.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\n\nimport LeftCard from \"./LeftCard\";\nimport LiftingFooter from \"./LiftingFooter\";\nimport LiftingHeader from \"./LiftingHeader\";\nimport LiftingTable from \"./LiftingTable\";\nimport WeighinsView from \"../weighins/WeighinsView\";\n\nimport ColumnWidth from \"./ColumnWidth\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport styles from \"./LiftingView.module.scss\";\n\nimport { getLiftingOrder } from \"../../logic/liftingOrder\";\n\nimport { Entry, Flight, Language } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState, LiftingState } from \"../../types/stateTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  lifting: LiftingState;\n  flightsOnPlatform: Array<Flight>;\n  entriesInFlight: Array<Entry>;\n  language: Language;\n}\n\ntype Props = StateProps;\n\ninterface InternalState {\n  // If true, the LiftingTable is replaced with the Weighins page.\n  // This lets the score table change arbitrary rack height and attempt information\n  // without removing the current lifter or bar load displays.\n  replaceTableWithWeighins: boolean;\n}\n\nclass LiftingView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.toggleReplaceTableWithWeighins = this.toggleReplaceTableWithWeighins.bind(this);\n    this.state = {\n      replaceTableWithWeighins: false\n    };\n  }\n\n  toggleReplaceTableWithWeighins = (): void => {\n    this.setState({\n      replaceTableWithWeighins: !this.state.replaceTableWithWeighins\n    });\n  };\n\n  render() {\n    const now = getLiftingOrder(this.props.entriesInFlight, this.props.lifting);\n\n    let rightElement = null;\n    if (this.state.replaceTableWithWeighins === false) {\n      rightElement = (\n        <LiftingTable\n          attemptOneIndexed={now.attemptOneIndexed}\n          orderedEntries={now.orderedEntries}\n          currentEntryId={now.currentEntryId}\n        />\n      );\n    } else {\n      rightElement = (\n        <WeighinsView day={this.props.lifting.day} platform={this.props.lifting.platform} inLiftingPage={true} />\n      );\n    }\n\n    return (\n      <div>\n        <Card style={{ margin: \"12px 20px\" }}>\n          <Card.Body>\n            <div style={{ width: \"160px\" }}>\n              <ColumnWidth\n                label={getString(\"lifting.division-column-width-label\", this.props.language)}\n                fieldName=\"columnDivisionWidthPx\"\n              />\n            </div>\n            <h3>\n              <FormattedMessage\n                id=\"lifting.garish-instructions\"\n                defaultMessage=\"To fit to the screen, zoom the browser in or out and then press Toggle Fullscreen.\"\n              />\n            </h3>\n          </Card.Body>\n        </Card>\n        <div id=\"liftingView\" className={styles.liftingView}>\n          <LiftingHeader\n            attemptOneIndexed={now.attemptOneIndexed}\n            orderedEntries={now.orderedEntries}\n            currentEntryId={now.currentEntryId}\n          />\n\n          <div className={styles.middleParentContainer}>\n            <div className={styles.leftCardContainer}>\n              <LeftCard\n                attemptOneIndexed={now.attemptOneIndexed}\n                orderedEntries={now.orderedEntries}\n                currentEntryId={now.currentEntryId}\n                nextEntryId={now.nextEntryId}\n                nextAttemptOneIndexed={now.nextAttemptOneIndexed}\n              />\n            </div>\n\n            <div className={styles.rightCardContainer}>{rightElement}</div>\n          </div>\n\n          <LiftingFooter\n            attemptOneIndexed={now.attemptOneIndexed}\n            orderedEntries={now.orderedEntries}\n            currentEntryId={now.currentEntryId}\n            flightsOnPlatform={this.props.flightsOnPlatform}\n            toggleReplaceTableWithWeighins={this.toggleReplaceTableWithWeighins}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  const day = state.lifting.day;\n  const platform = state.lifting.platform;\n  const flight = state.lifting.flight;\n\n  const entriesOnPlatform = state.registration.entries.filter(\n    entry => entry.day === day && entry.platform === platform\n  );\n\n  // Determine available flights from the entries themselves.\n  const flights: Array<Flight> = [];\n  for (let i = 0; i < entriesOnPlatform.length; i++) {\n    const entry = entriesOnPlatform[i];\n    if (flights.indexOf(entry.flight) === -1) {\n      flights.push(entry.flight);\n    }\n  }\n  flights.sort();\n\n  // Only receive entries that are in the currently-lifting group.\n  const entriesInFlight = entriesOnPlatform.filter(entry => entry.flight === flight);\n\n  return {\n    meet: state.meet,\n    lifting: state.lifting,\n    flightsOnPlatform: flights,\n    entriesInFlight: entriesInFlight,\n    language: state.language\n  };\n};\n\nexport default connect(mapStateToProps)(LiftingView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Lifting page.\n\nimport React from \"react\";\nimport LiftingView from \"../components/lifting/LiftingView\";\n\nclass LiftingContainer extends React.Component<{}> {\n  render() {\n    return <LiftingView />;\n  }\n}\n\nexport default LiftingContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Shows the first attempt ordering of lifters for a single flight.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\nimport { orderEntriesByAttempt } from \"../../logic/liftingOrder\";\nimport { getString, localizeFlight } from \"../../logic/strings\";\nimport { kg2lbs, displayNumber, displayWeight } from \"../../logic/units\";\n\nimport { Entry, Flight, Language, Lift } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nimport styles from \"./OneFlightOrder.module.scss\";\n\ntype Column =\n  | \"SquatName\"\n  | \"SquatKg\"\n  | \"SquatLbs\"\n  | \"BenchSeparator\"\n  | \"BenchName\"\n  | \"BenchKg\"\n  | \"BenchLbs\"\n  | \"DeadliftSeparator\"\n  | \"DeadliftName\"\n  | \"DeadliftKg\"\n  | \"DeadliftLbs\";\n\ninterface OwnProps {\n  flight: Flight;\n  entriesInFlight: Array<Entry>;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass OneFlightOrder extends React.Component<Props> {\n  getOrderBy = (lift: Lift): Array<Entry> => {\n    const fieldKg = liftToAttemptFieldName(lift);\n\n    // Only consider entries that registered a first attempt.\n    const entriesForLift = this.props.entriesInFlight.filter(e => {\n      return e[fieldKg][0] !== 0;\n    });\n\n    // Sort them in-place on the basis of that first attempt.\n    return orderEntriesByAttempt(entriesForLift, fieldKg, 1);\n  };\n\n  getColumnHeader(column: Column, language: Language): string {\n    switch (column) {\n      case \"SquatName\":\n        return getString(\"flight-order.squat-column-header\", language);\n      case \"SquatKg\":\n        return getString(\"flight-order.kilograms-header\", language);\n      case \"SquatLbs\":\n        return getString(\"flight-order.pounds-header\", language);\n      case \"BenchSeparator\":\n        return \"\";\n      case \"BenchName\":\n        return getString(\"flight-order.bench-column-header\", language);\n      case \"BenchKg\":\n        return getString(\"flight-order.kilograms-header\", language);\n      case \"BenchLbs\":\n        return getString(\"flight-order.pounds-header\", language);\n      case \"DeadliftSeparator\":\n        return \"\";\n      case \"DeadliftName\":\n        return getString(\"flight-order.deadlift-column-header\", language);\n      case \"DeadliftKg\":\n        return getString(\"flight-order.kilograms-header\", language);\n      case \"DeadliftLbs\":\n        return getString(\"flight-order.pounds-header\", language);\n      default:\n        checkExhausted(column);\n        return \"\";\n    }\n  }\n\n  render() {\n    const language = this.props.language;\n\n    const bySquat = this.getOrderBy(\"S\");\n    const byBench = this.getOrderBy(\"B\");\n    const byDeadlift = this.getOrderBy(\"D\");\n\n    const hasSquat = bySquat.length !== 0;\n    const hasBench = byBench.length !== 0;\n    const hasDeadlift = byDeadlift.length !== 0;\n\n    const maxRows = Math.max(bySquat.length, byBench.length, byDeadlift.length);\n\n    // Figure out what columns to render, and in which order.\n    const columns: Array<Column> = [];\n    if (hasSquat) {\n      columns.push(\"SquatName\");\n      columns.push(this.props.inKg ? \"SquatKg\" : \"SquatLbs\");\n      if (this.props.showAlternateUnits) {\n        columns.push(this.props.inKg ? \"SquatLbs\" : \"SquatKg\");\n      }\n    }\n    if (hasBench) {\n      if (hasSquat) {\n        columns.push(\"BenchSeparator\");\n      }\n      columns.push(\"BenchName\");\n      columns.push(this.props.inKg ? \"BenchKg\" : \"BenchLbs\");\n      if (this.props.showAlternateUnits) {\n        columns.push(this.props.inKg ? \"BenchLbs\" : \"BenchKg\");\n      }\n    }\n    if (hasDeadlift) {\n      if (hasSquat || hasBench) {\n        columns.push(\"DeadliftSeparator\");\n      }\n      columns.push(\"DeadliftName\");\n      columns.push(this.props.inKg ? \"DeadliftKg\" : \"DeadliftLbs\");\n      if (this.props.showAlternateUnits) {\n        columns.push(this.props.inKg ? \"DeadliftLbs\" : \"DeadliftKg\");\n      }\n    }\n\n    // Construct a table row-by-row.\n    const rows = [];\n    for (let i = 0; i < maxRows; ++i) {\n      const builder = [];\n\n      for (let j = 0; j < columns.length; ++j) {\n        const column = columns[j];\n        const key: string = column + String(i);\n\n        let content: string = \"\";\n        let className = undefined;\n\n        switch (column) {\n          case \"SquatName\": {\n            if (i < bySquat.length) {\n              const entry = bySquat[i];\n              content = displayNumber(i + 1, language) + \". \" + entry.name;\n            }\n            break;\n          }\n          case \"SquatKg\": {\n            if (i < bySquat.length) {\n              const entry = bySquat[i];\n              content = displayWeight(entry.squatKg[0], language);\n            }\n            break;\n          }\n          case \"SquatLbs\": {\n            if (i < bySquat.length) {\n              const entry = bySquat[i];\n              content = displayWeight(kg2lbs(entry.squatKg[0]), language);\n            }\n            break;\n          }\n          case \"BenchSeparator\":\n            className = styles.leftDivider;\n            break;\n          case \"BenchName\": {\n            if (i < byBench.length) {\n              const entry = byBench[i];\n              content = displayNumber(i + 1, language) + \". \" + entry.name;\n            }\n            break;\n          }\n          case \"BenchKg\": {\n            if (i < byBench.length) {\n              const entry = byBench[i];\n              content = displayWeight(entry.benchKg[0], language);\n            }\n            break;\n          }\n          case \"BenchLbs\": {\n            if (i < byBench.length) {\n              const entry = byBench[i];\n              content = displayWeight(kg2lbs(entry.benchKg[0]), language);\n            }\n            break;\n          }\n          case \"DeadliftSeparator\":\n            className = styles.leftDivider;\n            break;\n          case \"DeadliftName\": {\n            if (i < byDeadlift.length) {\n              const entry = byDeadlift[i];\n              content = displayNumber(i + 1, language) + \". \" + entry.name;\n            }\n            break;\n          }\n          case \"DeadliftKg\": {\n            if (i < byDeadlift.length) {\n              const entry = byDeadlift[i];\n              content = displayWeight(entry.deadliftKg[0], language);\n            }\n            break;\n          }\n          case \"DeadliftLbs\": {\n            if (i < byDeadlift.length) {\n              const entry = byDeadlift[i];\n              content = displayWeight(kg2lbs(entry.deadliftKg[0]), language);\n            }\n            break;\n          }\n        }\n\n        builder.push(\n          <td key={key} className={className}>\n            {content}\n          </td>\n        );\n      }\n\n      rows.push(<tr key={i}>{builder}</tr>);\n    }\n\n    // Construct the table header.\n    const header = [];\n    for (let i = 0; i < columns.length; ++i) {\n      const column = columns[i];\n      const title = this.getColumnHeader(column, this.props.language);\n      header.push(<th key={column}>{title}</th>);\n    }\n\n    return (\n      <Card>\n        <Card.Header>\n          <FormattedMessage\n            id=\"flight-order.flight-card\"\n            defaultMessage=\"Flight {flight} Lifting Order\"\n            values={{ flight: localizeFlight(this.props.flight, this.props.language) }}\n          />\n        </Card.Header>\n        <Card.Body>\n          <Table striped hover size=\"sm\" style={{ margin: \"0px\" }}>\n            <thead>\n              <tr>{header}</tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    language: state.language\n  };\n};\n\nexport default connect(mapStateToProps)(OneFlightOrder);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the FlightOrder page, contained by the FlightOrderContainer.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport OneFlightOrder from \"./OneFlightOrder\";\n\nimport { getString } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\n\nimport { Entry, Flight, Language } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { FormControlTypeHack } from \"../../types/utils\";\n\ninterface StateProps {\n  meet: MeetState;\n  entries: ReadonlyArray<Entry>;\n  language: Language;\n}\n\ntype Props = StateProps;\n\ninterface InternalState {\n  day: number;\n  platform: number;\n}\n\nclass FlightOrderView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.updateDay = this.updateDay.bind(this);\n    this.updatePlatform = this.updatePlatform.bind(this);\n    this.handlePrint = this.handlePrint.bind(this);\n\n    this.state = {\n      day: 1,\n      platform: 1\n    };\n  }\n\n  updateDay = (event: FormEvent<FormControlTypeHack>) => {\n    const day = Number(event.currentTarget.value);\n    if (this.state.day !== day) {\n      // If the currently-selected platform number becomes invalid, reset it.\n      if (this.state.platform > this.props.meet.platformsOnDays[day - 1]) {\n        this.setState({ day: day, platform: 1 });\n      } else {\n        this.setState({ day: day });\n      }\n    }\n  };\n\n  updatePlatform = (event: React.FormEvent<FormControlTypeHack>) => {\n    const platform = Number(event.currentTarget.value);\n    if (this.state.platform !== platform) {\n      this.setState({ platform: platform });\n    }\n  };\n\n  handlePrint = () => {\n    window.print();\n  };\n\n  render() {\n    const language = this.props.language;\n    const selectorStyle = { width: \"120px\", marginRight: \"15px\" };\n\n    // Make options for all of the days.\n    const dayOptions = [];\n    const dayTemplate = getString(\"lifting.footer-day-template\", language);\n    for (let i = 1; i <= this.props.meet.lengthDays; i++) {\n      dayOptions.push(\n        <option value={i} key={i}>\n          {dayTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    // Make options for all of the available platforms on the current day.\n    const platformOptions = [];\n    const platformTemplate = getString(\"lifting.footer-platform-template\", language);\n    const numPlatforms = this.props.meet.platformsOnDays[this.state.day - 1];\n    for (let i = 1; i <= numPlatforms; i++) {\n      platformOptions.push(\n        <option value={i} key={i}>\n          {platformTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    // Get all the entries under the current (day, platform) selection.\n    const shownEntries = this.props.entries.filter(e => {\n      return e.day === this.state.day && e.platform === this.state.platform;\n    });\n\n    // Look through the entries to discover what flights exist.\n    const knownFlights: Flight[] = [];\n    for (let i = 0; i < shownEntries.length; i++) {\n      const entry = shownEntries[i];\n      if (knownFlights.indexOf(entry.flight) === -1) {\n        knownFlights.push(entry.flight);\n      }\n    }\n    knownFlights.sort();\n\n    // For each flight, see if there are any lifters, and build a OneFlightOrder.\n    const flightOrders = [];\n    for (let i = 0; i < knownFlights.length; i++) {\n      const flight = knownFlights[i];\n      const entriesInFlight = shownEntries.filter(e => e.flight === flight);\n      const id = \"\" + this.state.day + \"-\" + this.state.platform + \"-\" + flight;\n      flightOrders.push(<OneFlightOrder key={id} flight={flight} entriesInFlight={entriesInFlight} />);\n    }\n\n    // FIXME: Disable categories for the moment. They seem unhelpful.\n    // As far as I know, no one has paid them much attention.\n    /*\n    // Look through the entries to discover what divisions exist.\n    const categoryResults = getProjectedResults(\n      shownEntries,\n      this.props.meet.weightClassesKgMen,\n      this.props.meet.weightClassesKgWomen,\n      this.props.meet.weightClassesKgMx,\n      this.props.meet.combineSleevesAndWraps\n    );\n\n    let categories: Array<JSX.Element> = [];\n    for (let i = 0; i < categoryResults.length; i++) {\n      const id = \"\" + this.state.day + \"-\" + this.state.platform + \"-\" + i;\n      categories.push(<OneCategory key={id} platform={this.state.platform} categoryResults={categoryResults[i]} />);\n    }\n    */\n\n    return (\n      <div>\n        <Card style={{ marginBottom: \"17px\" }}>\n          <Card.Body style={{ display: \"flex\" }}>\n            <FormControl\n              defaultValue={this.state.day}\n              as=\"select\"\n              onChange={this.updateDay}\n              style={selectorStyle}\n              className=\"custom-select\"\n            >\n              {dayOptions}\n            </FormControl>\n\n            <FormControl\n              defaultValue={this.state.platform.toString()}\n              as=\"select\"\n              onChange={this.updatePlatform}\n              style={selectorStyle}\n              className=\"custom-select\"\n            >\n              {platformOptions}\n            </FormControl>\n\n            <Button variant=\"info\" onClick={this.handlePrint}>\n              <FormattedMessage id=\"flight-order.print-button\" defaultMessage=\"Print Page\" />\n            </Button>\n          </Card.Body>\n        </Card>\n\n        {flightOrders}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    meet: state.meet,\n    entries: state.registration.entries,\n    language: state.language\n  };\n};\n\nexport default connect(mapStateToProps)(FlightOrderView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the FlightOrder page.\n\nimport React from \"react\";\n\nimport FlightOrderView from \"../components/flight-order/FlightOrderView\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass FlightOrderContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <FlightOrderView />\n      </div>\n    );\n  }\n}\n\nexport default FlightOrderContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the results by division.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { getFinalResults } from \"../../logic/divisionPlace\";\nimport { getWeightClassStr, getWeightClassLbsStr, wtclsStrKg2Lbs } from \"../../reducers/meetReducer\";\nimport {\n  getBest5SquatKg,\n  getBest5BenchKg,\n  getBest5DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted\n} from \"../../logic/entry\";\nimport { kg2lbs, displayWeight, displayPoints, displayPlaceOrdinal } from \"../../logic/units\";\n\nimport { getString, localizeEquipment, localizeEvent, localizeWeightClassStr } from \"../../logic/strings\";\nimport { getPoints } from \"../../logic/coefficients/coefficients\";\n\nimport { Category, CategoryResults } from \"../../logic/divisionPlace\";\nimport { Entry, Formula, Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  meetName: string;\n  formula: Formula;\n  combineSleevesAndWraps: boolean;\n  lengthDays: number;\n  weightClassesKgMen: ReadonlyArray<number>;\n  weightClassesKgWomen: ReadonlyArray<number>;\n  weightClassesKgMx: ReadonlyArray<number>;\n  language: Language;\n  entries: ReadonlyArray<Entry>;\n}\n\ninterface OwnProps {\n  day: string | number; // Really a number, 0 meaning \"all\".\n}\n\ntype Props = StateProps & OwnProps;\n\nconst mapSexToClasses = (sex: Sex, props: Props): ReadonlyArray<number> => {\n  switch (sex) {\n    case \"M\":\n      return props.weightClassesKgMen;\n    case \"F\":\n      return props.weightClassesKgWomen;\n    case \"Mx\":\n      return props.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return props.weightClassesKgMen;\n  }\n};\n\nclass ByDivision extends React.Component<Props> {\n  renderEntryRow = (entry: Entry, category: Category, key: number): JSX.Element | null => {\n    // Skip no-show entries.\n    if (!entryHasLifted(entry)) return null;\n\n    // Skip DQ'd lifters. Meet directors have reported that it's embarrassing\n    // to the DQ'd lifter to have that projected.\n    const totalKg = getFinalEventTotalKg(entry, category.event);\n    if (totalKg === 0) return null;\n\n    const inKg = this.props.inKg;\n    const language = this.props.language;\n\n    // The place proceeds in order by key, except for DQ entries.\n    const place =\n      totalKg === 0\n        ? getString(\"results.lifter-disqualified\", language)\n        : displayPlaceOrdinal(key + 1, entry, this.props.language);\n\n    const points: number = getPoints(this.props.formula, entry, category.event, totalKg, inKg);\n\n    let pointsStr = \"\";\n    if (totalKg !== 0 && points === 0) {\n      pointsStr = getString(\"results.value-not-applicable\", language);\n    } else if (totalKg !== 0 && points !== 0) {\n      pointsStr = displayPoints(points, language);\n    }\n\n    const classes = mapSexToClasses(entry.sex, this.props);\n    const wtcls = inKg\n      ? getWeightClassStr(classes, entry.bodyweightKg, language)\n      : getWeightClassLbsStr(classes, entry.bodyweightKg);\n    const bw = inKg ? entry.bodyweightKg : kg2lbs(entry.bodyweightKg);\n\n    const squatKg = getBest5SquatKg(entry);\n    const squat = inKg ? squatKg : kg2lbs(squatKg);\n\n    const benchKg = getBest5BenchKg(entry);\n    const bench = inKg ? benchKg : kg2lbs(benchKg);\n\n    const deadliftKg = getBest5DeadliftKg(entry);\n    const deadlift = inKg ? deadliftKg : kg2lbs(deadliftKg);\n\n    let weightTemplate = \"\";\n    if (inKg) {\n      if (this.props.showAlternateUnits === true) {\n        weightTemplate = getString(\"lifting.current-weight-kg-lbs\", language);\n      } else {\n        weightTemplate = getString(\"lifting.current-weight-kg\", language);\n      }\n    } else {\n      if (this.props.showAlternateUnits === true) {\n        weightTemplate = getString(\"lifting.current-weight-lbs-kg\", language);\n      } else {\n        weightTemplate = getString(\"lifting.current-weight-lbs\", language);\n      }\n    }\n\n    let weightString: null | string = null;\n    if (totalKg > 0) {\n      weightString = weightTemplate\n        .replace(\"{kg}\", displayWeight(totalKg, language))\n        .replace(\"{lbs}\", displayWeight(kg2lbs(totalKg), language));\n    }\n\n    return (\n      <tr key={key}>\n        <td>{place}</td>\n        <td>{entry.name}</td>\n        <td>{entry.bodyweightKg === 0 ? null : wtcls}</td>\n        <td>{entry.bodyweightKg === 0 ? null : displayWeight(bw, language)}</td>\n        <td>{entry.age === 0 ? null : entry.age}</td>\n        <td>{squatKg === 0 ? \"\" : displayWeight(squat, language)}</td>\n        <td>{benchKg === 0 ? \"\" : displayWeight(bench, language)}</td>\n        <td>{deadliftKg === 0 ? \"\" : displayWeight(deadlift, language)}</td>\n        <td>{weightString}</td>\n        <td>{pointsStr}</td>\n      </tr>\n    );\n  };\n\n  mapSexToLabel = (sex: Sex, language: Language): string => {\n    switch (sex) {\n      case \"M\":\n        return getString(\"results.mens\", language);\n      case \"F\":\n        return getString(\"results.womens\", language);\n      case \"Mx\":\n        return getString(\"results.mxs\", language);\n      default:\n        checkExhausted(sex);\n        return \"\";\n    }\n  };\n\n  renderCategoryResults = (results: CategoryResults, key: number): JSX.Element | null => {\n    const { category, orderedEntries } = results;\n    const language = this.props.language;\n    const sex: string = this.mapSexToLabel(category.sex, language);\n\n    // Gather rows.\n    const rows = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const row = this.renderEntryRow(orderedEntries[i], category, i);\n      if (row !== null) {\n        rows.push(row);\n      }\n    }\n\n    // If all entries were no-show, don't show this panel.\n    if (rows.length === 0) {\n      return null;\n    }\n\n    let eqpstr: string = localizeEquipment(category.equipment, language);\n    if (this.props.combineSleevesAndWraps) {\n      eqpstr = getString(\"results.combined-sleeves-wraps\", language);\n    }\n\n    const units = this.props.inKg\n      ? getString(\"results.spoken-unit-kilo\", language)\n      : getString(\"results.spoken-unit-pound\", language);\n\n    // Convert the category.weightClassStr to pounds.\n    let wtcls = localizeWeightClassStr(category.weightClassStr, language);\n    if (category.weightClassStr !== \"\" && !this.props.inKg) {\n      wtcls = wtclsStrKg2Lbs(category.weightClassStr);\n    }\n\n    const template = getString(\"results.division-template\", language);\n    const division = template\n      .replace(\"{sex}\", sex)\n      .replace(\"{weightClass}\", wtcls)\n      .replace(\"{spokenUnits}\", category.weightClassStr !== \"\" ? units : \"\")\n      .replace(\"{equipment}\", eqpstr)\n      .replace(\"{division}\", category.division)\n      .replace(\"{event}\", localizeEvent(category.event, language));\n\n    return (\n      <Card key={key} style={{ marginTop: \"17px\" }}>\n        <Card.Header>{division}</Card.Header>\n        <Card.Body>\n          <Table hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>{getString(\"lifting.column-place\", language)}</th>\n                <th>{getString(\"lifting.column-lifter\", language)}</th>\n                <th>{getString(\"lifting.column-weightclass\", language)}</th>\n                <th>{getString(\"lifting.column-bodyweight\", language)}</th>\n                <th>{getString(\"lifting.column-age\", language)}</th>\n                <th>{getString(\"flight-order.squat-column-header\", language)}</th>\n                <th>{getString(\"flight-order.bench-column-header\", language)}</th>\n                <th>{getString(\"flight-order.deadlift-column-header\", language)}</th>\n                <th>{getString(\"lifting.column-finaltotal\", language)}</th>\n                <th>{getString(\"lifting.column-finalpoints\", language)}</th>\n              </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  render() {\n    const results = getFinalResults(\n      this.props.entries,\n      this.props.weightClassesKgMen,\n      this.props.weightClassesKgWomen,\n      this.props.weightClassesKgMx,\n      this.props.combineSleevesAndWraps\n    );\n\n    const categoryCards = [];\n    for (let i = 0; i < results.length; i++) {\n      const panel = this.renderCategoryResults(results[i], i);\n      if (panel !== null) {\n        categoryCards.push(panel);\n      }\n    }\n\n    return <div>{categoryCards}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const day = Number(ownProps.day);\n  let entries = state.registration.entries;\n  if (day > 0) {\n    entries = entries.filter(e => e.day === day);\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    meetName: state.meet.name,\n    formula: state.meet.formula,\n    combineSleevesAndWraps: state.meet.combineSleevesAndWraps,\n    lengthDays: state.meet.lengthDays,\n    weightClassesKgMen: state.meet.weightClassesKgMen,\n    weightClassesKgWomen: state.meet.weightClassesKgWomen,\n    weightClassesKgMx: state.meet.weightClassesKgMx,\n    language: state.language,\n    entries: entries\n  };\n};\n\nexport default connect(mapStateToProps)(ByDivision);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the logic for calculating the division Place of a lifter, shared between\n// the Lifting page, the Rankings page, and data export code.\n//\n// The algorithm used is particularly bad -- the foremost goal was to make an interface\n// that allowed for maximum code reuse between the Rankings and Lifting pages,\n// which have slightly different needs.\n\nimport { getFinalEventTotalKg } from \"./entry\";\n\n// Import points formulas.\nimport { getAgeAdjustedPoints } from \"./coefficients/coefficients\";\n\n// Import age coefficients.\nimport { checkExhausted } from \"../types/utils\";\nimport { AgeCoefficients, Sex, Event, Equipment, Entry, Formula } from \"../types/dataTypes\";\n\n// Specifies a points category under which entries can be ranked together.\nexport type PointsCategory = {\n  sex: Sex;\n  event: Event;\n  equipment: Equipment;\n};\n\n// Wraps up all the entries in a category with the category's descriptors.\nexport type PointsCategoryResults = {\n  category: PointsCategory;\n  orderedEntries: Array<Entry>;\n};\n\n// Generates a unique String out of a Category, for purposes of using as a Map key.\nconst categoryToKey = (category: PointsCategory): string => {\n  return JSON.stringify(category);\n};\nconst keyToCategory = (key: string): PointsCategory => {\n  return JSON.parse(key);\n};\n\n// Returns a copy of the entries array sorted by Formula Place (Rank).\n// All entries are assumed to be part of the same category.\nconst sortByFormulaPlaceInCategory = (\n  entries: Array<Entry>,\n  category: PointsCategory,\n  formula: Formula,\n  ageCoefficients: AgeCoefficients,\n  inKg: boolean,\n  meetDate: string\n): Array<Entry> => {\n  // Make a map from Entry to initial index.\n  const indexMap = new Map();\n  for (let i = 0; i < entries.length; i++) {\n    indexMap.set(entries[i], i);\n  }\n\n  // Pre-calculate all the points into an array to avoid computing them multiple\n  // times in the sort.\n  const memoizedPoints = new Array(entries.length);\n  for (let i = 0; i < entries.length; i++) {\n    const entry = entries[i];\n    const totalKg = getFinalEventTotalKg(entry, category.event);\n\n    memoizedPoints[i] = getAgeAdjustedPoints(ageCoefficients, meetDate, formula, entry, category.event, totalKg, inKg);\n  }\n\n  // Clone the entries array to avoid modifying the original.\n  const clonedEntries = entries.slice();\n\n  // Sort in the given category, first place having the lowest index.\n  clonedEntries.sort((a, b) => {\n    const aIndex = indexMap.get(a);\n    const bIndex = indexMap.get(b);\n\n    // Appease the type checker even though this can't happen.\n    if (aIndex === undefined || bIndex === undefined) return 0;\n\n    // First sort by points, higher sorting lower.\n    const aPoints = memoizedPoints[aIndex];\n    const bPoints = memoizedPoints[bIndex];\n    if (aPoints !== bPoints) return bPoints - aPoints;\n\n    // If points are equal, sort by Bodyweight, lower sorting lower.\n    if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\n\n    // Otherwise, they're equal.\n    return 0;\n  });\n\n  return clonedEntries;\n};\n\n// Determines the sort order by Event.\nconst getEventSortOrder = (ev: Event): number => {\n  return [\"SBD\", \"BD\", \"SB\", \"SD\", \"S\", \"B\", \"D\"].indexOf(ev);\n};\n\n// Determines the sort order by Equipment.\nconst getEquipmentSortOrder = (eq: Equipment): number => {\n  // Combine classic and equipped lifting.\n  return [\"Bare\", \"Sleeves\", \"Wraps\", \"Single-ply\", \"Multi-ply\"].indexOf(eq);\n};\n\n// Determines the sort order by Sex.\nconst getSexSortOrder = (sex: Sex): number => {\n  switch (sex) {\n    case \"F\":\n      return 0;\n    case \"M\":\n      return 1;\n    case \"Mx\":\n      return 2;\n    default:\n      checkExhausted(sex);\n      return 3;\n  }\n};\n\n// Determines the sort (and therefore presentation) order for the Category Results.\n// The input array is sorted in-place; nothing is returned.\nexport const sortPointsCategoryResults = (results: Array<PointsCategoryResults>): void => {\n  results.sort((a, b) => {\n    const catA = a.category;\n    const catB = b.category;\n\n    // First, sort by Sex.\n    const aSex = getSexSortOrder(catA.sex);\n    const bSex = getSexSortOrder(catB.sex);\n    if (aSex !== bSex) return aSex - bSex;\n\n    // Next, sort by Event.\n    const aEvent = getEventSortOrder(catA.event);\n    const bEvent = getEventSortOrder(catB.event);\n    if (aEvent !== bEvent) return aEvent - bEvent;\n\n    // Finally, sort by Equipment.\n    const aEquipment = getEquipmentSortOrder(catA.equipment);\n    const bEquipment = getEquipmentSortOrder(catB.equipment);\n    if (aEquipment !== bEquipment) return aEquipment - bEquipment;\n\n    return 0;\n  });\n};\n\n// Generates objects representing the various ByPoints categories.\n// The returned objects are sorted in intended order of presentation.\nexport const getAllRankings = (\n  entries: ReadonlyArray<Entry>,\n  formula: Formula,\n  ageCoefficients: AgeCoefficients,\n  combineSleevesAndWraps: boolean,\n  inKg: boolean,\n  meetDate: string\n): Array<PointsCategoryResults> => {\n  // Generate a map from category to the entries within that category.\n  // The map is populated by iterating over each entry and having the entry\n  // append itself to per-category lists.\n  const categoryMap = new Map();\n  for (let i = 0; i < entries.length; i++) {\n    const e = entries[i];\n\n    // Remember consistent properties.\n    const sex = e.sex;\n    let equipment: Equipment = e.equipment;\n\n    // If the results combine Sleeves and Wraps, promote Sleeves to Wraps.\n    if (combineSleevesAndWraps && equipment === \"Sleeves\") {\n      equipment = \"Wraps\";\n    }\n\n    // Iterate over each event, adding to the map.\n    for (let evidx = 0; evidx < e.events.length; evidx++) {\n      const event = e.events[evidx];\n      const category = { sex, event, equipment };\n      const key = categoryToKey(category);\n\n      const catEntries = categoryMap.get(key);\n      catEntries === undefined ? categoryMap.set(key, [e]) : catEntries.push(e);\n    }\n  }\n\n  // Iterate over each category and assign a Place to the entries therein.\n  const results = [];\n  for (const [key, catEntries] of categoryMap) {\n    const category = keyToCategory(key);\n    const orderedEntries = sortByFormulaPlaceInCategory(catEntries, category, formula, ageCoefficients, inKg, meetDate);\n    results.push({ category, orderedEntries });\n  }\n\n  sortPointsCategoryResults(results);\n  return results;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the results by points.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { getAllRankings } from \"../../logic/pointsPlace\";\nimport { getWeightClassStr, getWeightClassLbsStr } from \"../../reducers/meetReducer\";\nimport {\n  getBest5SquatKg,\n  getBest5BenchKg,\n  getBest5DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted\n} from \"../../logic/entry\";\nimport { getString, localizeEquipment, localizeEvent, localizeSex } from \"../../logic/strings\";\nimport { kg2lbs, displayNumber, displayPoints, displayWeight, displayPlaceOrdinal } from \"../../logic/units\";\n\nimport { getAgeAdjustedPoints } from \"../../logic/coefficients/coefficients\";\n\nimport { PointsCategory, PointsCategoryResults } from \"../../logic/pointsPlace\";\nimport { AgeCoefficients, Entry, Formula, Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { fosterMcCulloch } from \"../../logic/coefficients/foster-mcculloch\";\n\ninterface StateProps {\n  inKg: boolean;\n  meetName: string;\n  meetDate: string;\n  formula: Formula;\n  combineSleevesAndWraps: boolean;\n  lengthDays: number;\n  weightClassesKgMen: ReadonlyArray<number>;\n  weightClassesKgWomen: ReadonlyArray<number>;\n  weightClassesKgMx: ReadonlyArray<number>;\n  language: Language;\n  entries: ReadonlyArray<Entry>;\n}\n\n// Overloads this component so it can render different types of \"Best Lifter\" categories.\nexport type AgePointsCategory = \"BestLifter\" | \"BestMastersLifter\" | \"BestJuniorsLifter\";\n\ninterface OwnProps {\n  day: string | number; // Really a number, 0 meaning \"all\".\n  ageCoefficients: AgeCoefficients; // In OwnProps so that caller can disable it.\n  agePointsCategory: AgePointsCategory;\n}\n\ntype Props = StateProps & OwnProps;\n\nconst mapSexToClasses = (sex: Sex, props: Props): ReadonlyArray<number> => {\n  switch (sex) {\n    case \"M\":\n      return props.weightClassesKgMen;\n    case \"F\":\n      return props.weightClassesKgWomen;\n    case \"Mx\":\n      return props.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return props.weightClassesKgMen;\n  }\n};\n\nclass ByPoints extends React.Component<Props> {\n  renderEntryRow = (entry: Entry, category: PointsCategory, key: number): JSX.Element | null => {\n    // Skip no-show lifters.\n    if (!entryHasLifted(entry)) return null;\n\n    // Skip DQ'd lifters. Meet directors have reported that it's embarrassing\n    // to the DQ'd lifter to have that projected.\n    const totalKg = getFinalEventTotalKg(entry, category.event);\n    if (totalKg === 0) return null;\n\n    const inKg = this.props.inKg;\n    const language = this.props.language;\n\n    // The place proceeds in order by key, except for DQ entries.\n    const rank =\n      totalKg === 0\n        ? getString(\"results.lifter-disqualified\", language)\n        : displayPlaceOrdinal(key + 1, entry, language);\n\n    const points: number = getAgeAdjustedPoints(\n      this.props.ageCoefficients,\n      this.props.meetDate,\n      this.props.formula,\n      entry,\n      category.event,\n      totalKg,\n      inKg\n    );\n\n    let pointsStr = \"\";\n    if (totalKg !== 0 && points === 0) {\n      pointsStr = getString(\"results.value-not-applicable\", language);\n    } else if (totalKg !== 0 && points !== 0) {\n      pointsStr = displayPoints(points, language);\n    }\n\n    const firstDivision = entry.divisions.length > 0 ? entry.divisions[0] : \"\";\n    const numDivisions = entry.divisions.length;\n\n    const classes = mapSexToClasses(entry.sex, this.props);\n    const wtcls = inKg\n      ? getWeightClassStr(classes, entry.bodyweightKg, language)\n      : getWeightClassLbsStr(classes, entry.bodyweightKg);\n    const bw = inKg ? entry.bodyweightKg : kg2lbs(entry.bodyweightKg);\n\n    const squatKg = getBest5SquatKg(entry);\n    const squat = inKg ? squatKg : kg2lbs(squatKg);\n\n    const benchKg = getBest5BenchKg(entry);\n    const bench = inKg ? benchKg : kg2lbs(benchKg);\n\n    const deadliftKg = getBest5DeadliftKg(entry);\n    const deadlift = inKg ? deadliftKg : kg2lbs(deadliftKg);\n\n    const total = inKg ? totalKg : kg2lbs(totalKg);\n\n    return (\n      <tr key={key}>\n        <td>{rank}</td>\n        <td>{entry.name}</td>\n        <td>{localizeSex(entry.sex, language)}</td>\n        <td>\n          {firstDivision} {numDivisions > 1 ? \"(+\" + (numDivisions - 1) + \")\" : \"\"}\n        </td>\n        <td>{localizeEquipment(entry.equipment, language)}</td>\n        <td>{entry.bodyweightKg === 0 ? null : wtcls}</td>\n        <td>{entry.bodyweightKg === 0 ? null : displayWeight(bw, language)}</td>\n        <td>{entry.age === 0 ? null : displayNumber(entry.age, language)}</td>\n        <td>{squatKg === 0 ? \"\" : displayWeight(squat, language)}</td>\n        <td>{benchKg === 0 ? \"\" : displayWeight(bench, language)}</td>\n        <td>{deadliftKg === 0 ? \"\" : displayWeight(deadlift, language)}</td>\n        <td>{totalKg === 0 ? \"\" : displayWeight(total, language)}</td>\n        <td>{pointsStr}</td>\n      </tr>\n    );\n  };\n\n  mapSexToLabel = (sex: Sex, language: Language): string => {\n    switch (sex) {\n      case \"M\":\n        return getString(\"results.mens\", language);\n      case \"F\":\n        return getString(\"results.womens\", language);\n      case \"Mx\":\n        return getString(\"results.mxs\", language);\n      default:\n        checkExhausted(sex);\n        return \"\";\n    }\n  };\n\n  renderCategoryResults = (results: PointsCategoryResults, key: number): JSX.Element | null => {\n    const { category, orderedEntries } = results;\n    const language = this.props.language;\n    const sex: string = this.mapSexToLabel(category.sex, language);\n\n    // Gather rows.\n    const rows = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const row = this.renderEntryRow(orderedEntries[i], category, i);\n      if (row !== null) {\n        rows.push(row);\n      }\n    }\n\n    // If all lifters were No-Show, skip displaying this category.\n    if (rows.length === 0) {\n      return null;\n    }\n\n    let eqpstr: string = localizeEquipment(category.equipment, language);\n    if (this.props.combineSleevesAndWraps) {\n      eqpstr = getString(\"results.combined-sleeves-wraps\", language);\n    }\n\n    const template = getString(\"results.category-template\", language);\n    const categoryString = template\n      .replace(\"{sex}\", sex)\n      .replace(\"{equipment}\", eqpstr)\n      .replace(\"{event}\", localizeEvent(category.event, language));\n\n    return (\n      <Card key={key} style={{ marginTop: \"17px\" }}>\n        <Card.Header>{categoryString}</Card.Header>\n        <Card.Body>\n          <Table striped hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>{getString(\"results.column-rank\", language)}</th>\n                <th>{getString(\"lifting.column-lifter\", language)}</th>\n                <th>{getString(\"results.column-sex\", language)}</th>\n                <th>{getString(\"lifting.column-division\", language)}</th>\n                <th>{getString(\"results.column-equipment\", language)}</th>\n                <th>{getString(\"lifting.column-weightclass\", language)}</th>\n                <th>{getString(\"lifting.column-bodyweight\", language)}</th>\n                <th>{getString(\"lifting.column-age\", language)}</th>\n                <th>{getString(\"flight-order.squat-column-header\", language)}</th>\n                <th>{getString(\"flight-order.bench-column-header\", language)}</th>\n                <th>{getString(\"flight-order.deadlift-column-header\", language)}</th>\n                <th>{getString(\"lifting.column-finaltotal\", language)}</th>\n                <th>\n                  {this.props.ageCoefficients === \"None\"\n                    ? getString(\"lifting.column-finalpoints\", language)\n                    : getString(\"results.column-age-points\", language)}\n                </th>\n              </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  render() {\n    let entries = this.props.entries;\n\n    // If this is for Best Masters lifter, just include non-standard-aged lifters.\n    if (this.props.agePointsCategory !== \"BestLifter\") {\n      entries = entries.filter(e => {\n        // Filter out based on age.\n        switch (this.props.agePointsCategory) {\n          case \"BestLifter\":\n            break;\n          case \"BestMastersLifter\":\n            // The coefficients logic below will handle older lifters\n            // according to the chosen age coefficient system.\n            if (e.age <= 27) {\n              return false;\n            }\n            break;\n          case \"BestJuniorsLifter\":\n            // The coefficients logic below will handle older lifters\n            // according to the chosen age coefficient system.\n            if (e.age >= 27) {\n              return false;\n            }\n            break;\n          default:\n            checkExhausted(this.props.agePointsCategory);\n            break;\n        }\n\n        // Only include lifters who get an age bump.\n        switch (this.props.ageCoefficients) {\n          case \"None\":\n            return true;\n          case \"FosterMcCulloch\":\n            return fosterMcCulloch(e.age) !== 1.0;\n          default:\n            checkExhausted(this.props.ageCoefficients);\n            return true;\n        }\n      });\n    }\n\n    const results = getAllRankings(\n      entries,\n      this.props.formula,\n      this.props.ageCoefficients,\n      this.props.combineSleevesAndWraps,\n      this.props.inKg,\n      this.props.meetDate\n    );\n\n    const categoryCards = [];\n    for (let i = 0; i < results.length; i++) {\n      const panel = this.renderCategoryResults(results[i], i);\n      if (panel !== null) {\n        categoryCards.push(panel);\n      }\n    }\n\n    return <div>{categoryCards}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const day = Number(ownProps.day);\n  let entries = state.registration.entries;\n  if (day > 0) {\n    entries = entries.filter(e => e.day === day);\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    meetName: state.meet.name,\n    meetDate: state.meet.date,\n    formula: state.meet.formula,\n    combineSleevesAndWraps: state.meet.combineSleevesAndWraps,\n    lengthDays: state.meet.lengthDays,\n    weightClassesKgMen: state.meet.weightClassesKgMen,\n    weightClassesKgWomen: state.meet.weightClassesKgWomen,\n    weightClassesKgMx: state.meet.weightClassesKgMx,\n    language: state.language,\n    entries: entries\n  };\n};\n\nexport default connect(mapStateToProps)(ByPoints);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Exports data to a CSV format easily importable by OpenPowerlifting.\n\nimport { csvDate, csvString, Csv } from \"./csv\";\nimport { getFinalResults } from \"../divisionPlace\";\nimport { wtclsStrKg2Lbs } from \"../../reducers/meetReducer\";\nimport {\n  getAge,\n  getBest3SquatKg,\n  getBest3BenchKg,\n  getBest3DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted,\n  MAX_ATTEMPTS\n} from \"../entry\";\nimport { displayWeight, kg2lbs } from \"../units\";\n\nimport { Category, CategoryResults } from \"../divisionPlace\";\nimport { Entry, Equipment } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nconst makeMeetCsv = (meet: MeetState): Csv => {\n  const csv = new Csv();\n  csv.fieldnames = [\"Federation\", \"Date\", \"MeetCountry\", \"MeetState\", \"MeetTown\", \"MeetName\", \"Formula\"];\n\n  const row: Array<string> = [\n    csvString(meet.federation),\n    csvDate(meet.date),\n    csvString(meet.country),\n    csvString(meet.state),\n    csvString(meet.city),\n    csvString(meet.name),\n    csvString(meet.formula)\n  ];\n  csv.rows = [row];\n\n  // An optional RuleSet column may be provided.\n  if (meet.combineSleevesAndWraps === true) {\n    csv.fieldnames.push(\"RuleSet\");\n    csv.rows[0].push(\"CombineRawAndWraps\");\n  }\n\n  return csv;\n};\n\nconst standardizeEquipment = (eq: Equipment): string => {\n  switch (eq) {\n    case \"Bare\":\n      return \"Raw\";\n    case \"Sleeves\":\n      return \"Raw\";\n    case \"Wraps\":\n      return \"Wraps\";\n    case \"Single-ply\":\n      return \"Single-ply\";\n    case \"Multi-ply\":\n      return \"Multi-ply\";\n    default:\n      checkExhausted(eq);\n      return \"Raw\";\n  }\n};\n\nconst addEntriesRow = (csv: Csv, category: Category, inKg: boolean, meetDate: string, entry: Entry, index: number) => {\n  const unit: string = inKg ? \"Kg\" : \"LBS\";\n  const finalEventTotalKg = getFinalEventTotalKg(entry, category.event);\n\n  // Helper functions to keep things one-liners below. Handles Kg/Lbs conversion.\n  const weight = (kg: number): string => {\n    return displayWeight(inKg ? kg : kg2lbs(kg));\n  };\n  const wtcls = (cls: string): string => {\n    return inKg ? cls : wtclsStrKg2Lbs(cls);\n  };\n\n  // Initialize an empty row with all columns available.\n  const row: Array<string> = Array(csv.fieldnames.length).fill(\"\");\n\n  if (!entryHasLifted(entry)) {\n    row[csv.index(\"Place\")] = \"NS\"; // No-Show.\n  } else {\n    row[csv.index(\"Place\")] = finalEventTotalKg === 0 ? \"DQ\" : csvString(index + 1);\n  }\n\n  row[csv.index(\"Name\")] = csvString(entry.name);\n  row[csv.index(\"Instagram\")] = csvString(entry.instagram);\n  row[csv.index(\"Sex\")] = csvString(entry.sex);\n  row[csv.index(\"BirthDate\")] = csvDate(entry.birthDate);\n  row[csv.index(\"Age\")] = csvString(getAge(entry, meetDate));\n  row[csv.index(\"Country\")] = csvString(entry.country);\n  row[csv.index(\"State\")] = csvString(entry.state);\n  row[csv.index(\"Equipment\")] = csvString(standardizeEquipment(entry.equipment));\n  row[csv.index(\"Division\")] = csvString(category.division);\n  row[csv.index(\"Bodyweight\" + unit)] = csvString(weight(entry.bodyweightKg));\n  row[csv.index(\"WeightClass\" + unit)] = csvString(wtcls(category.weightClassStr));\n  row[csv.index(\"Total\" + unit)] = csvString(weight(finalEventTotalKg));\n  row[csv.index(\"Event\")] = csvString(category.event);\n  row[csv.index(\"Team\")] = csvString(entry.team);\n\n  // Squat.\n  if (category.event.includes(\"S\")) {\n    row[csv.index(\"Best3Squat\" + unit)] = csvString(weight(getBest3SquatKg(entry)));\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      const field = \"Squat\" + (i + 1) + unit;\n      row[csv.index(field)] = csvString(weight(entry.squatKg[i] * entry.squatStatus[i]));\n    }\n  }\n\n  // Bench.\n  if (category.event.includes(\"B\")) {\n    row[csv.index(\"Best3Bench\" + unit)] = csvString(weight(getBest3BenchKg(entry)));\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      const field = \"Bench\" + (i + 1) + unit;\n      row[csv.index(field)] = csvString(weight(entry.benchKg[i] * entry.benchStatus[i]));\n    }\n  }\n\n  // Deadlift.\n  if (category.event.includes(\"D\")) {\n    row[csv.index(\"Best3Deadlift\" + unit)] = csvString(weight(getBest3DeadliftKg(entry)));\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      const field = \"Deadlift\" + (i + 1) + unit;\n      row[csv.index(field)] = csvString(weight(entry.deadliftKg[i] * entry.deadliftStatus[i]));\n    }\n  }\n\n  csv.rows.push(row);\n};\n\nconst makeEntriesCsv = (state: GlobalState): Csv => {\n  const inKg: boolean = state.meet.inKg;\n  const unit: string = inKg ? \"Kg\" : \"LBS\";\n\n  const csv = new Csv();\n\n  const squatFieldnames = [];\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    squatFieldnames.push(\"Squat\" + (i + 1) + unit);\n  }\n  squatFieldnames.push(\"Best3Squat\" + unit);\n\n  const benchFieldnames = [];\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    benchFieldnames.push(\"Bench\" + (i + 1) + unit);\n  }\n  benchFieldnames.push(\"Best3Bench\" + unit);\n\n  const deadliftFieldnames = [];\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    deadliftFieldnames.push(\"Deadlift\" + (i + 1) + unit);\n  }\n  deadliftFieldnames.push(\"Best3Deadlift\" + unit);\n\n  csv.fieldnames = Array.prototype.concat(\n    [\"Place\", \"Name\", \"Instagram\", \"Sex\", \"BirthDate\", \"Age\", \"Country\", \"State\"],\n    [\"Equipment\", \"Division\", \"Bodyweight\" + unit, \"WeightClass\" + unit],\n    squatFieldnames,\n    benchFieldnames,\n    deadliftFieldnames,\n    [\"Total\" + unit, \"Event\", \"Team\"]\n  );\n\n  const results: Array<CategoryResults> = getFinalResults(\n    state.registration.entries,\n    state.meet.weightClassesKgMen,\n    state.meet.weightClassesKgWomen,\n    state.meet.weightClassesKgMx,\n    state.meet.combineSleevesAndWraps\n  );\n\n  for (let i = 0; i < results.length; i++) {\n    const { category, orderedEntries } = results[i];\n\n    for (let j = 0; j < orderedEntries.length; j++) {\n      addEntriesRow(csv, category, inKg, state.meet.date, orderedEntries[j], j);\n    }\n  }\n\n  return csv;\n};\n\nexport const exportAsOplCsv = (state: GlobalState): string => {\n  const meetCsv: Csv = makeMeetCsv(state.meet);\n\n  const entriesCsv: Csv = makeEntriesCsv(state);\n  entriesCsv.removeEmptyColumns();\n\n  const versionStr = \"OPL Format v1,Submit by email:,issues@openpowerlifting.org\";\n\n  return versionStr + \"\\n\\n\" + meetCsv.toString() + \"\\n\" + entriesCsv.toString();\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Exports data to a spreadsheet format used by the USAPL.\n\nimport { csvString, Csv } from \"./csv\";\nimport { getFinalResults } from \"../divisionPlace\";\nimport { displayWeight } from \"../units\";\n\nimport { Category, CategoryResults } from \"../divisionPlace\";\nimport { Entry, Event } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\n// Translates the event from our format to the NextLifter format.\nconst translateEvent = (ev: Event): string => {\n  switch (ev) {\n    // Variants present in the NextLifter software.\n    case \"SBD\":\n      return \"PL\";\n    case \"BD\":\n      return \"PP\";\n    case \"S\":\n      return \"SQ\";\n    case \"B\":\n      return \"BP\";\n    case \"D\":\n      return \"DL\";\n\n    // These variants aren't selectable in NextLifter, so the USAPL doesn't use them.\n    case \"SB\":\n      return \"SB\";\n    case \"SD\":\n      return \"SD\";\n    default:\n      checkExhausted(ev);\n      return ev;\n  }\n};\n\n// Converts the ISO8601 entry.birthDate to USAPL MM/DD/YYYY format.\nconst makeBirthDate = (entry: Entry): string => {\n  if (entry.birthDate === undefined || entry.birthDate === \"\") {\n    return \"\";\n  }\n  const [year, month, day]: Array<string> = entry.birthDate.split(\"-\");\n  return month + \"/\" + day + \"/\" + year;\n};\n\n// Given an Entry and its index in the CategoryResults.orderedEntries,\n// render all that information as a one-liner CSV string.\nconst addDataRow = (csv: Csv, category: Category, entry: Entry): void => {\n  const hasSquat: boolean = category.event.includes(\"S\");\n  const hasBench: boolean = category.event.includes(\"B\");\n  const hasDL: boolean = category.event.includes(\"D\");\n\n  // Initialize an empty row with all columns available.\n  const row: Array<string> = Array(csv.fieldnames.length).fill(\"\");\n\n  row[csv.index(\"Name\")] = csvString(entry.name);\n  row[csv.index(\"Team\")] = csvString(entry.team);\n  row[csv.index(\"Div\")] = csvString(category.division);\n  row[csv.index(\"Bwt - kg\")] = csvString(displayWeight(entry.bodyweightKg));\n  row[csv.index(\"IPF Wt Cls\")] = csvString(category.weightClassStr);\n  row[csv.index(\"DOB\")] = csvString(makeBirthDate(entry));\n  row[csv.index(\"Squat 1\")] = csvString(displayWeight(hasSquat ? entry.squatKg[0] * entry.squatStatus[0] : 0));\n  row[csv.index(\"Squat 2\")] = csvString(displayWeight(hasSquat ? entry.squatKg[1] * entry.squatStatus[1] : 0));\n  row[csv.index(\"Squat 3\")] = csvString(displayWeight(hasSquat ? entry.squatKg[2] * entry.squatStatus[2] : 0));\n  row[csv.index(\"Bench 1\")] = csvString(displayWeight(hasBench ? entry.benchKg[0] * entry.benchStatus[0] : 0));\n  row[csv.index(\"Bench 2\")] = csvString(displayWeight(hasBench ? entry.benchKg[1] * entry.benchStatus[1] : 0));\n  row[csv.index(\"Bench 3\")] = csvString(displayWeight(hasBench ? entry.benchKg[2] * entry.benchStatus[2] : 0));\n  row[csv.index(\"Deadlift 1\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[0] * entry.deadliftStatus[0] : 0));\n  row[csv.index(\"Deadlift 2\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[1] * entry.deadliftStatus[1] : 0));\n  row[csv.index(\"Deadlift 3\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[2] * entry.deadliftStatus[2] : 0));\n  row[csv.index(\"Event\")] = csvString(translateEvent(category.event));\n  row[csv.index(\"State\")] = csvString(entry.state);\n  row[csv.index(\"MemberID\")] = csvString(entry.memberId);\n  // TODO: Drug Test.\n\n  csv.rows.push(row);\n};\n\nexport const exportAsUSAPLCsv = (state: GlobalState): string => {\n  const csv = new Csv();\n  csv.fieldnames = [\n    \"Name\",\n    \"Team\",\n    \"Div\", // Division.\n    \"Bwt - kg\", // Bodyweight, kg.\n    \"IPF Wt Cls\", // IPF Weight Class (SHW as \"120+\", same format).\n    \"DOB\", // Date of Birth, in MM/DD/YYYY format.\n    \"Squat 1\", // Units unspecified, but seem to be kg.\n    \"Squat 2\",\n    \"Squat 3\",\n    \"Bench 1\",\n    \"Bench 2\",\n    \"Bench 3\",\n    \"Deadlift 1\",\n    \"Deadlift 2\",\n    \"Deadlift 3\",\n    \"Event\", // In NextLifter format (PL, BO, etc.).\n    \"State\", // USA state of residence of the lifter, as abbreviation.\n    \"MemberID\",\n    \"Drug Test\" // \"Y\" if a test was performed, blank otherwise.\n  ];\n\n  const results: Array<CategoryResults> = getFinalResults(\n    state.registration.entries,\n    state.meet.weightClassesKgMen,\n    state.meet.weightClassesKgWomen,\n    state.meet.weightClassesKgMx,\n    state.meet.combineSleevesAndWraps\n  );\n\n  for (let i = 0; i < results.length; i++) {\n    const { category, orderedEntries } = results[i];\n\n    for (let j = 0; j < orderedEntries.length; j++) {\n      addDataRow(csv, category, orderedEntries[j]);\n    }\n  }\n\n  return csv.toString();\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Results page, contained by the ResultsContainer.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport { saveAs } from \"file-saver\";\n\nimport ByDivision from \"./ByDivision\";\nimport ByPoints from \"./ByPoints\";\nimport ErrorModal from \"../ErrorModal\";\n\nimport { mergePlatform } from \"../../actions/registrationActions\";\n\nimport { liftingPresentOnPlatform, getWhetherPlatformsHaveLifted } from \"../../logic/entry\";\nimport { getString } from \"../../logic/strings\";\nimport { exportAsOplCsv } from \"../../logic/export/oplcsv\";\nimport { exportAsUSAPLCsv } from \"../../logic/export/usapl\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport styles from \"./ResultsView.module.scss\";\nimport { FormControlTypeHack, checkExhausted, assertString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ntype ResultsBy = \"Division\" | \"Points\" | \"BestMastersLifter\" | \"BestJuniorsLifter\";\n\nconst assertValidResultsBy = (value: string): value is ResultsBy => {\n  const resultsBy = value as ResultsBy;\n  switch (resultsBy) {\n    case \"BestJuniorsLifter\":\n    case \"BestMastersLifter\":\n    case \"Division\":\n    case \"Points\":\n      return true;\n    default:\n      checkExhausted(resultsBy);\n      throw new Error(`Expected a valid value for ResultsBy. Got \"${value}\"`);\n  }\n};\n\ninterface StateProps {\n  global: GlobalState;\n  language: Language;\n}\n\ninterface DispatchProps {\n  mergePlatform: (day: number, platform: number, platformEntries: Array<Entry>) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  day: number;\n  by: ResultsBy;\n  // Controls the ErrorModal popup. Shown when error !== \"\".\n  error: string;\n}\n\n// FIXME: Unfortunate use of globals :/ I don't have a better idea.\n// This is to pass information from the merge button click handler to the\n// file loader click handler.\nlet globalMergeDay: number = 0;\nlet globalMergePlatform: number = 0;\n\nclass ResultsView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleDayChange = this.handleDayChange.bind(this);\n    this.handleByChange = this.handleByChange.bind(this);\n    this.handleExportAsOplCsvClick = this.handleExportAsOplCsvClick.bind(this);\n    this.handleExportAsUSAPLCsvClick = this.handleExportAsUSAPLCsvClick.bind(this);\n    this.handleExportPlatformClick = this.handleExportPlatformClick.bind(this);\n    this.handleMergePlatformClick = this.handleMergePlatformClick.bind(this);\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n    this.makePlatformMergeButtons = this.makePlatformMergeButtons.bind(this);\n\n    this.state = {\n      day: 0, // Meaning \"all\". Flow complained about mixing numbers and strings.\n      by: \"Division\",\n      error: \"\"\n    };\n  }\n\n  makeDayOptions = () => {\n    const language = this.props.language;\n    const options = [\n      <option key={\"all\"} value={0}>\n        {getString(\"results.all-days-together\", language)}\n      </option>\n    ];\n\n    const justDayTemplate = getString(\"results.just-day-n\", language);\n    for (let day = 1; day <= this.props.global.meet.lengthDays; day++) {\n      options.push(\n        <option key={day} value={day}>\n          {justDayTemplate.replace(\"{N}\", String(day))}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  handleDayChange = (event: React.FormEvent<FormControlTypeHack>) => {\n    const day = Number(event.currentTarget.value);\n    if (this.state.day !== day) {\n      this.setState({ day: day });\n    }\n  };\n\n  handleByChange = (event: React.FormEvent<FormControlTypeHack>) => {\n    const by = event.currentTarget.value;\n    if (this.state.by !== by && assertString(by) && assertValidResultsBy(by)) {\n      this.setState({ by: by });\n    }\n  };\n\n  handleExportAsOplCsvClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    // TODO: Share this logic with HomeContainer.\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const csv: string = exportAsOplCsv(this.props.global);\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\n    saveAs(blob, meetname + \".opl.csv\");\n  };\n\n  handleExportAsUSAPLCsvClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    // TODO: Share this logic with handleExportAsOplCsvClick.\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const csv: string = exportAsUSAPLCsv(this.props.global);\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\n    saveAs(blob, meetname + \".USAPL.csv\");\n  };\n\n  handleExportPlatformClick = (day: number, platform: number, event: Record<string, any>) => {\n    // TODO: Share this logic with handleExportAsOplCsvClick.\n    const language = this.props.language;\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const template = getString(\"results.platform-export-filename\", language);\n    const exportname = template\n      .replace(\"{day}\", String(day))\n      .replace(\"{platform}\", String(platform))\n      .replace(\"{meetName}\", meetname);\n\n    const state = JSON.stringify(this.props.global);\n    const blob = new Blob([state], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, exportname + \".export.openlifter\");\n  };\n\n  // The file input is hidden, and we want to use a button to activate it.\n  // This event handler makes a proxy call to the *real* event handler.\n  handleMergePlatformClick = (day: number, platform: number, event: Record<string, any>) => {\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper !== null) {\n      globalMergeDay = day;\n      globalMergePlatform = platform;\n      loadHelper.click();\n    }\n  };\n\n  // Called when a file is selected for merging platform data.\n  handleLoadFileInput = () => {\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\n      return;\n    }\n\n    // Get the (day, platform) from global state.\n    const day: number = globalMergeDay;\n    const platform: number = globalMergePlatform;\n\n    // Remember the props in the onload() closure.\n    const props = this.props;\n    const language = props.language;\n\n    const rememberThis = this;\n    const selectedFile = loadHelper.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      let error: string | null = null;\n\n      // If this occurs, we've introduced a bug when initiating the file reader, or the read failed.\n      // Add this check as a guard so the typing is narrowed\n      if (typeof reader.result !== \"string\") {\n        window.alert(getString(\"error.internal-error\", language));\n        return;\n      }\n\n      try {\n        const obj: GlobalState = JSON.parse(reader.result);\n\n        // stateVersion must match.\n        if (obj.versions.stateVersion !== props.global.versions.stateVersion) {\n          const e = getString(\"error.version-mismatch\", language);\n          error = e\n            .replace(\"{thisVersion}\", props.global.versions.stateVersion)\n            .replace(\"{otherVersion}\", obj.versions.stateVersion);\n        } else if (obj.meet.name !== props.global.meet.name) {\n          // The meet name must match, for sanity checking.\n          const e = getString(\"error.meetname-mismatch\", language);\n          error = e.replace(\"{thisName}\", props.global.meet.name).replace(\"{otherName}\", obj.meet.name);\n        } else if (!liftingPresentOnPlatform(obj.registration.entries, day, platform)) {\n          // The meet must actually contain data from the given (day, platform).\n          const e = getString(\"error.no-platform-data\", language);\n          error = e.replace(\"{day}\", String(day)).replace(\"{platform}\", String(platform));\n        } else {\n          // Sanity checks passed: fire off a mergePlatform action!\n          const platformEntries = obj.registration.entries.filter(e => {\n            return e.day === day && e.platform === platform;\n          });\n          props.mergePlatform(day, platform, platformEntries);\n        }\n      } catch (err) {\n        error = getString(\"error.not-json\", language);\n      }\n\n      if (typeof error === \"string\") {\n        rememberThis.setState({ error: error });\n      }\n    };\n    reader.readAsText(selectedFile);\n  };\n\n  closeErrorModal = () => {\n    this.setState({ error: \"\" });\n  };\n\n  makePlatformMergeButtons = () => {\n    // Array accessed by platformsHaveLifted[day-1][platform-1].\n    const platformsHaveLifted: Array<Array<boolean>> = getWhetherPlatformsHaveLifted(\n      this.props.global.meet.platformsOnDays,\n      this.props.global.registration.entries\n    );\n\n    const language = this.props.language;\n    const combineTemplate = getString(\"results.combine-platforms-header\", language);\n    const mergeTemplate = getString(\"results.merge-platform\", language);\n    const exportTemplate = getString(\"results.export-platform\", language);\n\n    const forms = [];\n    const numDays = Math.min(this.props.global.meet.lengthDays, platformsHaveLifted.length);\n\n    for (let i = 0; i < numDays; i++) {\n      const liftedOnDay = platformsHaveLifted[i];\n\n      const buttons = [];\n      for (let j = 0; j < liftedOnDay.length; j++) {\n        const lifted = liftedOnDay[j];\n        const variant = lifted === true ? \"success\" : \"warning\";\n        const marginStyle = j > 0 ? { marginLeft: \"14px\" } : undefined;\n\n        const actionTemplate = lifted === true ? exportTemplate : mergeTemplate;\n        buttons.push(\n          <Button\n            key={i + \"-\" + j}\n            variant={variant}\n            style={marginStyle}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n              lifted === true\n                ? this.handleExportPlatformClick(i + 1, j + 1, e)\n                : this.handleMergePlatformClick(i + 1, j + 1, e);\n            }}\n          >\n            {actionTemplate.replace(\"{day}\", String(i + 1)).replace(\"{platform}\", String(j + 1))}\n          </Button>\n        );\n      }\n\n      forms.push(\n        <div key={i}>\n          <div>{combineTemplate.replace(\"{N}\", String(i + 1))}</div>\n          <div>{buttons}</div>\n          {i < platformsHaveLifted.length - 1 ? <br /> : null}\n        </div>\n      );\n    }\n\n    return forms;\n  };\n\n  render() {\n    const language = this.props.language;\n    let results = null;\n    switch (this.state.by) {\n      case \"Division\":\n        results = <ByDivision key={this.state.day} day={this.state.day} />;\n        break;\n      case \"Points\":\n        results = (\n          <ByPoints key={this.state.day} day={this.state.day} ageCoefficients=\"None\" agePointsCategory=\"BestLifter\" />\n        );\n        break;\n      case \"BestMastersLifter\":\n        results = (\n          <ByPoints\n            key={this.state.day}\n            day={this.state.day}\n            ageCoefficients={this.props.global.meet.ageCoefficients}\n            agePointsCategory=\"BestMastersLifter\"\n          />\n        );\n        break;\n      case \"BestJuniorsLifter\":\n        results = (\n          <ByPoints\n            key={this.state.day}\n            day={this.state.day}\n            ageCoefficients={this.props.global.meet.ageCoefficients}\n            agePointsCategory=\"BestJuniorsLifter\"\n          />\n        );\n        break;\n      default:\n        break;\n    }\n\n    let daySelector = null;\n    if (this.props.global.meet.lengthDays > 1) {\n      daySelector = (\n        <FormControl\n          defaultValue={this.state.day.toString()}\n          as=\"select\"\n          onChange={this.handleDayChange}\n          className={`custom-select ${styles.dropdown}`}\n          style={{ marginRight: \"15px\" }}\n        >\n          {this.makeDayOptions()}\n        </FormControl>\n      );\n    }\n\n    return (\n      <div>\n        <ErrorModal\n          error={this.state.error}\n          title={getString(\"results.merge-error-title\", language)}\n          show={this.state.error !== \"\"}\n          close={this.closeErrorModal}\n        />\n\n        <CardDeck>\n          <Card style={{ marginBottom: \"17px\" }}>\n            <Card.Header>\n              <FormattedMessage id=\"results.merge-platforms-card-header\" defaultMessage=\"Merge Platforms\" />\n            </Card.Header>\n            <Card.Body>\n              <div style={{ fontWeight: \"bold\" }}>\n                <FormattedMessage\n                  id=\"results.merge-platforms-warning\"\n                  defaultMessage=\"Merging platforms will overwrite data. Please save before merging.\"\n                />\n              </div>\n              <br />\n              {this.makePlatformMergeButtons()}\n            </Card.Body>\n          </Card>\n\n          <Card style={{ marginBottom: \"17px\" }}>\n            <Card.Header>\n              <FormattedMessage id=\"results.export-results-card-header\" defaultMessage=\"Export Official Results\" />\n            </Card.Header>\n            <Card.Body>\n              <Button onClick={this.handleExportAsOplCsvClick}>\n                <FormattedMessage\n                  id=\"results.export-openpowerlifting-button\"\n                  defaultMessage=\"Export for OpenPowerlifting\"\n                />\n              </Button>\n\n              <Button onClick={this.handleExportAsUSAPLCsvClick} style={{ marginLeft: \"14px\" }}>\n                <FormattedMessage id=\"results.export-usapl-button\" defaultMessage=\"Export for USAPL\" />\n              </Button>\n            </Card.Body>\n          </Card>\n        </CardDeck>\n\n        <Card>\n          <Card.Header>\n            <FormattedMessage id=\"results.results-card-header\" defaultMessage=\"Results For...\" />\n          </Card.Header>\n          <Card.Body className={styles.controlCard}>\n            {daySelector}\n\n            <FormControl\n              defaultValue={this.state.by}\n              as=\"select\"\n              onChange={this.handleByChange}\n              className={`custom-select ${styles.dropdown}`}\n            >\n              <option value=\"Division\">{getString(\"results.by-division\", language)}</option>\n              {this.props.global.meet.ageCoefficients !== \"None\" ? (\n                <option value=\"BestJuniorsLifter\">{getString(\"results.best-juniors-lifter\", language)}</option>\n              ) : null}\n              {this.props.global.meet.ageCoefficients !== \"None\" ? (\n                <option value=\"BestMastersLifter\">{getString(\"results.best-masters-lifter\", language)}</option>\n              ) : null}\n              <option value=\"Points\">{getString(\"results.best-lifter\", language)}</option>\n            </FormControl>\n          </Card.Body>\n        </Card>\n\n        {results}\n\n        <input\n          id=\"loadhelper\"\n          type=\"file\"\n          accept=\".openlifter,.openlifter.txt\"\n          style={{ display: \"none\" }}\n          onChange={this.handleLoadFileInput}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    global: state,\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    mergePlatform: (day, platform, platformEntries) => dispatch(mergePlatform(day, platform, platformEntries))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Results page.\n\nimport React from \"react\";\n\nimport ResultsView from \"../components/results/ResultsView\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass ResultsContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <ResultsView />\n      </div>\n    );\n  }\n}\n\nexport default ResultsContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Common functions shared by the Randomize feature.\n\n// Generate a gibberish string, between 0-11 characters.\nexport const randomString = (): string => {\n  // Converts each digit to a value in base 36.\n  return Math.random()\n    .toString(36)\n    .substr(2);\n};\n\n// Generate a random integer between max and min, inclusive.\nexport const randomInt = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n// Generate a random floating-point number with a set number of fractional digits.\nexport const randomFixedPoint = (min: number, max: number, fixedPoints: number) => {\n  const power = Math.pow(10, fixedPoints);\n\n  // Construct an integer from [0, (max - min + 1) * 10^fixedPoints].\n  const k = Math.floor(Math.random() * (max - min + 1) * power);\n\n  // Translate it back to normal space.\n  return k / power + min;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Randomizes the Meet Setup state, for debugging.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomString, randomInt, randomFixedPoint } from \"./RandomizeHelpers\";\n\nimport {\n  setDivisions,\n  setFederation,\n  setLengthDays,\n  setMeetName,\n  setPlatformsOnDays,\n  setWeightClasses\n} from \"../../actions/meetSetupActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { Sex } from \"../../types/dataTypes\";\n\ninterface DispatchProps {\n  setDivisions: (divisions: Array<string>) => void;\n  setFederation: (federation: string) => void;\n  setLengthDays: (length: number) => void;\n  setMeetName: (name: string) => void;\n  setPlatformsOnDays: (day: number, count: number) => void;\n  setWeightClasses: (sex: Sex, classesKg: number[]) => void;\n}\n\ntype Props = GlobalState & DispatchProps;\n\nconst NonsenseFederations = [\n  \"CTHULHU\",\n  \"USPLAWH\",\n  \"FIREFOX\",\n  \"PIZZAHUT\",\n  \"50% RAW\",\n  \"TODDLERS\",\n  \"COFFEE\",\n  \"THEBORG\",\n  \"LETITSNOW\"\n];\n\nconst NonsenseDivisions = [\"Masters\", \"Juniors\", \"Lawyers\", \"Infants\", \"Turtles\", \"Rabbits\"];\n\nclass RandomizeMeetSetupButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.randomizeMeetSetup = this.randomizeMeetSetup.bind(this);\n  }\n\n  randomizeMeetSetup() {\n    // Set a gibberish MeetName.\n    // ==========================================\n    this.props.setMeetName(randomString() + randomString());\n\n    // Generate a nonsense federation.\n    // ==========================================\n    const fed = NonsenseFederations[randomInt(0, NonsenseFederations.length - 1)];\n    this.props.setFederation(fed);\n\n    // Generate nonsense weight classes.\n    // ==========================================\n    const numClassesMen = randomInt(5, 12);\n    const numClassesWomen = randomInt(4, 8);\n\n    let classesMen = [];\n    for (let i = 0; i < numClassesMen; i++) {\n      classesMen.push(randomFixedPoint(40, 145, 1));\n    }\n    classesMen = classesMen.sort((a, b) => Number(a) - Number(b));\n\n    let classesWomen = [];\n    for (let i = 0; i < numClassesWomen; i++) {\n      classesWomen.push(randomFixedPoint(35, 110, 1));\n    }\n    classesWomen = classesWomen.sort((a, b) => Number(a) - Number(b));\n\n    let classesMx = [];\n    for (let i = 0; i < numClassesWomen; i++) {\n      classesMx.push(randomFixedPoint(40, 120, 1));\n    }\n    classesMx = classesMx.sort((a, b) => Number(a) - Number(b));\n\n    this.props.setWeightClasses(\"M\", classesMen);\n    this.props.setWeightClasses(\"F\", classesWomen);\n    this.props.setWeightClasses(\"Mx\", classesMx);\n\n    // Generate nonsense days and platforms.\n    // ==========================================\n    const numDays = randomInt(1, 4);\n    this.props.setLengthDays(numDays);\n\n    for (let i = 0; i < numDays; i++) {\n      const day = i + 1;\n      const numPlatforms = randomInt(1, 2);\n      this.props.setPlatformsOnDays(day, numPlatforms);\n    }\n\n    // Generate nonsense divisions.\n    // ==========================================\n    const numDivisions = randomInt(1, 20);\n    const divisions = [];\n    for (let i = 0; i < numDivisions; i++) {\n      let div = NonsenseDivisions[randomInt(0, NonsenseDivisions.length - 1)];\n      if (Math.random() > 0.5) {\n        const age_lower = randomInt(1, 40);\n        const age_upper = randomInt(age_lower + 1, 99);\n        div = div + \" \" + String(age_lower) + \"-\" + String(age_upper);\n      }\n\n      // Disallow repeat divisions.\n      if (divisions.indexOf(div) === -1) {\n        divisions.push(div);\n      }\n    }\n    this.props.setDivisions(divisions);\n  }\n\n  render() {\n    return (\n      <Button onClick={this.randomizeMeetSetup}>\n        <LocalizedString id=\"nav.meet-setup\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): GlobalState => ({\n  ...state\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setDivisions: (divisions: Array<string>) => dispatch(setDivisions(divisions)),\n    setFederation: (federation: string) => dispatch(setFederation(federation)),\n    setLengthDays: (length: number) => dispatch(setLengthDays(length)),\n    setMeetName: (name: string) => dispatch(setMeetName(name)),\n    setPlatformsOnDays: (day: number, count: number) => dispatch(setPlatformsOnDays(day, count)),\n    setWeightClasses: (sex: Sex, classesKg: number[]) => dispatch(setWeightClasses(sex, classesKg))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeMeetSetupButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Randomizes the Registration page, for debugging.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomInt } from \"./RandomizeHelpers\";\nimport { newRegistration, deleteRegistration } from \"../../actions/registrationActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Event, Entry, Sex, Equipment, Flight } from \"../../types/dataTypes\";\n\nconst NonsenseFirstNames = [\n  \"Aragorn\",\n  \"Arwen\",\n  \"Aule\",\n  \"Balin\",\n  \"Beorn\",\n  \"Beregond\",\n  \"Bert\",\n  \"Bifur\",\n  \"Bilbo\",\n  \"Bofur\",\n  \"Bolg\",\n  \"Bombur\",\n  \"Boromir\",\n  \"Bregalad\",\n  \"Bullroarer\",\n  \"Bungo\",\n  \"Carc\",\n  \"Celeborn\",\n  \"Dain\",\n  \"Denethor\",\n  \"Dori\",\n  \"Dwalin\",\n  \"Elrohir\",\n  \"Elrond\",\n  \"Eomer\",\n  \"Eowyn\",\n  \"Este\",\n  \"Faramir\",\n  \"Fili\",\n  \"Fredegar\",\n  \"Frodo\",\n  \"Galadriel\",\n  \"Galion\",\n  \"Gandalf\",\n  \"Gimli\",\n  \"Gloin\",\n  \"Glorfindel\",\n  \"Golfimbul\",\n  \"Gollum\",\n  \"Gothmog\",\n  \"Grima\",\n  \"Imrahil\",\n  \"Kili\",\n  \"Legolas\",\n  \"Lorien\",\n  \"Mandos\",\n  \"Manwe\",\n  \"Melkor\",\n  \"Meriadoc\",\n  \"Nessa\",\n  \"Nienna\",\n  \"Nori\",\n  \"Oin\",\n  \"Ori\",\n  \"Orome\",\n  \"Peregrin\",\n  \"Pippin\",\n  \"Radagast\",\n  \"Roac\",\n  \"Samwise\",\n  \"Saruman\",\n  \"Sauron\",\n  \"Shelob\",\n  \"Smaug\",\n  \"Theoden\",\n  \"Thorin\",\n  \"Thranduil\",\n  \"Tom\",\n  \"Treebeard\",\n  \"Tulkas\",\n  \"Ulmo\",\n  \"Vaire\",\n  \"Vana\",\n  \"Varda\",\n  \"William\",\n  \"Yavanna\"\n];\n\nconst NonsenseLastNames = [\n  \"Black\",\n  \"Burbage\",\n  \"Carrow\",\n  \"Cattermole\",\n  \"Chang\",\n  \"Clearwater\",\n  \"Crabbe\",\n  \"Creevey\",\n  \"Crouch\",\n  \"Delacour\",\n  \"Diggory\",\n  \"Dumbledore\",\n  \"Dursley\",\n  \"Edgecombe\",\n  \"Filch\",\n  \"Flitwick\",\n  \"Fudge\",\n  \"Goyle\",\n  \"Granger\",\n  \"Grindelwald\",\n  \"Hagrid\",\n  \"Hufflepuff\",\n  \"Kettleburn\",\n  \"Lockhart\",\n  \"Longbottom\",\n  \"Lovegood\",\n  \"Lupin\",\n  \"Malfoy\",\n  \"Marchbanks\",\n  \"McGonagall\",\n  \"McLaggen\",\n  \"Moody\",\n  \"Nott\",\n  \"Ogden\",\n  \"Ollivander\",\n  \"Parkinson\",\n  \"Pettigrew\",\n  \"Peverell\",\n  \"Pince\",\n  \"Podmore\",\n  \"Pomfrey\",\n  \"Potter\",\n  \"Quirrell\",\n  \"Riddle\",\n  \"Rookwood\",\n  \"Rowle\",\n  \"Runcorn\",\n  \"Scrimgeour\",\n  \"Shacklebolt\",\n  \"Shunpike\",\n  \"Sinistra\",\n  \"Slughorn\",\n  \"Slytherin\",\n  \"Snape\",\n  \"Spinnet\",\n  \"Sprout\",\n  \"Thicknesse\",\n  \"Tonks\",\n  \"Trelawney\",\n  \"Twycross\",\n  \"Umbridge\",\n  \"Vance\",\n  \"Voldemort\",\n  \"Weasley\",\n  \"Wood\",\n  \"Yaxley\",\n  \"Zabini\"\n];\n\ninterface DispatchProps {\n  newRegistration: (obj: Partial<Entry>) => void;\n  deleteRegistration: (entryId: number) => void;\n}\n\ntype Props = GlobalState & DispatchProps;\n\nclass RandomizeRegistrationButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.deleteExistingRegistrations = this.deleteExistingRegistrations.bind(this);\n    this.generateEntries = this.generateEntries.bind(this);\n    this.randomizeRegistration = this.randomizeRegistration.bind(this);\n  }\n\n  deleteExistingRegistrations() {\n    const entryIds = this.props.registration.entries.map(e => e.id);\n    for (let i = 0; i < entryIds.length; i++) {\n      this.props.deleteRegistration(entryIds[i]);\n    }\n  }\n\n  // Generate entries in a flight together, in case we want to give them\n  // similar properties.\n  generateEntries(day: number, platform: number, flight: Flight) {\n    const numLifters = randomInt(6, 18);\n\n    for (let i = 0; i < numLifters; i++) {\n      // Set a nonsense Name.\n      // ==========================================\n      const firstName = NonsenseFirstNames[randomInt(0, NonsenseFirstNames.length - 1)];\n      const lastName = NonsenseLastNames[randomInt(0, NonsenseLastNames.length - 1)];\n      const name = firstName + \" \" + lastName;\n\n      // Set a random Sex.\n      // ==========================================\n      const sexes: Sex[] = [\"M\", \"F\", \"Mx\"];\n      const sex: Sex = sexes[randomInt(0, sexes.length - 1)];\n\n      // Assign a random Team.\n      // ==========================================\n      const teams: string[] = [\"Team Red\", \"Team Green\", \"Team Blue\"];\n      const team: string = teams[randomInt(0, teams.length - 1)];\n\n      // Generate random events, making most lifters SBD.\n      // ==========================================\n      const events: Event[] = [];\n      if (Math.random() < 0.5) {\n        events.push(\"SBD\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"BD\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"S\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"B\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"D\");\n      }\n      if (events.length === 0) {\n        events.push(\"SBD\");\n      }\n\n      // Generate random equipment, making most lifters SBD,\n      // being careful that it matches their events.\n      // ==========================================\n      let hasSquat = false;\n      for (let i = 0; i < events.length; i++) {\n        if (events[i].includes(\"S\")) {\n          hasSquat = true;\n          break;\n        }\n      }\n\n      const equipmentSelect = Math.random();\n      let equipment: Equipment = \"Sleeves\";\n      if (equipmentSelect < 0.7) {\n        // Nothing, sleeves default case.\n      } else if (equipmentSelect < 0.9) {\n        if (hasSquat) {\n          equipment = \"Wraps\";\n        }\n      } else if (equipmentSelect < 0.95) {\n        equipment = \"Single-ply\";\n      } else {\n        equipment = \"Multi-ply\";\n      }\n\n      // File into random divisions.\n      // ==========================================\n      const divisions = [];\n      if (this.props.meet.divisions.length > 0) {\n        const divisionsUpperBound = Math.max(1, this.props.meet.divisions.length - 1);\n        const numDivisions = randomInt(1, divisionsUpperBound);\n\n        // List of remaining available divisions.\n        const divchooser = this.props.meet.divisions.slice();\n\n        for (let i = 0; i < numDivisions; i++) {\n          const choice = randomInt(0, divchooser.length - 1);\n          divisions.push(divchooser[choice]);\n\n          // Delete the choice from the list of available divisions.\n          divchooser.splice(choice, 1);\n        }\n      }\n\n      this.props.newRegistration({\n        day: day,\n        platform: platform,\n        flight: flight,\n        name: name,\n        sex: sex,\n        team: team,\n        events: events,\n        equipment: equipment,\n        divisions: divisions\n      });\n    }\n  }\n\n  randomizeRegistration() {\n    const FLIGHTCHARS: Flight[] = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"];\n\n    this.deleteExistingRegistrations();\n    for (let day = 1; day <= this.props.meet.lengthDays; day++) {\n      const numPlatforms = this.props.meet.platformsOnDays[day - 1];\n      for (let platform = 1; platform <= numPlatforms; platform++) {\n        const numFlights = randomInt(1, 3);\n        for (let flight = 0; flight < numFlights; flight++) {\n          this.generateEntries(day, platform, FLIGHTCHARS[flight]);\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Button onClick={this.randomizeRegistration}>\n        <LocalizedString id=\"nav.registration\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): GlobalState => ({\n  ...state\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\n    deleteRegistration: (entryId: number) => dispatch(deleteRegistration(entryId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeRegistrationButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Randomizes the Registration page, for debugging.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomInt, randomFixedPoint } from \"./RandomizeHelpers\";\nimport { lbs2kg } from \"../../logic/units\";\n\nimport { updateRegistration } from \"../../actions/registrationActions\";\nimport { enterAttempt } from \"../../actions/liftingActions\";\n\nimport { GlobalState, MeetState, RegistrationState } from \"../../types/stateTypes\";\nimport { Entry, Lift } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  registration: RegistrationState;\n}\n\ninterface DispatchProps {\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass RandomizeWeighinsButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.randomizeWeighins = this.randomizeWeighins.bind(this);\n  }\n\n  randomAttempt = () => {\n    const multiple = 2.5;\n    if (this.props.meet.inKg) {\n      return Math.floor(randomFixedPoint(25, 360, 1) / multiple) * multiple;\n    } else {\n      return lbs2kg(Math.floor(randomFixedPoint(55, 800, 1) / multiple) * multiple);\n    }\n  };\n\n  randomizeWeighins = () => {\n    const entries = this.props.registration.entries;\n    const inKg: boolean = this.props.meet.inKg;\n\n    for (let i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n\n      // Get a random bodyweight.\n      // ==========================================\n      const bodyweightKg = inKg ? randomFixedPoint(20, 150, 1) : lbs2kg(randomFixedPoint(40, 320, 1));\n      this.props.updateRegistration(entry.id, {\n        bodyweightKg: bodyweightKg\n      });\n\n      // Get a random age.\n      const age = randomInt(5, 79);\n      this.props.updateRegistration(entry.id, {\n        age: age\n      });\n\n      // Figure out which events we're generating information for.\n      // ==========================================\n      let hasSquat = false;\n      let hasBench = false;\n      let hasDeadlift = false;\n      for (let j = 0; j < entry.events.length; j++) {\n        const e = entry.events[j];\n        if (e.includes(\"S\")) {\n          hasSquat = true;\n        }\n        if (e.includes(\"B\")) {\n          hasBench = true;\n        }\n        if (e.includes(\"D\")) {\n          hasDeadlift = true;\n        }\n      }\n\n      // Set attempts.\n      // ==========================================\n      if (hasSquat) {\n        this.props.enterAttempt(entry.id, \"S\", 1, this.randomAttempt());\n      }\n      if (hasBench) {\n        this.props.enterAttempt(entry.id, \"B\", 1, this.randomAttempt());\n      }\n      if (hasDeadlift) {\n        this.props.enterAttempt(entry.id, \"D\", 1, this.randomAttempt());\n      }\n\n      // Set rack info.\n      // ==========================================\n      if (hasSquat) {\n        const height = String(randomInt(2, 18));\n        const pos = Math.random() < 0.9 ? \"out\" : \"in\";\n        this.props.updateRegistration(entry.id, {\n          squatRackInfo: height + pos\n        });\n      }\n\n      if (hasBench) {\n        const height = String(randomInt(0, 12));\n        const safety = String(randomInt(0, 4));\n        this.props.updateRegistration(entry.id, {\n          benchRackInfo: height + \"/\" + safety\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Button onClick={this.randomizeWeighins}>\n        <LocalizedString id=\"nav.weigh-ins\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  meet: state.meet,\n  registration: state.registration\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  updateRegistration: (entryId, obj) => dispatch(updateRegistration(entryId, obj)),\n  enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\n    dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeWeighinsButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Tools for manipulating state information to aid debugging.\n\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Card from \"react-bootstrap/Card\";\n\nimport RandomizeMeetSetupButton from \"./RandomizeMeetSetup\";\nimport RandomizeRegistrationButton from \"./RandomizeRegistration\";\nimport RandomizeWeighinsButton from \"./RandomizeWeighins\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\n\nclass StateTools extends React.Component<GlobalState> {\n  // The simplest possible way to implement a Reset button.\n  reInitializeRedux = () => {\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <div>\n        <Card style={{ marginBottom: \"17px\" }}>\n          <Card.Header>\n            <FormattedMessage id=\"debug.generator-card-header\" defaultMessage=\"Generate Random Valid Data\" />\n          </Card.Header>\n          <Card.Body>\n            <Button style={{ marginRight: \"15px\" }} variant=\"danger\" onClick={this.reInitializeRedux}>\n              <FormattedMessage id=\"debug.button-reset\" defaultMessage=\"Reset\" />\n            </Button>\n            <ButtonGroup>\n              <RandomizeMeetSetupButton />\n              <RandomizeRegistrationButton />\n              <RandomizeWeighinsButton />\n            </ButtonGroup>\n          </Card.Body>\n        </Card>\n\n        <Card>\n          <Card.Header>\n            <FormattedMessage id=\"debug.state-card-header\" defaultMessage=\"Redux State\" />\n          </Card.Header>\n          <Card.Body>\n            <pre>{JSON.stringify(this.props, null, 2)}</pre>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): GlobalState => ({\n  ...state\n});\n\nexport default connect(mapStateToProps)(StateTools);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// A page dedicated to debugging tools.\n\nimport React from \"react\";\n\nimport StateTools from \"../components/debug/StateTools\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nconst DebugContainer = () => {\n  return (\n    <div className={styles.contentArea}>\n      <StateTools />\n    </div>\n  );\n};\n\nexport default DebugContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport styles from \"../components/common/ContentArea.module.scss\";\n\n// Extracted out so that <pre> renders linebreaks properly.\nconst licenseText =\n  \"This program is free software: you can redistribute it and/or modify\\n\" +\n  \"it under the terms of the GNU Affero General Public License as\\n\" +\n  \"published by the Free Software Foundation, either version 3 of the\\n\" +\n  \"License, or (at your option) any later version.\\n\" +\n  \"\\n\" +\n  \"This program is distributed in the hope that it will be useful,\\n\" +\n  \"but WITHOUT ANY WARRANTY; without even the implied warranty of\\n\" +\n  \"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n\" +\n  \"GNU Affero General Public License for more details.\";\n\nclass AboutContainer extends React.Component<{}> {\n  render() {\n    return (\n      <Container className={styles.contentArea}>\n        <Row>\n          <Col md={6}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"about.credits-header\" defaultMessage=\"Credits\" />\n              </Card.Header>\n              <Card.Body>\n                <p>\n                  <FormattedMessage\n                    id=\"about.made-by\"\n                    defaultMessage=\"OpenLifter is made by the OpenPowerlifting project.\"\n                  />\n                </p>\n                <p>\n                  <a href=\"https://www.openpowerlifting.org\" rel=\"noopener noreferrer\" target=\"_blank\">\n                    OpenPowerlifting.org\n                  </a>\n                </p>\n                <p>\n                  <FormattedMessage id=\"about.credits-intro\" defaultMessage=\"Thanks to:\" />\n                  <ul>\n                    <li>Irene Aguilar &mdash; Spanish localization</li>\n                    <li>Baptiste Appel &mdash; French localization</li>\n                    <li>Baptiste Marchais &mdash; French localization</li>\n                    <li>Romina Basting &mdash; German localization</li>\n                    <li>Mike Beelen &mdash; Dutch localization</li>\n                    <li>Sean Berlin &mdash; Patron</li>\n                    <li>Jerônimo Cavalcante &mdash; Portuguese localization</li>\n                    <li>Arman Danielyan &mdash; Russian localization</li>\n                    <li>Tommy DeFea &mdash; Graphic design</li>\n                    <li>Alper Dokucu &mdash; Turkish localization</li>\n                    <li>David Jasiulewicz &mdash; Patron</li>\n                    <li>Jared Klopper &mdash; Programming</li>\n                    <li>Boris Lerner &mdash; Russian localization</li>\n                    <li>Kai Ma &mdash; Simplified Chinese localization</li>\n                    <li>Rodney Marsh &mdash; Programming</li>\n                    <li>Giulio Maschi &mdash; Italian localization</li>\n                    <li>Trystan Oakley &mdash; Testing</li>\n                    <li>Matt Pearce &mdash; Coefficient calculations</li>\n                    <li>David Sacras &mdash; Portuguese localization</li>\n                    <li>Alan Sambol &mdash; Croatian localization</li>\n                    <li>Milena Schaefer &mdash; German localization</li>\n                    <li>Sean Stangl &mdash; Programming and maintenance</li>\n                    <li>Michael Vessia &mdash; Programming and maintenance</li>\n                    <li>Andrius Virbičianskas &mdash; Lithuanian localization</li>\n                    <li>Sarah Wellberg &mdash; UX design and testing</li>\n                    <li>Jo Whiteley &mdash; Testing</li>\n                  </ul>\n                </p>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col md={6}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"about.license-header\" defaultMessage=\"License\" />\n              </Card.Header>\n              <Card.Body>\n                <p>\n                  <FormattedMessage\n                    id=\"about.copyright\"\n                    defaultMessage=\"OpenLifter is Copyright (C) 2018-2019 The OpenPowerlifting Project.\"\n                  />\n                </p>\n                <p>\n                  <FormattedMessage\n                    id=\"about.freedom-intro\"\n                    defaultMessage=\"OpenLifter is Free Software. Free Software grants you the following freedoms:\"\n                  />\n                </p>\n                <ol>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-0\"\n                      defaultMessage=\"The freedom to run the program as you wish, for any purpose.\"\n                    />\n                  </li>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-1\"\n                      defaultMessage=\"The freedom to study how the program works, and change it as you wish.\"\n                    />\n                  </li>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-2\"\n                      defaultMessage=\"The freedom to redistribute copies so you can help others.\"\n                    />\n                  </li>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-3\"\n                      defaultMessage=\"The freedom to distribute copies of your modified versions to others.\"\n                    />\n                  </li>\n                </ol>\n                <p>\n                  <FormattedMessage\n                    id=\"about.freedom-quick-summary\"\n                    defaultMessage=\"The AGPLv3+ license we use means that if you distribute this software or host it on a server, you must give your users the same rights we give you, including full source code. In addition, AGPLv3+ code must remain free/libre, and cannot be included in proprietary software or in free/libre software with a weaker or incompatible license.\"\n                  />\n                </p>\n                <p>\n                  <FormattedMessage\n                    id=\"about.agpl-short-english-intro\"\n                    defaultMessage=\"Here is the short English license blurb:\"\n                  />\n                </p>\n                <pre>{licenseText}</pre>\n                <a href=\"https://www.gnu.org/licenses/agpl-3.0.en.html\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <FormattedMessage\n                    id=\"about.link-full-agpl-license\"\n                    defaultMessage=\"Full Text of the GNU Affero General Public License, Version 3\"\n                  />\n                </a>\n                <br />\n                <a href=\"https://www.gnu.org/licenses/gpl-faq.html\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <FormattedMessage id=\"about.link-gnu-faq\" defaultMessage=\"FAQ about GNU Licenses\" />\n                </a>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default AboutContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The RootContainer manually implements route parsing from GET parameters.\n//\n// The issue is that because OpenLifter is statically hosted, only the base\n// \"/\" route actually contains the index.html of the application. The other\n// routes (such as \"/lifting\") have index.html files that redirect to \"/\".\n//\n// We've changed things so that \"/lifting/index.html\" redirects to \"/?lifting\".\n// But React Router isn't able to route based on GET parameters.\n//\n// Therefore it's set up so that \"/\" routes to this RootContainer,\n// and the RootContainer inspects the GET parameters and renders the\n// appropriate container.\n\nimport React from \"react\";\n\nimport HomeContainer from \"./HomeContainer\";\nimport MeetSetupContainer from \"./MeetSetupContainer\";\nimport RegistrationContainer from \"./RegistrationContainer\";\nimport WeighinsContainer from \"./WeighinsContainer\";\nimport LiftingContainer from \"./LiftingContainer\";\nimport FlightOrderContainer from \"./FlightOrderContainer\";\nimport ResultsContainer from \"./ResultsContainer\";\nimport DebugContainer from \"./DebugContainer\";\nimport AboutContainer from \"./AboutContainer\";\n\nclass RootContainer extends React.Component {\n  render() {\n    if (typeof window.location.search !== \"string\") {\n      return <HomeContainer />;\n    }\n\n    switch (window.location.search) {\n      case \"?meet-setup\":\n        return <MeetSetupContainer />;\n      case \"?registration\":\n        return <RegistrationContainer />;\n      case \"?weigh-ins\":\n        return <WeighinsContainer />;\n      case \"?flight-order\":\n        return <FlightOrderContainer />;\n      case \"?lifting\":\n        return <LiftingContainer />;\n      case \"?results\":\n        return <ResultsContainer />;\n      case \"?debug\":\n        return <DebugContainer />;\n      case \"?about\":\n        return <AboutContainer />;\n      default:\n        return <HomeContainer />;\n    }\n  }\n}\n\nexport default RootContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the Navigation component for navigating between pages using react-router.\n\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\n// The LinkContainer is used to wrap Components that change the URL,\n// hooking them up with the Router.\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst Navigation = () => {\n  return (\n    <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand>\n        <img alt=\"OpenLifter\" src=\"openlifter-white.svg\" height=\"20\" />\n      </Navbar.Brand>\n\n      {/* Navbar uses Toggle and Collapse to automatically create a hamburger menu\n          in case of overflow on small screens.*/}\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse>\n        <Nav>\n          <LinkContainer exact to=\"/\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.home\" defaultMessage=\"Home\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/meet-setup\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.meet-setup\" defaultMessage=\"Meet Setup\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/registration\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.registration\" defaultMessage=\"Registration\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/weigh-ins\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.weigh-ins\" defaultMessage=\"Weigh-ins\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/flight-order\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.flight-order\" defaultMessage=\"Flight Order\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/lifting\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.lifting\" defaultMessage=\"Lifting\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/results\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.results\" defaultMessage=\"Results\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/debug\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.debug\" defaultMessage=\"Debug\" />\n            </Nav.Link>\n          </LinkContainer>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nimport { GlobalState } from \"./types/stateTypes\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default function configureStore(initialState: Partial<GlobalState> = {}) {\n  const store = createStore(persistedReducer, initialState, applyMiddleware(thunk));\n  const persistor = persistStore(store);\n  return { store, persistor };\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport OpenLifterIntlProvider from \"./components/translations/OpenLifterIntlProvider\";\n\nimport RootContainer from \"./containers/RootContainer\";\nimport MeetSetupContainer from \"./containers/MeetSetupContainer\";\nimport RegistrationContainer from \"./containers/RegistrationContainer\";\nimport WeighinsContainer from \"./containers/WeighinsContainer\";\nimport LiftingContainer from \"./containers/LiftingContainer\";\nimport FlightOrderContainer from \"./containers/FlightOrderContainer\";\nimport ResultsContainer from \"./containers/ResultsContainer\";\nimport DebugContainer from \"./containers/DebugContainer\";\nimport AboutContainer from \"./containers/AboutContainer\";\nimport Navigation from \"./components/Navigation\";\n\nimport configureStore from \"./store\";\n\nimport { getDefaultLanguage } from \"./logic/strings\";\n\nclass App extends React.Component {\n  render() {\n    const { store, persistor } = configureStore({ language: getDefaultLanguage() });\n\n    return (\n      // Provider is a React component from the react-redux library.\n      // Its purpose is to \"provide\" the given store to its child components.\n      // Because the Provider wraps the whole App here, the store is global state.\n      //\n      // Switch iterates over its children (Routes) and renders the first one that matches the current path name\n      //\n      // Route takes a path and a component, and renders the given component if the current path matches the specified path.\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <OpenLifterIntlProvider>\n            <Router basename={process.env.REACT_APP_ROUTER_BASENAME}>\n              <div>\n                <Navigation />\n                <Switch>\n                  <Route exact path=\"/\" component={RootContainer} />\n                  <Route path=\"/meet-setup\" component={MeetSetupContainer} />\n                  <Route path=\"/registration\" component={RegistrationContainer} />\n                  <Route path=\"/weigh-ins\" component={WeighinsContainer} />\n                  <Route path=\"/flight-order\" component={FlightOrderContainer} />\n                  <Route path=\"/lifting\" component={LiftingContainer} />\n                  <Route path=\"/results\" component={ResultsContainer} />\n                  <Route path=\"/debug\" component={DebugContainer} />\n                  <Route path=\"/about\" component={AboutContainer} />\n                </Switch>\n              </div>\n            </Router>\n          </OpenLifterIntlProvider>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nimport \"./bootstrap-custom/bootstrap.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement !== null) {\n  ReactDOM.render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LeftCard_container__2XjgL\",\"activeCard\":\"LeftCard_activeCard__1M9K6\",\"loadingBar\":\"LeftCard_loadingBar__2trT4\",\"attemptText\":\"LeftCard_attemptText__1JsZg\",\"barArea\":\"LeftCard_barArea__3OqZl\",\"nextText\":\"LeftCard_nextText__2cIaN\"};"],"sourceRoot":""}